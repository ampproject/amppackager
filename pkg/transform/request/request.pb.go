// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/transform/request/request.proto

package request // import "github.com/ampproject/amppackager/pkg/transform/request"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A Request encapsulates input and contextual parameters for use by the
// local transformation library.
type Request struct {
	// The AMP HTML document to transform.
	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	// The URL of the document.
	DocumentUrl string `protobuf:"bytes,2,opt,name=document_url,json=documentUrl,proto3" json:"document_url,omitempty"`
	// The list of transformers to execute. Leave empty to run the default set.
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this field in a production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Transformers []string `protobuf:"bytes,3,rep,name=transformers,proto3" json:"transformers,omitempty"`
	// The AMP runtime version.
	Rtv string `protobuf:"bytes,4,opt,name=rtv,proto3" json:"rtv,omitempty"`
	// The CSS contents to inline into the transformed HTML
	Css                  string   `protobuf:"bytes,5,opt,name=css,proto3" json:"css,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_81b50106502fbeba, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *Request) GetDocumentUrl() string {
	if m != nil {
		return m.DocumentUrl
	}
	return ""
}

func (m *Request) GetTransformers() []string {
	if m != nil {
		return m.Transformers
	}
	return nil
}

func (m *Request) GetRtv() string {
	if m != nil {
		return m.Rtv
	}
	return ""
}

func (m *Request) GetCss() string {
	if m != nil {
		return m.Css
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "amp.transform.Request")
}

func init() {
	proto.RegisterFile("pkg/transform/request/request.proto", fileDescriptor_request_81b50106502fbeba)
}

var fileDescriptor_request_81b50106502fbeba = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0xc8, 0x4e, 0xd7,
	0x2f, 0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0xcb, 0x2f, 0xca, 0xd5, 0x2f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x81, 0xd1, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xbc, 0x89, 0xb9, 0x05, 0x7a, 0x70,
	0x45, 0x4a, 0x1d, 0x8c, 0x5c, 0xec, 0x41, 0x10, 0x05, 0x42, 0x42, 0x5c, 0x2c, 0x19, 0x25, 0xb9,
	0x39, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x22, 0x17, 0x4f, 0x4a, 0x7e,
	0x72, 0x69, 0x6e, 0x6a, 0x5e, 0x49, 0x7c, 0x69, 0x51, 0x8e, 0x04, 0x13, 0x58, 0x8e, 0x1b, 0x26,
	0x16, 0x5a, 0x94, 0x23, 0xa4, 0xc4, 0xc5, 0x03, 0x37, 0x2f, 0xb5, 0xa8, 0x58, 0x82, 0x59, 0x81,
	0x59, 0x83, 0x33, 0x08, 0x45, 0x4c, 0x48, 0x80, 0x8b, 0xb9, 0xa8, 0xa4, 0x4c, 0x82, 0x05, 0xac,
	0x1b, 0xc4, 0x04, 0x89, 0x24, 0x17, 0x17, 0x4b, 0xb0, 0x42, 0x44, 0x92, 0x8b, 0x8b, 0x9d, 0x2c,
	0xa3, 0xcc, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x13, 0x73, 0x0b,
	0x0a, 0x8a, 0xf2, 0xb3, 0x52, 0x93, 0x4b, 0xc0, 0xcc, 0xc4, 0xe4, 0xec, 0xc4, 0xf4, 0xd4, 0x22,
	0x7d, 0xac, 0x5e, 0x4c, 0x62, 0x03, 0xfb, 0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x7f,
	0xda, 0x1f, 0x02, 0x01, 0x00, 0x00,
}
