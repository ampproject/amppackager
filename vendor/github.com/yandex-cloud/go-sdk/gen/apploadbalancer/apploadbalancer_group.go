// Code generated by sdkgen. DO NOT EDIT.

package apploadbalancer

import (
	"context"

	"google.golang.org/grpc"
)

// LoadBalancer provides access to "apploadbalancer" component of Yandex.Cloud
type LoadBalancer struct {
	getConn func(ctx context.Context) (*grpc.ClientConn, error)
}

// NewLoadBalancer creates instance of LoadBalancer
func NewLoadBalancer(g func(ctx context.Context) (*grpc.ClientConn, error)) *LoadBalancer {
	return &LoadBalancer{g}
}

// LoadBalancer gets LoadBalancerService client
func (l *LoadBalancer) LoadBalancer() *LoadBalancerServiceClient {
	return &LoadBalancerServiceClient{getConn: l.getConn}
}

// TargetGroup gets TargetGroupService client
func (l *LoadBalancer) TargetGroup() *TargetGroupServiceClient {
	return &TargetGroupServiceClient{getConn: l.getConn}
}

// BackendGroup gets BackendGroupService client
func (l *LoadBalancer) BackendGroup() *BackendGroupServiceClient {
	return &BackendGroupServiceClient{getConn: l.getConn}
}

// HttpRouter gets HttpRouterService client
func (l *LoadBalancer) HttpRouter() *HttpRouterServiceClient {
	return &HttpRouterServiceClient{getConn: l.getConn}
}

// VirtualHost gets VirtualHostService client
func (l *LoadBalancer) VirtualHost() *VirtualHostServiceClient {
	return &VirtualHostServiceClient{getConn: l.getConn}
}
