// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/organizationmanager/v1/group_mapping_service.proto

package organizationmanager

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupMappingItemDelta_Action int32

const (
	GroupMappingItemDelta_ACTION_UNSPECIFIED GroupMappingItemDelta_Action = 0
	// Group mapping item is to be added
	GroupMappingItemDelta_ADD GroupMappingItemDelta_Action = 1
	// Group mapping item is to be removed
	GroupMappingItemDelta_REMOVE GroupMappingItemDelta_Action = 2
)

// Enum value maps for GroupMappingItemDelta_Action.
var (
	GroupMappingItemDelta_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ADD",
		2: "REMOVE",
	}
	GroupMappingItemDelta_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ADD":                1,
		"REMOVE":             2,
	}
)

func (x GroupMappingItemDelta_Action) Enum() *GroupMappingItemDelta_Action {
	p := new(GroupMappingItemDelta_Action)
	*p = x
	return p
}

func (x GroupMappingItemDelta_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupMappingItemDelta_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_enumTypes[0].Descriptor()
}

func (GroupMappingItemDelta_Action) Type() protoreflect.EnumType {
	return &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_enumTypes[0]
}

func (x GroupMappingItemDelta_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupMappingItemDelta_Action.Descriptor instead.
func (GroupMappingItemDelta_Action) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{9, 0}
}

type GetGroupMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
}

func (x *GetGroupMappingRequest) Reset() {
	*x = GetGroupMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMappingRequest) ProtoMessage() {}

func (x *GetGroupMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMappingRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMappingRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetGroupMappingRequest) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

type GetGroupMappingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMapping *GroupMapping `protobuf:"bytes,1,opt,name=group_mapping,json=groupMapping,proto3" json:"group_mapping,omitempty"`
}

func (x *GetGroupMappingResponse) Reset() {
	*x = GetGroupMappingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMappingResponse) ProtoMessage() {}

func (x *GetGroupMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMappingResponse.ProtoReflect.Descriptor instead.
func (*GetGroupMappingResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetGroupMappingResponse) GetGroupMapping() *GroupMapping {
	if x != nil {
		return x.GroupMapping
	}
	return nil
}

type CreateGroupMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Federation the group mapping will be created for
	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
	// Synchronization status.
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *CreateGroupMappingRequest) Reset() {
	*x = CreateGroupMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupMappingRequest) ProtoMessage() {}

func (x *CreateGroupMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupMappingRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupMappingRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGroupMappingRequest) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

func (x *CreateGroupMappingRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type CreateGroupMappingMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
}

func (x *CreateGroupMappingMetadata) Reset() {
	*x = CreateGroupMappingMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupMappingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupMappingMetadata) ProtoMessage() {}

func (x *CreateGroupMappingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupMappingMetadata.ProtoReflect.Descriptor instead.
func (*CreateGroupMappingMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGroupMappingMetadata) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

// Request for updating group mapping configuration
type UpdateGroupMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Federation the group mapping update is requested
	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
	// A set of fields that should be updated
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// A new state of synchronization to update (if mentioned in update_mask).
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *UpdateGroupMappingRequest) Reset() {
	*x = UpdateGroupMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMappingRequest) ProtoMessage() {}

func (x *UpdateGroupMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMappingRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupMappingRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateGroupMappingRequest) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

func (x *UpdateGroupMappingRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateGroupMappingRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateGroupMappingMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
}

func (x *UpdateGroupMappingMetadata) Reset() {
	*x = UpdateGroupMappingMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMappingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMappingMetadata) ProtoMessage() {}

func (x *UpdateGroupMappingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMappingMetadata.ProtoReflect.Descriptor instead.
func (*UpdateGroupMappingMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateGroupMappingMetadata) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

type DeleteGroupMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Federation the group mapping deletion is requested
	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
}

func (x *DeleteGroupMappingRequest) Reset() {
	*x = DeleteGroupMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupMappingRequest) ProtoMessage() {}

func (x *DeleteGroupMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupMappingRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupMappingRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteGroupMappingRequest) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

type DeleteGroupMappingMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
}

func (x *DeleteGroupMappingMetadata) Reset() {
	*x = DeleteGroupMappingMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupMappingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupMappingMetadata) ProtoMessage() {}

func (x *DeleteGroupMappingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupMappingMetadata.ProtoReflect.Descriptor instead.
func (*DeleteGroupMappingMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteGroupMappingMetadata) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

// Request for updating group mapping configuration
type UpdateGroupMappingItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Federation the group mapping update is requested
	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
	// A collection of mapping items to add or remove (ignores update_fields).
	GroupMappingItemDeltas []*GroupMappingItemDelta `protobuf:"bytes,4,rep,name=group_mapping_item_deltas,json=groupMappingItemDeltas,proto3" json:"group_mapping_item_deltas,omitempty"`
}

func (x *UpdateGroupMappingItemsRequest) Reset() {
	*x = UpdateGroupMappingItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMappingItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMappingItemsRequest) ProtoMessage() {}

func (x *UpdateGroupMappingItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMappingItemsRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupMappingItemsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateGroupMappingItemsRequest) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

func (x *UpdateGroupMappingItemsRequest) GetGroupMappingItemDeltas() []*GroupMappingItemDelta {
	if x != nil {
		return x.GroupMappingItemDeltas
	}
	return nil
}

// Message describes the user's request to change (add or remove) a single group mapping.
type GroupMappingItemDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   *GroupMappingItem            `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Action GroupMappingItemDelta_Action `protobuf:"varint,2,opt,name=action,proto3,enum=yandex.cloud.organizationmanager.v1.GroupMappingItemDelta_Action" json:"action,omitempty"`
}

func (x *GroupMappingItemDelta) Reset() {
	*x = GroupMappingItemDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMappingItemDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMappingItemDelta) ProtoMessage() {}

func (x *GroupMappingItemDelta) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMappingItemDelta.ProtoReflect.Descriptor instead.
func (*GroupMappingItemDelta) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{9}
}

func (x *GroupMappingItemDelta) GetItem() *GroupMappingItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GroupMappingItemDelta) GetAction() GroupMappingItemDelta_Action {
	if x != nil {
		return x.Action
	}
	return GroupMappingItemDelta_ACTION_UNSPECIFIED
}

type UpdateGroupMappingItemsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
}

func (x *UpdateGroupMappingItemsMetadata) Reset() {
	*x = UpdateGroupMappingItemsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMappingItemsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMappingItemsMetadata) ProtoMessage() {}

func (x *UpdateGroupMappingItemsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMappingItemsMetadata.ProtoReflect.Descriptor instead.
func (*UpdateGroupMappingItemsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateGroupMappingItemsMetadata) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

type UpdateGroupMappingItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Effective changes that were applied
	GroupMappingItemDeltas []*GroupMappingItemDelta `protobuf:"bytes,4,rep,name=group_mapping_item_deltas,json=groupMappingItemDeltas,proto3" json:"group_mapping_item_deltas,omitempty"`
}

func (x *UpdateGroupMappingItemsResponse) Reset() {
	*x = UpdateGroupMappingItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMappingItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMappingItemsResponse) ProtoMessage() {}

func (x *UpdateGroupMappingItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMappingItemsResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupMappingItemsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateGroupMappingItemsResponse) GetGroupMappingItemDeltas() []*GroupMappingItemDelta {
	if x != nil {
		return x.GroupMappingItemDeltas
	}
	return nil
}

type ListGroupMappingItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FederationId string `protobuf:"bytes,1,opt,name=federation_id,json=federationId,proto3" json:"federation_id,omitempty"`
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter       string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListGroupMappingItemsRequest) Reset() {
	*x = ListGroupMappingItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupMappingItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupMappingItemsRequest) ProtoMessage() {}

func (x *ListGroupMappingItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupMappingItemsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupMappingItemsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListGroupMappingItemsRequest) GetFederationId() string {
	if x != nil {
		return x.FederationId
	}
	return ""
}

func (x *ListGroupMappingItemsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGroupMappingItemsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListGroupMappingItemsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListGroupMappingItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMappingItems []*GroupMappingItem `protobuf:"bytes,1,rep,name=group_mapping_items,json=groupMappingItems,proto3" json:"group_mapping_items,omitempty"`
	NextPageToken     string              `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListGroupMappingItemsResponse) Reset() {
	*x = ListGroupMappingItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupMappingItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupMappingItemsResponse) ProtoMessage() {}

func (x *ListGroupMappingItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupMappingItemsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupMappingItemsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListGroupMappingItemsResponse) GetGroupMappingItems() []*GroupMappingItem {
	if x != nil {
		return x.GroupMappingItems
	}
	return nil
}

func (x *ListGroupMappingItemsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_organizationmanager_v1_group_mapping_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x23, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x37, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31,
	0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x6e, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0c, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x41, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa5, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30,
	0x52, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x41, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7,
	0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0c, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c,
	0x3d, 0x35, 0x30, 0x52, 0x0c, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x81, 0x01, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x42, 0x0a, 0x82, 0xc8, 0x31, 0x06, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x16, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x04, 0x22, 0xf4, 0x01, 0x0a, 0x15,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x59, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x41, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x10, 0x02, 0x22, 0x46, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x1f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75,
	0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x16, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8,
	0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0c, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0xc7,
	0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x8a, 0xc8, 0x31, 0x06, 0x3c, 0x3d, 0x32, 0x30,
	0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x8a,
	0xc8, 0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0xae, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x32, 0xd0, 0x07, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x3b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9b, 0x01,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0xb2, 0xd2, 0x2a,
	0x2a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x9b, 0x01, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0xb2, 0xd2, 0x2a, 0x2a, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0xa4, 0x01, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0xb2, 0xd2, 0x2a, 0x33, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x92, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x41,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x42, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x43, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0xb2,
	0xd2, 0x2a, 0x42, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x86, 0x01, 0x0a, 0x27, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x5a, 0x5b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescData = file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDesc
)

func file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescData)
	})
	return file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDescData
}

var file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_goTypes = []interface{}{
	(GroupMappingItemDelta_Action)(0),       // 0: yandex.cloud.organizationmanager.v1.GroupMappingItemDelta.Action
	(*GetGroupMappingRequest)(nil),          // 1: yandex.cloud.organizationmanager.v1.GetGroupMappingRequest
	(*GetGroupMappingResponse)(nil),         // 2: yandex.cloud.organizationmanager.v1.GetGroupMappingResponse
	(*CreateGroupMappingRequest)(nil),       // 3: yandex.cloud.organizationmanager.v1.CreateGroupMappingRequest
	(*CreateGroupMappingMetadata)(nil),      // 4: yandex.cloud.organizationmanager.v1.CreateGroupMappingMetadata
	(*UpdateGroupMappingRequest)(nil),       // 5: yandex.cloud.organizationmanager.v1.UpdateGroupMappingRequest
	(*UpdateGroupMappingMetadata)(nil),      // 6: yandex.cloud.organizationmanager.v1.UpdateGroupMappingMetadata
	(*DeleteGroupMappingRequest)(nil),       // 7: yandex.cloud.organizationmanager.v1.DeleteGroupMappingRequest
	(*DeleteGroupMappingMetadata)(nil),      // 8: yandex.cloud.organizationmanager.v1.DeleteGroupMappingMetadata
	(*UpdateGroupMappingItemsRequest)(nil),  // 9: yandex.cloud.organizationmanager.v1.UpdateGroupMappingItemsRequest
	(*GroupMappingItemDelta)(nil),           // 10: yandex.cloud.organizationmanager.v1.GroupMappingItemDelta
	(*UpdateGroupMappingItemsMetadata)(nil), // 11: yandex.cloud.organizationmanager.v1.UpdateGroupMappingItemsMetadata
	(*UpdateGroupMappingItemsResponse)(nil), // 12: yandex.cloud.organizationmanager.v1.UpdateGroupMappingItemsResponse
	(*ListGroupMappingItemsRequest)(nil),    // 13: yandex.cloud.organizationmanager.v1.ListGroupMappingItemsRequest
	(*ListGroupMappingItemsResponse)(nil),   // 14: yandex.cloud.organizationmanager.v1.ListGroupMappingItemsResponse
	(*GroupMapping)(nil),                    // 15: yandex.cloud.organizationmanager.v1.GroupMapping
	(*fieldmaskpb.FieldMask)(nil),           // 16: google.protobuf.FieldMask
	(*GroupMappingItem)(nil),                // 17: yandex.cloud.organizationmanager.v1.GroupMappingItem
	(*operation.Operation)(nil),             // 18: yandex.cloud.operation.Operation
}
var file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_depIdxs = []int32{
	15, // 0: yandex.cloud.organizationmanager.v1.GetGroupMappingResponse.group_mapping:type_name -> yandex.cloud.organizationmanager.v1.GroupMapping
	16, // 1: yandex.cloud.organizationmanager.v1.UpdateGroupMappingRequest.update_mask:type_name -> google.protobuf.FieldMask
	10, // 2: yandex.cloud.organizationmanager.v1.UpdateGroupMappingItemsRequest.group_mapping_item_deltas:type_name -> yandex.cloud.organizationmanager.v1.GroupMappingItemDelta
	17, // 3: yandex.cloud.organizationmanager.v1.GroupMappingItemDelta.item:type_name -> yandex.cloud.organizationmanager.v1.GroupMappingItem
	0,  // 4: yandex.cloud.organizationmanager.v1.GroupMappingItemDelta.action:type_name -> yandex.cloud.organizationmanager.v1.GroupMappingItemDelta.Action
	10, // 5: yandex.cloud.organizationmanager.v1.UpdateGroupMappingItemsResponse.group_mapping_item_deltas:type_name -> yandex.cloud.organizationmanager.v1.GroupMappingItemDelta
	17, // 6: yandex.cloud.organizationmanager.v1.ListGroupMappingItemsResponse.group_mapping_items:type_name -> yandex.cloud.organizationmanager.v1.GroupMappingItem
	1,  // 7: yandex.cloud.organizationmanager.v1.GroupMappingService.Get:input_type -> yandex.cloud.organizationmanager.v1.GetGroupMappingRequest
	3,  // 8: yandex.cloud.organizationmanager.v1.GroupMappingService.Create:input_type -> yandex.cloud.organizationmanager.v1.CreateGroupMappingRequest
	5,  // 9: yandex.cloud.organizationmanager.v1.GroupMappingService.Update:input_type -> yandex.cloud.organizationmanager.v1.UpdateGroupMappingRequest
	7,  // 10: yandex.cloud.organizationmanager.v1.GroupMappingService.Delete:input_type -> yandex.cloud.organizationmanager.v1.DeleteGroupMappingRequest
	13, // 11: yandex.cloud.organizationmanager.v1.GroupMappingService.ListItems:input_type -> yandex.cloud.organizationmanager.v1.ListGroupMappingItemsRequest
	9,  // 12: yandex.cloud.organizationmanager.v1.GroupMappingService.UpdateItems:input_type -> yandex.cloud.organizationmanager.v1.UpdateGroupMappingItemsRequest
	2,  // 13: yandex.cloud.organizationmanager.v1.GroupMappingService.Get:output_type -> yandex.cloud.organizationmanager.v1.GetGroupMappingResponse
	18, // 14: yandex.cloud.organizationmanager.v1.GroupMappingService.Create:output_type -> yandex.cloud.operation.Operation
	18, // 15: yandex.cloud.organizationmanager.v1.GroupMappingService.Update:output_type -> yandex.cloud.operation.Operation
	18, // 16: yandex.cloud.organizationmanager.v1.GroupMappingService.Delete:output_type -> yandex.cloud.operation.Operation
	14, // 17: yandex.cloud.organizationmanager.v1.GroupMappingService.ListItems:output_type -> yandex.cloud.organizationmanager.v1.ListGroupMappingItemsResponse
	18, // 18: yandex.cloud.organizationmanager.v1.GroupMappingService.UpdateItems:output_type -> yandex.cloud.operation.Operation
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_init() }
func file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_init() {
	if File_yandex_cloud_organizationmanager_v1_group_mapping_service_proto != nil {
		return
	}
	file_yandex_cloud_organizationmanager_v1_group_mapping_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMappingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupMappingMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMappingMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupMappingMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMappingItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMappingItemDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMappingItemsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMappingItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupMappingItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGroupMappingItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_organizationmanager_v1_group_mapping_service_proto = out.File
	file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_rawDesc = nil
	file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_goTypes = nil
	file_yandex_cloud_organizationmanager_v1_group_mapping_service_proto_depIdxs = nil
}
