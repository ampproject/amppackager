// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/datatransfer/v1/endpoint/ydb.proto

package endpoint

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type YdbCleanupPolicy int32

const (
	YdbCleanupPolicy_YDB_CLEANUP_POLICY_UNSPECIFIED YdbCleanupPolicy = 0
	YdbCleanupPolicy_YDB_CLEANUP_POLICY_DISABLED    YdbCleanupPolicy = 1
	YdbCleanupPolicy_YDB_CLEANUP_POLICY_DROP        YdbCleanupPolicy = 2
)

// Enum value maps for YdbCleanupPolicy.
var (
	YdbCleanupPolicy_name = map[int32]string{
		0: "YDB_CLEANUP_POLICY_UNSPECIFIED",
		1: "YDB_CLEANUP_POLICY_DISABLED",
		2: "YDB_CLEANUP_POLICY_DROP",
	}
	YdbCleanupPolicy_value = map[string]int32{
		"YDB_CLEANUP_POLICY_UNSPECIFIED": 0,
		"YDB_CLEANUP_POLICY_DISABLED":    1,
		"YDB_CLEANUP_POLICY_DROP":        2,
	}
)

func (x YdbCleanupPolicy) Enum() *YdbCleanupPolicy {
	p := new(YdbCleanupPolicy)
	*p = x
	return p
}

func (x YdbCleanupPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YdbCleanupPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_enumTypes[0].Descriptor()
}

func (YdbCleanupPolicy) Type() protoreflect.EnumType {
	return &file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_enumTypes[0]
}

func (x YdbCleanupPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YdbCleanupPolicy.Descriptor instead.
func (YdbCleanupPolicy) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescGZIP(), []int{0}
}

type YdbDefaultCompression int32

const (
	YdbDefaultCompression_YDB_DEFAULT_COMPRESSION_UNSPECIFIED YdbDefaultCompression = 0
	YdbDefaultCompression_YDB_DEFAULT_COMPRESSION_DISABLED    YdbDefaultCompression = 1
	YdbDefaultCompression_YDB_DEFAULT_COMPRESSION_LZ4         YdbDefaultCompression = 2
)

// Enum value maps for YdbDefaultCompression.
var (
	YdbDefaultCompression_name = map[int32]string{
		0: "YDB_DEFAULT_COMPRESSION_UNSPECIFIED",
		1: "YDB_DEFAULT_COMPRESSION_DISABLED",
		2: "YDB_DEFAULT_COMPRESSION_LZ4",
	}
	YdbDefaultCompression_value = map[string]int32{
		"YDB_DEFAULT_COMPRESSION_UNSPECIFIED": 0,
		"YDB_DEFAULT_COMPRESSION_DISABLED":    1,
		"YDB_DEFAULT_COMPRESSION_LZ4":         2,
	}
)

func (x YdbDefaultCompression) Enum() *YdbDefaultCompression {
	p := new(YdbDefaultCompression)
	*p = x
	return p
}

func (x YdbDefaultCompression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YdbDefaultCompression) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_enumTypes[1].Descriptor()
}

func (YdbDefaultCompression) Type() protoreflect.EnumType {
	return &file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_enumTypes[1]
}

func (x YdbDefaultCompression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YdbDefaultCompression.Descriptor instead.
func (YdbDefaultCompression) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescGZIP(), []int{1}
}

type YdbSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path in YDB where to store tables
	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	// Instance of YDB. example: ydb-ru-prestable.yandex.net:2135
	Instance         string   `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Paths            []string `protobuf:"bytes,5,rep,name=paths,proto3" json:"paths,omitempty"`
	ServiceAccountId string   `protobuf:"bytes,6,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Network interface for endpoint. If none will assume public ipv4
	SubnetId string `protobuf:"bytes,30,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Authorization Key
	SaKeyContent string `protobuf:"bytes,33,opt,name=sa_key_content,json=saKeyContent,proto3" json:"sa_key_content,omitempty"`
	// Security groups
	SecurityGroups []string `protobuf:"bytes,34,rep,name=security_groups,json=securityGroups,proto3" json:"security_groups,omitempty"`
	// Pre-created change feed
	ChangefeedCustomName string `protobuf:"bytes,35,opt,name=changefeed_custom_name,json=changefeedCustomName,proto3" json:"changefeed_custom_name,omitempty"`
}

func (x *YdbSource) Reset() {
	*x = YdbSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YdbSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YdbSource) ProtoMessage() {}

func (x *YdbSource) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YdbSource.ProtoReflect.Descriptor instead.
func (*YdbSource) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescGZIP(), []int{0}
}

func (x *YdbSource) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *YdbSource) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *YdbSource) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *YdbSource) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *YdbSource) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *YdbSource) GetSaKeyContent() string {
	if x != nil {
		return x.SaKeyContent
	}
	return ""
}

func (x *YdbSource) GetSecurityGroups() []string {
	if x != nil {
		return x.SecurityGroups
	}
	return nil
}

func (x *YdbSource) GetChangefeedCustomName() string {
	if x != nil {
		return x.ChangefeedCustomName
	}
	return ""
}

type YdbTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path in YDB where to store tables
	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	// Instance of YDB. example: ydb-ru-prestable.yandex.net:2135
	Instance string `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	// Path extension for database, each table will be layouted into this path
	Path             string `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty"`
	ServiceAccountId string `protobuf:"bytes,11,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Cleanup policy
	CleanupPolicy YdbCleanupPolicy `protobuf:"varint,21,opt,name=cleanup_policy,json=cleanupPolicy,proto3,enum=yandex.cloud.datatransfer.v1.endpoint.YdbCleanupPolicy" json:"cleanup_policy,omitempty"`
	// Network interface for endpoint. If none will assume public ipv4
	SubnetId string `protobuf:"bytes,30,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// SA content
	SaKeyContent string `protobuf:"bytes,32,opt,name=sa_key_content,json=saKeyContent,proto3" json:"sa_key_content,omitempty"`
	// Security groups
	SecurityGroups []string `protobuf:"bytes,33,rep,name=security_groups,json=securityGroups,proto3" json:"security_groups,omitempty"`
	// Should create column-oriented table (OLAP). By default it creates row-oriented
	// (OLTP)
	IsTableColumnOriented bool `protobuf:"varint,34,opt,name=is_table_column_oriented,json=isTableColumnOriented,proto3" json:"is_table_column_oriented,omitempty"`
	// Compression that will be used for default columns family on YDB table creation
	DefaultCompression YdbDefaultCompression `protobuf:"varint,35,opt,name=default_compression,json=defaultCompression,proto3,enum=yandex.cloud.datatransfer.v1.endpoint.YdbDefaultCompression" json:"default_compression,omitempty"`
}

func (x *YdbTarget) Reset() {
	*x = YdbTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YdbTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YdbTarget) ProtoMessage() {}

func (x *YdbTarget) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YdbTarget.ProtoReflect.Descriptor instead.
func (*YdbTarget) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescGZIP(), []int{1}
}

func (x *YdbTarget) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *YdbTarget) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *YdbTarget) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *YdbTarget) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *YdbTarget) GetCleanupPolicy() YdbCleanupPolicy {
	if x != nil {
		return x.CleanupPolicy
	}
	return YdbCleanupPolicy_YDB_CLEANUP_POLICY_UNSPECIFIED
}

func (x *YdbTarget) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *YdbTarget) GetSaKeyContent() string {
	if x != nil {
		return x.SaKeyContent
	}
	return ""
}

func (x *YdbTarget) GetSecurityGroups() []string {
	if x != nil {
		return x.SecurityGroups
	}
	return nil
}

func (x *YdbTarget) GetIsTableColumnOriented() bool {
	if x != nil {
		return x.IsTableColumnOriented
	}
	return false
}

func (x *YdbTarget) GetDefaultCompression() YdbDefaultCompression {
	if x != nil {
		return x.DefaultCompression
	}
	return YdbDefaultCompression_YDB_DEFAULT_COMPRESSION_UNSPECIFIED
}

var File_yandex_cloud_datatransfer_v1_endpoint_ydb_proto protoreflect.FileDescriptor

var file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x79, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x25, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xbb, 0x02, 0x0a, 0x09, 0x59, 0x64, 0x62,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x66, 0x65, 0x65, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x1e,
	0x4a, 0x04, 0x08, 0x1f, 0x10, 0x21, 0x22, 0x91, 0x04, 0x0a, 0x09, 0x59, 0x64, 0x62, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x5e,
	0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x59,
	0x64, 0x62, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x61, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6f, 0x72,
	0x69, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x72, 0x69, 0x65, 0x6e,
	0x74, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x59, 0x64, 0x62, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x0a, 0x4a, 0x04, 0x08, 0x0c, 0x10, 0x15, 0x4a, 0x04,
	0x08, 0x16, 0x10, 0x1e, 0x4a, 0x04, 0x08, 0x1f, 0x10, 0x20, 0x2a, 0x74, 0x0a, 0x10, 0x59, 0x64,
	0x62, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x22,
	0x0a, 0x1e, 0x59, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55, 0x50, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x59, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55,
	0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x59, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e,
	0x55, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x02,
	0x2a, 0x87, 0x01, 0x0a, 0x15, 0x59, 0x64, 0x62, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x23, 0x59, 0x44,
	0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x59, 0x44, 0x42, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x59, 0x44, 0x42,
	0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x5a, 0x34, 0x10, 0x02, 0x42, 0xa7, 0x01, 0x0a, 0x29, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x3b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0xaa, 0x02, 0x25, 0x59,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescOnce sync.Once
	file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescData = file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDesc
)

func file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescGZIP() []byte {
	file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescData)
	})
	return file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDescData
}

var file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_goTypes = []interface{}{
	(YdbCleanupPolicy)(0),      // 0: yandex.cloud.datatransfer.v1.endpoint.YdbCleanupPolicy
	(YdbDefaultCompression)(0), // 1: yandex.cloud.datatransfer.v1.endpoint.YdbDefaultCompression
	(*YdbSource)(nil),          // 2: yandex.cloud.datatransfer.v1.endpoint.YdbSource
	(*YdbTarget)(nil),          // 3: yandex.cloud.datatransfer.v1.endpoint.YdbTarget
}
var file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.datatransfer.v1.endpoint.YdbTarget.cleanup_policy:type_name -> yandex.cloud.datatransfer.v1.endpoint.YdbCleanupPolicy
	1, // 1: yandex.cloud.datatransfer.v1.endpoint.YdbTarget.default_compression:type_name -> yandex.cloud.datatransfer.v1.endpoint.YdbDefaultCompression
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_init() }
func file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_init() {
	if File_yandex_cloud_datatransfer_v1_endpoint_ydb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YdbSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YdbTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_msgTypes,
	}.Build()
	File_yandex_cloud_datatransfer_v1_endpoint_ydb_proto = out.File
	file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_rawDesc = nil
	file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_goTypes = nil
	file_yandex_cloud_datatransfer_v1_endpoint_ydb_proto_depIdxs = nil
}
