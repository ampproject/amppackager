// Code generated by protoc-gen-goext. DO NOT EDIT.

package audittrails

import (
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (m *Trail) SetId(v string) {
	m.Id = v
}

func (m *Trail) SetFolderId(v string) {
	m.FolderId = v
}

func (m *Trail) SetCreatedAt(v *timestamppb.Timestamp) {
	m.CreatedAt = v
}

func (m *Trail) SetUpdatedAt(v *timestamppb.Timestamp) {
	m.UpdatedAt = v
}

func (m *Trail) SetName(v string) {
	m.Name = v
}

func (m *Trail) SetDescription(v string) {
	m.Description = v
}

func (m *Trail) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *Trail) SetDestination(v *Trail_Destination) {
	m.Destination = v
}

func (m *Trail) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *Trail) SetStatus(v Trail_Status) {
	m.Status = v
}

func (m *Trail) SetFilter(v *Trail_Filter) {
	m.Filter = v
}

func (m *Trail) SetStatusErrorMessage(v string) {
	m.StatusErrorMessage = v
}

func (m *Trail) SetCloudId(v string) {
	m.CloudId = v
}

func (m *Trail) SetFilteringPolicy(v *Trail_FilteringPolicy) {
	m.FilteringPolicy = v
}

type Trail_Destination_Destination = isTrail_Destination_Destination

func (m *Trail_Destination) SetDestination(v Trail_Destination_Destination) {
	m.Destination = v
}

func (m *Trail_Destination) SetObjectStorage(v *Trail_ObjectStorage) {
	m.Destination = &Trail_Destination_ObjectStorage{
		ObjectStorage: v,
	}
}

func (m *Trail_Destination) SetCloudLogging(v *Trail_CloudLogging) {
	m.Destination = &Trail_Destination_CloudLogging{
		CloudLogging: v,
	}
}

func (m *Trail_Destination) SetDataStream(v *Trail_DataStream) {
	m.Destination = &Trail_Destination_DataStream{
		DataStream: v,
	}
}

func (m *Trail_ObjectStorage) SetBucketId(v string) {
	m.BucketId = v
}

func (m *Trail_ObjectStorage) SetObjectPrefix(v string) {
	m.ObjectPrefix = v
}

type Trail_CloudLogging_Destination = isTrail_CloudLogging_Destination

func (m *Trail_CloudLogging) SetDestination(v Trail_CloudLogging_Destination) {
	m.Destination = v
}

func (m *Trail_CloudLogging) SetLogGroupId(v string) {
	m.Destination = &Trail_CloudLogging_LogGroupId{
		LogGroupId: v,
	}
}

func (m *Trail_DataStream) SetDatabaseId(v string) {
	m.DatabaseId = v
}

func (m *Trail_DataStream) SetStreamName(v string) {
	m.StreamName = v
}

func (m *Trail_Filter) SetPathFilter(v *Trail_PathFilter) {
	m.PathFilter = v
}

func (m *Trail_Filter) SetEventFilter(v *Trail_EventFilter) {
	m.EventFilter = v
}

func (m *Trail_PathFilter) SetRoot(v *Trail_PathFilterElement) {
	m.Root = v
}

type Trail_PathFilterElement_Element = isTrail_PathFilterElement_Element

func (m *Trail_PathFilterElement) SetElement(v Trail_PathFilterElement_Element) {
	m.Element = v
}

func (m *Trail_PathFilterElement) SetAnyFilter(v *Trail_PathFilterElementAny) {
	m.Element = &Trail_PathFilterElement_AnyFilter{
		AnyFilter: v,
	}
}

func (m *Trail_PathFilterElement) SetSomeFilter(v *Trail_PathFilterElementSome) {
	m.Element = &Trail_PathFilterElement_SomeFilter{
		SomeFilter: v,
	}
}

func (m *Trail_PathFilterElementAny) SetResource(v *Trail_Resource) {
	m.Resource = v
}

func (m *Trail_PathFilterElementSome) SetResource(v *Trail_Resource) {
	m.Resource = v
}

func (m *Trail_PathFilterElementSome) SetFilters(v []*Trail_PathFilterElement) {
	m.Filters = v
}

func (m *Trail_Resource) SetId(v string) {
	m.Id = v
}

func (m *Trail_Resource) SetType(v string) {
	m.Type = v
}

func (m *Trail_EventFilter) SetFilters(v []*Trail_EventFilterElement) {
	m.Filters = v
}

func (m *Trail_EventFilterElement) SetService(v string) {
	m.Service = v
}

func (m *Trail_EventFilterElement) SetCategories(v []*Trail_EventFilterElementCategory) {
	m.Categories = v
}

func (m *Trail_EventFilterElement) SetPathFilter(v *Trail_PathFilter) {
	m.PathFilter = v
}

func (m *Trail_EventFilterElementCategory) SetPlane(v Trail_EventCategoryFilter) {
	m.Plane = v
}

func (m *Trail_EventFilterElementCategory) SetType(v Trail_EventAccessTypeFilter) {
	m.Type = v
}

type Trail_DataEventsFiltering_AdditionalRules = isTrail_DataEventsFiltering_AdditionalRules

func (m *Trail_DataEventsFiltering) SetAdditionalRules(v Trail_DataEventsFiltering_AdditionalRules) {
	m.AdditionalRules = v
}

func (m *Trail_DataEventsFiltering) SetService(v string) {
	m.Service = v
}

func (m *Trail_DataEventsFiltering) SetIncludedEvents(v *Trail_EventTypes) {
	m.AdditionalRules = &Trail_DataEventsFiltering_IncludedEvents{
		IncludedEvents: v,
	}
}

func (m *Trail_DataEventsFiltering) SetExcludedEvents(v *Trail_EventTypes) {
	m.AdditionalRules = &Trail_DataEventsFiltering_ExcludedEvents{
		ExcludedEvents: v,
	}
}

func (m *Trail_DataEventsFiltering) SetResourceScopes(v []*Trail_Resource) {
	m.ResourceScopes = v
}

func (m *Trail_EventTypes) SetEventTypes(v []string) {
	m.EventTypes = v
}

func (m *Trail_ManagementEventsFiltering) SetResourceScopes(v []*Trail_Resource) {
	m.ResourceScopes = v
}

func (m *Trail_FilteringPolicy) SetManagementEventsFilter(v *Trail_ManagementEventsFiltering) {
	m.ManagementEventsFilter = v
}

func (m *Trail_FilteringPolicy) SetDataEventsFilters(v []*Trail_DataEventsFiltering) {
	m.DataEventsFilters = v
}
