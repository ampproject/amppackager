// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: yandex/cloud/iot/devices/v1/device.proto

package devices

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceView int32

const (
	// Server responses without monitoring data.
	// The default value.
	DeviceView_BASIC DeviceView = 0
	// Server responses with monitoring data.
	DeviceView_FULL DeviceView = 1
)

// Enum value maps for DeviceView.
var (
	DeviceView_name = map[int32]string{
		0: "BASIC",
		1: "FULL",
	}
	DeviceView_value = map[string]int32{
		"BASIC": 0,
		"FULL":  1,
	}
)

func (x DeviceView) Enum() *DeviceView {
	p := new(DeviceView)
	*p = x
	return p
}

func (x DeviceView) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceView) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_iot_devices_v1_device_proto_enumTypes[0].Descriptor()
}

func (DeviceView) Type() protoreflect.EnumType {
	return &file_yandex_cloud_iot_devices_v1_device_proto_enumTypes[0]
}

func (x DeviceView) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceView.Descriptor instead.
func (DeviceView) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP(), []int{0}
}

type Device_Status int32

const (
	Device_STATUS_UNSPECIFIED Device_Status = 0
	// Device is being created.
	Device_CREATING Device_Status = 1
	// Device is ready to use.
	Device_ACTIVE Device_Status = 2
	// Device is being deleted.
	Device_DELETING Device_Status = 3
)

// Enum value maps for Device_Status.
var (
	Device_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "DELETING",
	}
	Device_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"CREATING":           1,
		"ACTIVE":             2,
		"DELETING":           3,
	}
)

func (x Device_Status) Enum() *Device_Status {
	p := new(Device_Status)
	*p = x
	return p
}

func (x Device_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_iot_devices_v1_device_proto_enumTypes[1].Descriptor()
}

func (Device_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_iot_devices_v1_device_proto_enumTypes[1]
}

func (x Device_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device_Status.Descriptor instead.
func (Device_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP(), []int{0, 0}
}

// A device. For more information, see [Device](/docs/iot-core/concepts/index#device).
type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the device.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the registry that the device belongs to.
	RegistryId string `protobuf:"bytes,2,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the device. The name is unique within the registry.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the device. 0-256 characters long.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Alias of a device topic.
	//
	// Alias is an alternate name of a device topic assigned by the user. Map alias to canonical topic name prefix, e.g. `my/custom/alias` match to `$device/abcdef/events`.
	TopicAliases map[string]string `protobuf:"bytes,6,rep,name=topic_aliases,json=topicAliases,proto3" json:"topic_aliases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Status of the device.
	Status Device_Status `protobuf:"varint,7,opt,name=status,proto3,enum=yandex.cloud.iot.devices.v1.Device_Status" json:"status,omitempty"`
	// Device monitoring data, returns if FULL view specified.
	MonitoringData *DeviceMonitoringData `protobuf:"bytes,8,opt,name=monitoring_data,json=monitoringData,proto3" json:"monitoring_data,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *Device) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Device) GetTopicAliases() map[string]string {
	if x != nil {
		return x.TopicAliases
	}
	return nil
}

func (x *Device) GetStatus() Device_Status {
	if x != nil {
		return x.Status
	}
	return Device_STATUS_UNSPECIFIED
}

func (x *Device) GetMonitoringData() *DeviceMonitoringData {
	if x != nil {
		return x.MonitoringData
	}
	return nil
}

// A device certificate. For more information, see [Managing device certificates](/docs/iot-core/operations/certificates/device-certificates).
type DeviceCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the device that the certificate belongs to.
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// SHA256 hash of the certificate.
	Fingerprint string `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	// Public part of the certificate.
	CertificateData string `protobuf:"bytes,3,opt,name=certificate_data,json=certificateData,proto3" json:"certificate_data,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *DeviceCertificate) Reset() {
	*x = DeviceCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCertificate) ProtoMessage() {}

func (x *DeviceCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCertificate.ProtoReflect.Descriptor instead.
func (*DeviceCertificate) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceCertificate) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceCertificate) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *DeviceCertificate) GetCertificateData() string {
	if x != nil {
		return x.CertificateData
	}
	return ""
}

func (x *DeviceCertificate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// A device password.
type DevicePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the device that the password belongs to.
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// ID of the password.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *DevicePassword) Reset() {
	*x = DevicePassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevicePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicePassword) ProtoMessage() {}

func (x *DevicePassword) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicePassword.ProtoReflect.Descriptor instead.
func (*DevicePassword) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP(), []int{2}
}

func (x *DevicePassword) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DevicePassword) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DevicePassword) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeviceMonitoringData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastAuthIp          string                 `protobuf:"bytes,1,opt,name=last_auth_ip,json=lastAuthIp,proto3" json:"last_auth_ip,omitempty"`
	LastAuthTime        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_auth_time,json=lastAuthTime,proto3" json:"last_auth_time,omitempty"`
	LastPubActivityTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_pub_activity_time,json=lastPubActivityTime,proto3" json:"last_pub_activity_time,omitempty"`
	LastSubActivityTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_sub_activity_time,json=lastSubActivityTime,proto3" json:"last_sub_activity_time,omitempty"`
	LastOnlineTime      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_online_time,json=lastOnlineTime,proto3" json:"last_online_time,omitempty"`
}

func (x *DeviceMonitoringData) Reset() {
	*x = DeviceMonitoringData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceMonitoringData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceMonitoringData) ProtoMessage() {}

func (x *DeviceMonitoringData) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceMonitoringData.ProtoReflect.Descriptor instead.
func (*DeviceMonitoringData) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceMonitoringData) GetLastAuthIp() string {
	if x != nil {
		return x.LastAuthIp
	}
	return ""
}

func (x *DeviceMonitoringData) GetLastAuthTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAuthTime
	}
	return nil
}

func (x *DeviceMonitoringData) GetLastPubActivityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPubActivityTime
	}
	return nil
}

func (x *DeviceMonitoringData) GetLastSubActivityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSubActivityTime
	}
	return nil
}

func (x *DeviceMonitoringData) GetLastOnlineTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastOnlineTime
	}
	return nil
}

var File_yandex_cloud_iot_devices_v1_device_proto protoreflect.FileDescriptor

var file_yandex_cloud_iot_devices_v1_device_proto_rawDesc = []byte{
	0x0a, 0x28, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x69,
	0x6f, 0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x04, 0x0a, 0x06, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x69, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0xb8, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x78, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xe2, 0x02, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x49, 0x70, 0x12, 0x40, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f,
	0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4f, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x21, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x42, 0x6a, 0x0a, 0x1f, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x5a, 0x47, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x69,
	0x6f, 0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_iot_devices_v1_device_proto_rawDescOnce sync.Once
	file_yandex_cloud_iot_devices_v1_device_proto_rawDescData = file_yandex_cloud_iot_devices_v1_device_proto_rawDesc
)

func file_yandex_cloud_iot_devices_v1_device_proto_rawDescGZIP() []byte {
	file_yandex_cloud_iot_devices_v1_device_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_iot_devices_v1_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_iot_devices_v1_device_proto_rawDescData)
	})
	return file_yandex_cloud_iot_devices_v1_device_proto_rawDescData
}

var file_yandex_cloud_iot_devices_v1_device_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_iot_devices_v1_device_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_iot_devices_v1_device_proto_goTypes = []interface{}{
	(DeviceView)(0),               // 0: yandex.cloud.iot.devices.v1.DeviceView
	(Device_Status)(0),            // 1: yandex.cloud.iot.devices.v1.Device.Status
	(*Device)(nil),                // 2: yandex.cloud.iot.devices.v1.Device
	(*DeviceCertificate)(nil),     // 3: yandex.cloud.iot.devices.v1.DeviceCertificate
	(*DevicePassword)(nil),        // 4: yandex.cloud.iot.devices.v1.DevicePassword
	(*DeviceMonitoringData)(nil),  // 5: yandex.cloud.iot.devices.v1.DeviceMonitoringData
	nil,                           // 6: yandex.cloud.iot.devices.v1.Device.TopicAliasesEntry
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_yandex_cloud_iot_devices_v1_device_proto_depIdxs = []int32{
	7,  // 0: yandex.cloud.iot.devices.v1.Device.created_at:type_name -> google.protobuf.Timestamp
	6,  // 1: yandex.cloud.iot.devices.v1.Device.topic_aliases:type_name -> yandex.cloud.iot.devices.v1.Device.TopicAliasesEntry
	1,  // 2: yandex.cloud.iot.devices.v1.Device.status:type_name -> yandex.cloud.iot.devices.v1.Device.Status
	5,  // 3: yandex.cloud.iot.devices.v1.Device.monitoring_data:type_name -> yandex.cloud.iot.devices.v1.DeviceMonitoringData
	7,  // 4: yandex.cloud.iot.devices.v1.DeviceCertificate.created_at:type_name -> google.protobuf.Timestamp
	7,  // 5: yandex.cloud.iot.devices.v1.DevicePassword.created_at:type_name -> google.protobuf.Timestamp
	7,  // 6: yandex.cloud.iot.devices.v1.DeviceMonitoringData.last_auth_time:type_name -> google.protobuf.Timestamp
	7,  // 7: yandex.cloud.iot.devices.v1.DeviceMonitoringData.last_pub_activity_time:type_name -> google.protobuf.Timestamp
	7,  // 8: yandex.cloud.iot.devices.v1.DeviceMonitoringData.last_sub_activity_time:type_name -> google.protobuf.Timestamp
	7,  // 9: yandex.cloud.iot.devices.v1.DeviceMonitoringData.last_online_time:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_yandex_cloud_iot_devices_v1_device_proto_init() }
func file_yandex_cloud_iot_devices_v1_device_proto_init() {
	if File_yandex_cloud_iot_devices_v1_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevicePassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_iot_devices_v1_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceMonitoringData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_iot_devices_v1_device_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_iot_devices_v1_device_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_iot_devices_v1_device_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_iot_devices_v1_device_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_iot_devices_v1_device_proto_msgTypes,
	}.Build()
	File_yandex_cloud_iot_devices_v1_device_proto = out.File
	file_yandex_cloud_iot_devices_v1_device_proto_rawDesc = nil
	file_yandex_cloud_iot_devices_v1_device_proto_goTypes = nil
	file_yandex_cloud_iot_devices_v1_device_proto_depIdxs = nil
}
