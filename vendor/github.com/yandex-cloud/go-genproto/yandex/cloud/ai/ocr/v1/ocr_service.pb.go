// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/ai/ocr/v1/ocr_service.proto

package ocr

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecognizeTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*RecognizeTextRequest_Content
	Source isRecognizeTextRequest_Source `protobuf_oneof:"source"`
	// Specifications of the ([MIME type](https://en.wikipedia.org/wiki/Media_type)). Each specification contains the file to analyze and features to use for analysis. Restrictions:
	// * Supported file formats: `JPEG`, `PNG`, `PDF`.
	// * Maximum file size: 20 MB.
	// * Image size should not exceed 20M pixels (length x width).
	// * The number of pages in a PDF file should not exceed 200 (each page counts as 1 request).
	MimeType string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// List of the languages to recognize text.
	// Specified in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format (for example, `ru`).
	LanguageCodes []string `protobuf:"bytes,3,rep,name=language_codes,json=languageCodes,proto3" json:"language_codes,omitempty"`
	// Model to use for text detection.
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RecognizeTextRequest) Reset() {
	*x = RecognizeTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecognizeTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeTextRequest) ProtoMessage() {}

func (x *RecognizeTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeTextRequest.ProtoReflect.Descriptor instead.
func (*RecognizeTextRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescGZIP(), []int{0}
}

func (m *RecognizeTextRequest) GetSource() isRecognizeTextRequest_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *RecognizeTextRequest) GetContent() []byte {
	if x, ok := x.GetSource().(*RecognizeTextRequest_Content); ok {
		return x.Content
	}
	return nil
}

func (x *RecognizeTextRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *RecognizeTextRequest) GetLanguageCodes() []string {
	if x != nil {
		return x.LanguageCodes
	}
	return nil
}

func (x *RecognizeTextRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type isRecognizeTextRequest_Source interface {
	isRecognizeTextRequest_Source()
}

type RecognizeTextRequest_Content struct {
	// Bytes with data
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

func (*RecognizeTextRequest_Content) isRecognizeTextRequest_Source() {}

type RecognizeTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recognized text blocks in this page or text from entities.
	TextAnnotation *TextAnnotation `protobuf:"bytes,1,opt,name=text_annotation,json=textAnnotation,proto3" json:"text_annotation,omitempty"`
	// Page number in PDF file.
	Page int64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *RecognizeTextResponse) Reset() {
	*x = RecognizeTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecognizeTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeTextResponse) ProtoMessage() {}

func (x *RecognizeTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeTextResponse.ProtoReflect.Descriptor instead.
func (*RecognizeTextResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescGZIP(), []int{1}
}

func (x *RecognizeTextResponse) GetTextAnnotation() *TextAnnotation {
	if x != nil {
		return x.TextAnnotation
	}
	return nil
}

func (x *RecognizeTextResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetRecognitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation ID of async recognition request.
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetRecognitionRequest) Reset() {
	*x = GetRecognitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecognitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecognitionRequest) ProtoMessage() {}

func (x *GetRecognitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecognitionRequest.ProtoReflect.Descriptor instead.
func (*GetRecognitionRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecognitionRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

var File_yandex_cloud_ai_ocr_v1_ocr_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x69, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e,
	0x76, 0x31, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x61, 0x69, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x63, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7c,
	0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31,
	0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xa7, 0x01, 0x0a, 0x16, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x8c, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x12,
	0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x7a, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e,
	0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x78, 0x74, 0x30, 0x01,
	0x32, 0xd1, 0x02, 0x0a, 0x1b, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x9e, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x2c,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69,
	0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x40, 0xb2, 0xd2, 0x2a, 0x17, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x78, 0x74, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x12, 0x90, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x6f, 0x63, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x30, 0x01, 0x42, 0x5c, 0x0a, 0x1a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e,
	0x76, 0x31, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x69, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6f,
	0x63, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescData = file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDesc
)

func file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescData)
	})
	return file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDescData
}

var file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_ai_ocr_v1_ocr_service_proto_goTypes = []interface{}{
	(*RecognizeTextRequest)(nil),  // 0: yandex.cloud.ai.ocr.v1.RecognizeTextRequest
	(*RecognizeTextResponse)(nil), // 1: yandex.cloud.ai.ocr.v1.RecognizeTextResponse
	(*GetRecognitionRequest)(nil), // 2: yandex.cloud.ai.ocr.v1.GetRecognitionRequest
	(*TextAnnotation)(nil),        // 3: yandex.cloud.ai.ocr.v1.TextAnnotation
	(*operation.Operation)(nil),   // 4: yandex.cloud.operation.Operation
}
var file_yandex_cloud_ai_ocr_v1_ocr_service_proto_depIdxs = []int32{
	3, // 0: yandex.cloud.ai.ocr.v1.RecognizeTextResponse.text_annotation:type_name -> yandex.cloud.ai.ocr.v1.TextAnnotation
	0, // 1: yandex.cloud.ai.ocr.v1.TextRecognitionService.Recognize:input_type -> yandex.cloud.ai.ocr.v1.RecognizeTextRequest
	0, // 2: yandex.cloud.ai.ocr.v1.TextRecognitionAsyncService.Recognize:input_type -> yandex.cloud.ai.ocr.v1.RecognizeTextRequest
	2, // 3: yandex.cloud.ai.ocr.v1.TextRecognitionAsyncService.GetRecognition:input_type -> yandex.cloud.ai.ocr.v1.GetRecognitionRequest
	1, // 4: yandex.cloud.ai.ocr.v1.TextRecognitionService.Recognize:output_type -> yandex.cloud.ai.ocr.v1.RecognizeTextResponse
	4, // 5: yandex.cloud.ai.ocr.v1.TextRecognitionAsyncService.Recognize:output_type -> yandex.cloud.operation.Operation
	1, // 6: yandex.cloud.ai.ocr.v1.TextRecognitionAsyncService.GetRecognition:output_type -> yandex.cloud.ai.ocr.v1.RecognizeTextResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ai_ocr_v1_ocr_service_proto_init() }
func file_yandex_cloud_ai_ocr_v1_ocr_service_proto_init() {
	if File_yandex_cloud_ai_ocr_v1_ocr_service_proto != nil {
		return
	}
	file_yandex_cloud_ai_ocr_v1_ocr_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecognizeTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecognizeTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecognitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RecognizeTextRequest_Content)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_yandex_cloud_ai_ocr_v1_ocr_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_ocr_v1_ocr_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_ai_ocr_v1_ocr_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_ocr_v1_ocr_service_proto = out.File
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_rawDesc = nil
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_goTypes = nil
	file_yandex_cloud_ai_ocr_v1_ocr_service_proto_depIdxs = nil
}
