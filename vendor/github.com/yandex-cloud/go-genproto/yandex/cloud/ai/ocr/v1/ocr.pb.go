// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/ai/ocr/v1/ocr.proto

package ocr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Angle int32

const (
	Angle_ANGLE_UNSPECIFIED Angle = 0
	Angle_ANGLE_0           Angle = 1
	Angle_ANGLE_90          Angle = 2
	Angle_ANGLE_180         Angle = 3
	Angle_ANGLE_270         Angle = 4
)

// Enum value maps for Angle.
var (
	Angle_name = map[int32]string{
		0: "ANGLE_UNSPECIFIED",
		1: "ANGLE_0",
		2: "ANGLE_90",
		3: "ANGLE_180",
		4: "ANGLE_270",
	}
	Angle_value = map[string]int32{
		"ANGLE_UNSPECIFIED": 0,
		"ANGLE_0":           1,
		"ANGLE_90":          2,
		"ANGLE_180":         3,
		"ANGLE_270":         4,
	}
)

func (x Angle) Enum() *Angle {
	p := new(Angle)
	*p = x
	return p
}

func (x Angle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Angle) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_enumTypes[0].Descriptor()
}

func (Angle) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ai_ocr_v1_ocr_proto_enumTypes[0]
}

func (x Angle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Angle.Descriptor instead.
func (Angle) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{0}
}

type Polygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The bounding polygon vertices.
	Vertices []*Vertex `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
}

func (x *Polygon) Reset() {
	*x = Polygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polygon) ProtoMessage() {}

func (x *Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polygon.ProtoReflect.Descriptor instead.
func (*Polygon) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{0}
}

func (x *Polygon) GetVertices() []*Vertex {
	if x != nil {
		return x.Vertices
	}
	return nil
}

type Vertex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// X coordinate in pixels.
	X int64 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	// Y coordinate in pixels.
	Y int64 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vertex) Reset() {
	*x = Vertex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vertex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vertex) ProtoMessage() {}

func (x *Vertex) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vertex.ProtoReflect.Descriptor instead.
func (*Vertex) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{1}
}

func (x *Vertex) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vertex) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type TextAnnotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Page width in pixels.
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// Page height in pixels.
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Recognized text blocks in this page.
	Blocks []*Block `protobuf:"bytes,3,rep,name=blocks,proto3" json:"blocks,omitempty"`
	// Recognized entities.
	Entities []*Entity `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	Tables   []*Table  `protobuf:"bytes,5,rep,name=tables,proto3" json:"tables,omitempty"`
	// Full text recognized from image.
	FullText string `protobuf:"bytes,6,opt,name=full_text,json=fullText,proto3" json:"full_text,omitempty"`
	// Angle of rotate image
	Rotate Angle `protobuf:"varint,7,opt,name=rotate,proto3,enum=yandex.cloud.ai.ocr.v1.Angle" json:"rotate,omitempty"`
}

func (x *TextAnnotation) Reset() {
	*x = TextAnnotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextAnnotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextAnnotation) ProtoMessage() {}

func (x *TextAnnotation) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextAnnotation.ProtoReflect.Descriptor instead.
func (*TextAnnotation) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{2}
}

func (x *TextAnnotation) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *TextAnnotation) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TextAnnotation) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *TextAnnotation) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *TextAnnotation) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *TextAnnotation) GetFullText() string {
	if x != nil {
		return x.FullText
	}
	return ""
}

func (x *TextAnnotation) GetRotate() Angle {
	if x != nil {
		return x.Rotate
	}
	return Angle_ANGLE_UNSPECIFIED
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entity name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Recognized entity text.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{3}
}

func (x *Entity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entity) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area on the page where the text block is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Recognized lines in this block.
	Lines []*Line `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	// A list of detected languages
	Languages []*Block_DetectedLanguage `protobuf:"bytes,3,rep,name=languages,proto3" json:"languages,omitempty"`
	// Block position from full_text string.
	TextSegments []*TextSegments `protobuf:"bytes,4,rep,name=text_segments,json=textSegments,proto3" json:"text_segments,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{4}
}

func (x *Block) GetBoundingBox() *Polygon {
	if x != nil {
		return x.BoundingBox
	}
	return nil
}

func (x *Block) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Block) GetLanguages() []*Block_DetectedLanguage {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Block) GetTextSegments() []*TextSegments {
	if x != nil {
		return x.TextSegments
	}
	return nil
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area on the page where the line is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Recognized text.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// Recognized words.
	Words []*Word `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	// Line position from full_text string.
	TextSegments []*TextSegments `protobuf:"bytes,4,rep,name=text_segments,json=textSegments,proto3" json:"text_segments,omitempty"`
	// Angle of rotate line
	Orientation Angle `protobuf:"varint,5,opt,name=orientation,proto3,enum=yandex.cloud.ai.ocr.v1.Angle" json:"orientation,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{5}
}

func (x *Line) GetBoundingBox() *Polygon {
	if x != nil {
		return x.BoundingBox
	}
	return nil
}

func (x *Line) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Line) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *Line) GetTextSegments() []*TextSegments {
	if x != nil {
		return x.TextSegments
	}
	return nil
}

func (x *Line) GetOrientation() Angle {
	if x != nil {
		return x.Orientation
	}
	return Angle_ANGLE_UNSPECIFIED
}

type Word struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area on the page where the word is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Recognized word value.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// ID of the recognized word in entities array.
	EntityIndex int64 `protobuf:"varint,3,opt,name=entity_index,json=entityIndex,proto3" json:"entity_index,omitempty"`
	// Word position from full_text string.
	TextSegments []*TextSegments `protobuf:"bytes,4,rep,name=text_segments,json=textSegments,proto3" json:"text_segments,omitempty"`
}

func (x *Word) Reset() {
	*x = Word{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Word) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Word) ProtoMessage() {}

func (x *Word) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Word.ProtoReflect.Descriptor instead.
func (*Word) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{6}
}

func (x *Word) GetBoundingBox() *Polygon {
	if x != nil {
		return x.BoundingBox
	}
	return nil
}

func (x *Word) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Word) GetEntityIndex() int64 {
	if x != nil {
		return x.EntityIndex
	}
	return 0
}

func (x *Word) GetTextSegments() []*TextSegments {
	if x != nil {
		return x.TextSegments
	}
	return nil
}

type TextSegments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start character position from full_text string.
	StartIndex int64 `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	// Text segment length.
	Length int64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *TextSegments) Reset() {
	*x = TextSegments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSegments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSegments) ProtoMessage() {}

func (x *TextSegments) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSegments.ProtoReflect.Descriptor instead.
func (*TextSegments) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{7}
}

func (x *TextSegments) GetStartIndex() int64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *TextSegments) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area on the page where the table is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Number of rows in table.
	RowCount int64 `protobuf:"varint,2,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	// Number of columns in table.
	ColumnCount int64 `protobuf:"varint,3,opt,name=column_count,json=columnCount,proto3" json:"column_count,omitempty"`
	// Table cells.
	Cells []*TableCell `protobuf:"bytes,4,rep,name=cells,proto3" json:"cells,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{8}
}

func (x *Table) GetBoundingBox() *Polygon {
	if x != nil {
		return x.BoundingBox
	}
	return nil
}

func (x *Table) GetRowCount() int64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *Table) GetColumnCount() int64 {
	if x != nil {
		return x.ColumnCount
	}
	return 0
}

func (x *Table) GetCells() []*TableCell {
	if x != nil {
		return x.Cells
	}
	return nil
}

type TableCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Area on the page where the table cell is located.
	BoundingBox *Polygon `protobuf:"bytes,1,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	// Row index.
	RowIndex int64 `protobuf:"varint,2,opt,name=row_index,json=rowIndex,proto3" json:"row_index,omitempty"`
	// Column index.
	ColumnIndex int64 `protobuf:"varint,3,opt,name=column_index,json=columnIndex,proto3" json:"column_index,omitempty"`
	// Column span.
	ColumnSpan int64 `protobuf:"varint,4,opt,name=column_span,json=columnSpan,proto3" json:"column_span,omitempty"`
	// Row span.
	RowSpan int64 `protobuf:"varint,5,opt,name=row_span,json=rowSpan,proto3" json:"row_span,omitempty"`
	// Text in cell.
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// Table cell position from full_text string.
	TextSegments []*TextSegments `protobuf:"bytes,7,rep,name=text_segments,json=textSegments,proto3" json:"text_segments,omitempty"`
}

func (x *TableCell) Reset() {
	*x = TableCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCell) ProtoMessage() {}

func (x *TableCell) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCell.ProtoReflect.Descriptor instead.
func (*TableCell) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{9}
}

func (x *TableCell) GetBoundingBox() *Polygon {
	if x != nil {
		return x.BoundingBox
	}
	return nil
}

func (x *TableCell) GetRowIndex() int64 {
	if x != nil {
		return x.RowIndex
	}
	return 0
}

func (x *TableCell) GetColumnIndex() int64 {
	if x != nil {
		return x.ColumnIndex
	}
	return 0
}

func (x *TableCell) GetColumnSpan() int64 {
	if x != nil {
		return x.ColumnSpan
	}
	return 0
}

func (x *TableCell) GetRowSpan() int64 {
	if x != nil {
		return x.RowSpan
	}
	return 0
}

func (x *TableCell) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TableCell) GetTextSegments() []*TextSegments {
	if x != nil {
		return x.TextSegments
	}
	return nil
}

type Block_DetectedLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Detected language code.
	LanguageCode string `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *Block_DetectedLanguage) Reset() {
	*x = Block_DetectedLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_DetectedLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_DetectedLanguage) ProtoMessage() {}

func (x *Block_DetectedLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_DetectedLanguage.ProtoReflect.Descriptor instead.
func (*Block_DetectedLanguage) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Block_DetectedLanguage) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

var File_yandex_cloud_ai_ocr_v1_ocr_proto protoreflect.FileDescriptor

var file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDesc = []byte{
	0x0a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x69, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x63, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x45, 0x0a, 0x07, 0x50, 0x6f,
	0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x22, 0x24, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x22, 0xbc, 0x02, 0x0a, 0x0e, 0x54, 0x65, 0x78, 0x74,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x3a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x35, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x22, 0x30, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xd1, 0x02, 0x0a, 0x05, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x42, 0x0a, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62,
	0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e,
	0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61,
	0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x37, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9e, 0x02, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a,
	0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f,
	0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x49, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0c,
	0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0b,
	0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcc, 0x01,
	0x0a, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f,
	0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x0b, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x49, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0c,
	0x74, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x0c,
	0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xc4, 0x01, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x42, 0x0a, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0xaa, 0x02, 0x0a,
	0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x42, 0x0a, 0x0c, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f,
	0x6e, 0x52, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x70, 0x61, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x49,
	0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x74, 0x65, 0x78,
	0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0x57, 0x0a, 0x05, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x30, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4e, 0x47, 0x4c, 0x45, 0x5f,
	0x39, 0x30, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x31, 0x38,
	0x30, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x32, 0x37, 0x30,
	0x10, 0x04, 0x42, 0x5c, 0x0a, 0x1a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x69, 0x2e, 0x6f, 0x63, 0x72, 0x2e, 0x76, 0x31,
	0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x61, 0x69, 0x2f, 0x6f, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x63, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescData = file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDesc
)

func file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescData)
	})
	return file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDescData
}

var file_yandex_cloud_ai_ocr_v1_ocr_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_yandex_cloud_ai_ocr_v1_ocr_proto_goTypes = []interface{}{
	(Angle)(0),                     // 0: yandex.cloud.ai.ocr.v1.Angle
	(*Polygon)(nil),                // 1: yandex.cloud.ai.ocr.v1.Polygon
	(*Vertex)(nil),                 // 2: yandex.cloud.ai.ocr.v1.Vertex
	(*TextAnnotation)(nil),         // 3: yandex.cloud.ai.ocr.v1.TextAnnotation
	(*Entity)(nil),                 // 4: yandex.cloud.ai.ocr.v1.Entity
	(*Block)(nil),                  // 5: yandex.cloud.ai.ocr.v1.Block
	(*Line)(nil),                   // 6: yandex.cloud.ai.ocr.v1.Line
	(*Word)(nil),                   // 7: yandex.cloud.ai.ocr.v1.Word
	(*TextSegments)(nil),           // 8: yandex.cloud.ai.ocr.v1.TextSegments
	(*Table)(nil),                  // 9: yandex.cloud.ai.ocr.v1.Table
	(*TableCell)(nil),              // 10: yandex.cloud.ai.ocr.v1.TableCell
	(*Block_DetectedLanguage)(nil), // 11: yandex.cloud.ai.ocr.v1.Block.DetectedLanguage
}
var file_yandex_cloud_ai_ocr_v1_ocr_proto_depIdxs = []int32{
	2,  // 0: yandex.cloud.ai.ocr.v1.Polygon.vertices:type_name -> yandex.cloud.ai.ocr.v1.Vertex
	5,  // 1: yandex.cloud.ai.ocr.v1.TextAnnotation.blocks:type_name -> yandex.cloud.ai.ocr.v1.Block
	4,  // 2: yandex.cloud.ai.ocr.v1.TextAnnotation.entities:type_name -> yandex.cloud.ai.ocr.v1.Entity
	9,  // 3: yandex.cloud.ai.ocr.v1.TextAnnotation.tables:type_name -> yandex.cloud.ai.ocr.v1.Table
	0,  // 4: yandex.cloud.ai.ocr.v1.TextAnnotation.rotate:type_name -> yandex.cloud.ai.ocr.v1.Angle
	1,  // 5: yandex.cloud.ai.ocr.v1.Block.bounding_box:type_name -> yandex.cloud.ai.ocr.v1.Polygon
	6,  // 6: yandex.cloud.ai.ocr.v1.Block.lines:type_name -> yandex.cloud.ai.ocr.v1.Line
	11, // 7: yandex.cloud.ai.ocr.v1.Block.languages:type_name -> yandex.cloud.ai.ocr.v1.Block.DetectedLanguage
	8,  // 8: yandex.cloud.ai.ocr.v1.Block.text_segments:type_name -> yandex.cloud.ai.ocr.v1.TextSegments
	1,  // 9: yandex.cloud.ai.ocr.v1.Line.bounding_box:type_name -> yandex.cloud.ai.ocr.v1.Polygon
	7,  // 10: yandex.cloud.ai.ocr.v1.Line.words:type_name -> yandex.cloud.ai.ocr.v1.Word
	8,  // 11: yandex.cloud.ai.ocr.v1.Line.text_segments:type_name -> yandex.cloud.ai.ocr.v1.TextSegments
	0,  // 12: yandex.cloud.ai.ocr.v1.Line.orientation:type_name -> yandex.cloud.ai.ocr.v1.Angle
	1,  // 13: yandex.cloud.ai.ocr.v1.Word.bounding_box:type_name -> yandex.cloud.ai.ocr.v1.Polygon
	8,  // 14: yandex.cloud.ai.ocr.v1.Word.text_segments:type_name -> yandex.cloud.ai.ocr.v1.TextSegments
	1,  // 15: yandex.cloud.ai.ocr.v1.Table.bounding_box:type_name -> yandex.cloud.ai.ocr.v1.Polygon
	10, // 16: yandex.cloud.ai.ocr.v1.Table.cells:type_name -> yandex.cloud.ai.ocr.v1.TableCell
	1,  // 17: yandex.cloud.ai.ocr.v1.TableCell.bounding_box:type_name -> yandex.cloud.ai.ocr.v1.Polygon
	8,  // 18: yandex.cloud.ai.ocr.v1.TableCell.text_segments:type_name -> yandex.cloud.ai.ocr.v1.TextSegments
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ai_ocr_v1_ocr_proto_init() }
func file_yandex_cloud_ai_ocr_v1_ocr_proto_init() {
	if File_yandex_cloud_ai_ocr_v1_ocr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vertex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextAnnotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Word); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSegments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_DetectedLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_ai_ocr_v1_ocr_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_ocr_v1_ocr_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_ai_ocr_v1_ocr_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_ai_ocr_v1_ocr_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_ocr_v1_ocr_proto = out.File
	file_yandex_cloud_ai_ocr_v1_ocr_proto_rawDesc = nil
	file_yandex_cloud_ai_ocr_v1_ocr_proto_goTypes = nil
	file_yandex_cloud_ai_ocr_v1_ocr_proto_depIdxs = nil
}
