// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/ai/foundation_models/v1/text_classification/text_classification_service.proto

package text_classification

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for the service to classify text.
type TextClassificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the classification model.
	ModelUri string `protobuf:"bytes,1,opt,name=model_uri,json=modelUri,proto3" json:"model_uri,omitempty"`
	// Text for classification.
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TextClassificationRequest) Reset() {
	*x = TextClassificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextClassificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextClassificationRequest) ProtoMessage() {}

func (x *TextClassificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextClassificationRequest.ProtoReflect.Descriptor instead.
func (*TextClassificationRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescGZIP(), []int{0}
}

func (x *TextClassificationRequest) GetModelUri() string {
	if x != nil {
		return x.ModelUri
	}
	return ""
}

func (x *TextClassificationRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Response containing classifier predictions.
type TextClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result of classification - a list of label-confidence pairs.
	Predictions []*ClassificationLabel `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`
	// Model version (changes with model releases).
	ModelVersion string `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
}

func (x *TextClassificationResponse) Reset() {
	*x = TextClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextClassificationResponse) ProtoMessage() {}

func (x *TextClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextClassificationResponse.ProtoReflect.Descriptor instead.
func (*TextClassificationResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescGZIP(), []int{1}
}

func (x *TextClassificationResponse) GetPredictions() []*ClassificationLabel {
	if x != nil {
		return x.Predictions
	}
	return nil
}

func (x *TextClassificationResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

// Request for the service to classify text.
type FewShotTextClassificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the classification model.
	ModelUri string `protobuf:"bytes,1,opt,name=model_uri,json=modelUri,proto3" json:"model_uri,omitempty"`
	// Text description of the classification task.
	TaskDescription string `protobuf:"bytes,2,opt,name=task_description,json=taskDescription,proto3" json:"task_description,omitempty"`
	// List of available labels for the classification result.
	Labels []string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	// Text for classification.
	Text string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	// Optional set of text samples with expected labels that may be used as an additional hint for the classifier.
	Samples []*ClassificationSample `protobuf:"bytes,5,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *FewShotTextClassificationRequest) Reset() {
	*x = FewShotTextClassificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FewShotTextClassificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FewShotTextClassificationRequest) ProtoMessage() {}

func (x *FewShotTextClassificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FewShotTextClassificationRequest.ProtoReflect.Descriptor instead.
func (*FewShotTextClassificationRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescGZIP(), []int{2}
}

func (x *FewShotTextClassificationRequest) GetModelUri() string {
	if x != nil {
		return x.ModelUri
	}
	return ""
}

func (x *FewShotTextClassificationRequest) GetTaskDescription() string {
	if x != nil {
		return x.TaskDescription
	}
	return ""
}

func (x *FewShotTextClassificationRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *FewShotTextClassificationRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FewShotTextClassificationRequest) GetSamples() []*ClassificationSample {
	if x != nil {
		return x.Samples
	}
	return nil
}

// Response containing classifier predictions.
type FewShotTextClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result of classification - a list of label-confidence pairs.
	Predictions []*ClassificationLabel `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`
	// Model version (changes with model releases).
	ModelVersion string `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
}

func (x *FewShotTextClassificationResponse) Reset() {
	*x = FewShotTextClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FewShotTextClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FewShotTextClassificationResponse) ProtoMessage() {}

func (x *FewShotTextClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FewShotTextClassificationResponse.ProtoReflect.Descriptor instead.
func (*FewShotTextClassificationResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescGZIP(), []int{3}
}

func (x *FewShotTextClassificationResponse) GetPredictions() []*ClassificationLabel {
	if x != nil {
		return x.Predictions
	}
	return nil
}

func (x *FewShotTextClassificationResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

var File_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDesc = []byte{
	0x0a, 0x5a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x69, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x38, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x52, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x61, 0x69, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x19, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55,
	0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x1a, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x02, 0x0a, 0x20,
	0x46, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x72, 0x69, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x68, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0xb9,
	0x01, 0x0a, 0x21, 0x46, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x8f, 0x04, 0x0a, 0x19, 0x54,
	0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe9, 0x01, 0x0a, 0x08, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x53, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x54, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x85, 0x02, 0x0a, 0x0f, 0x46, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x5a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x5b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x46, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x65, 0x77, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xb0, 0x01, 0x0a,
	0x3c, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x69, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x70, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x69, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescData = file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDesc
)

func file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescData)
	})
	return file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDescData
}

var file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_goTypes = []interface{}{
	(*TextClassificationRequest)(nil),         // 0: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationRequest
	(*TextClassificationResponse)(nil),        // 1: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationResponse
	(*FewShotTextClassificationRequest)(nil),  // 2: yandex.cloud.ai.foundation_models.v1.text_classification.FewShotTextClassificationRequest
	(*FewShotTextClassificationResponse)(nil), // 3: yandex.cloud.ai.foundation_models.v1.text_classification.FewShotTextClassificationResponse
	(*ClassificationLabel)(nil),               // 4: yandex.cloud.ai.foundation_models.v1.text_classification.ClassificationLabel
	(*ClassificationSample)(nil),              // 5: yandex.cloud.ai.foundation_models.v1.text_classification.ClassificationSample
}
var file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_depIdxs = []int32{
	4, // 0: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationResponse.predictions:type_name -> yandex.cloud.ai.foundation_models.v1.text_classification.ClassificationLabel
	5, // 1: yandex.cloud.ai.foundation_models.v1.text_classification.FewShotTextClassificationRequest.samples:type_name -> yandex.cloud.ai.foundation_models.v1.text_classification.ClassificationSample
	4, // 2: yandex.cloud.ai.foundation_models.v1.text_classification.FewShotTextClassificationResponse.predictions:type_name -> yandex.cloud.ai.foundation_models.v1.text_classification.ClassificationLabel
	0, // 3: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationService.Classify:input_type -> yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationRequest
	2, // 4: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationService.FewShotClassify:input_type -> yandex.cloud.ai.foundation_models.v1.text_classification.FewShotTextClassificationRequest
	1, // 5: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationService.Classify:output_type -> yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationResponse
	3, // 6: yandex.cloud.ai.foundation_models.v1.text_classification.TextClassificationService.FewShotClassify:output_type -> yandex.cloud.ai.foundation_models.v1.text_classification.FewShotTextClassificationResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_init()
}
func file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_init() {
	if File_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto != nil {
		return
	}
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextClassificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FewShotTextClassificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FewShotTextClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto = out.File
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_rawDesc = nil
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_goTypes = nil
	file_yandex_cloud_ai_foundation_models_v1_text_classification_text_classification_service_proto_depIdxs = nil
}
