// Code generated by protoc-gen-goext. DO NOT EDIT.

package backup

import (
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (m *Policy) SetId(v string) {
	m.Id = v
}

func (m *Policy) SetName(v string) {
	m.Name = v
}

func (m *Policy) SetCreatedAt(v *timestamppb.Timestamp) {
	m.CreatedAt = v
}

func (m *Policy) SetUpdatedAt(v *timestamppb.Timestamp) {
	m.UpdatedAt = v
}

func (m *Policy) SetEnabled(v bool) {
	m.Enabled = v
}

func (m *Policy) SetSettings(v *PolicySettings) {
	m.Settings = v
}

func (m *Policy) SetFolderId(v string) {
	m.FolderId = v
}

func (m *PolicySettings) SetCompression(v PolicySettings_Compression) {
	m.Compression = v
}

func (m *PolicySettings) SetFormat(v Format) {
	m.Format = v
}

func (m *PolicySettings) SetMultiVolumeSnapshottingEnabled(v bool) {
	m.MultiVolumeSnapshottingEnabled = v
}

func (m *PolicySettings) SetPreserveFileSecuritySettings(v bool) {
	m.PreserveFileSecuritySettings = v
}

func (m *PolicySettings) SetReattempts(v *PolicySettings_RetriesConfiguration) {
	m.Reattempts = v
}

func (m *PolicySettings) SetSilentModeEnabled(v bool) {
	m.SilentModeEnabled = v
}

func (m *PolicySettings) SetSplitting(v *PolicySettings_Splitting) {
	m.Splitting = v
}

func (m *PolicySettings) SetVmSnapshotReattempts(v *PolicySettings_RetriesConfiguration) {
	m.VmSnapshotReattempts = v
}

func (m *PolicySettings) SetVss(v *PolicySettings_VolumeShadowCopyServiceSettings) {
	m.Vss = v
}

func (m *PolicySettings) SetArchive(v *PolicySettings_ArchiveProperties) {
	m.Archive = v
}

func (m *PolicySettings) SetPerformanceWindow(v *PolicySettings_PerformanceWindow) {
	m.PerformanceWindow = v
}

func (m *PolicySettings) SetRetention(v *PolicySettings_Retention) {
	m.Retention = v
}

func (m *PolicySettings) SetScheduling(v *PolicySettings_Scheduling) {
	m.Scheduling = v
}

func (m *PolicySettings) SetCbt(v PolicySettings_ChangedBlockTracking) {
	m.Cbt = v
}

func (m *PolicySettings) SetFastBackupEnabled(v bool) {
	m.FastBackupEnabled = v
}

func (m *PolicySettings) SetQuiesceSnapshottingEnabled(v bool) {
	m.QuiesceSnapshottingEnabled = v
}

func (m *PolicySettings_Interval) SetType(v PolicySettings_Interval_Type) {
	m.Type = v
}

func (m *PolicySettings_Interval) SetCount(v int64) {
	m.Count = v
}

func (m *PolicySettings_RetriesConfiguration) SetEnabled(v bool) {
	m.Enabled = v
}

func (m *PolicySettings_RetriesConfiguration) SetInterval(v *PolicySettings_Interval) {
	m.Interval = v
}

func (m *PolicySettings_RetriesConfiguration) SetMaxAttempts(v int64) {
	m.MaxAttempts = v
}

func (m *PolicySettings_Splitting) SetSize(v int64) {
	m.Size = v
}

func (m *PolicySettings_VolumeShadowCopyServiceSettings) SetEnabled(v bool) {
	m.Enabled = v
}

func (m *PolicySettings_VolumeShadowCopyServiceSettings) SetProvider(v PolicySettings_VolumeShadowCopyServiceSettings_VSSProvider) {
	m.Provider = v
}

func (m *PolicySettings_ArchiveProperties) SetName(v string) {
	m.Name = v
}

func (m *PolicySettings_PerformanceWindow) SetEnabled(v bool) {
	m.Enabled = v
}

func (m *PolicySettings_TimeOfDay) SetHour(v int64) {
	m.Hour = v
}

func (m *PolicySettings_TimeOfDay) SetMinute(v int64) {
	m.Minute = v
}

func (m *PolicySettings_Retention) SetRules(v []*PolicySettings_Retention_RetentionRule) {
	m.Rules = v
}

func (m *PolicySettings_Retention) SetBeforeBackup(v bool) {
	m.BeforeBackup = v
}

type PolicySettings_Retention_RetentionRule_Condition = isPolicySettings_Retention_RetentionRule_Condition

func (m *PolicySettings_Retention_RetentionRule) SetCondition(v PolicySettings_Retention_RetentionRule_Condition) {
	m.Condition = v
}

func (m *PolicySettings_Retention_RetentionRule) SetBackupSet(v []PolicySettings_RepeatePeriod) {
	m.BackupSet = v
}

func (m *PolicySettings_Retention_RetentionRule) SetMaxAge(v *PolicySettings_Interval) {
	m.Condition = &PolicySettings_Retention_RetentionRule_MaxAge{
		MaxAge: v,
	}
}

func (m *PolicySettings_Retention_RetentionRule) SetMaxCount(v int64) {
	m.Condition = &PolicySettings_Retention_RetentionRule_MaxCount{
		MaxCount: v,
	}
}

func (m *PolicySettings_Scheduling) SetBackupSets(v []*PolicySettings_Scheduling_BackupSet) {
	m.BackupSets = v
}

func (m *PolicySettings_Scheduling) SetEnabled(v bool) {
	m.Enabled = v
}

func (m *PolicySettings_Scheduling) SetMaxParallelBackups(v int64) {
	m.MaxParallelBackups = v
}

func (m *PolicySettings_Scheduling) SetRandMaxDelay(v *PolicySettings_Interval) {
	m.RandMaxDelay = v
}

func (m *PolicySettings_Scheduling) SetScheme(v PolicySettings_Scheduling_Scheme) {
	m.Scheme = v
}

func (m *PolicySettings_Scheduling) SetWeeklyBackupDay(v PolicySettings_Day) {
	m.WeeklyBackupDay = v
}

type PolicySettings_Scheduling_BackupSet_Setting = isPolicySettings_Scheduling_BackupSet_Setting

func (m *PolicySettings_Scheduling_BackupSet) SetSetting(v PolicySettings_Scheduling_BackupSet_Setting) {
	m.Setting = v
}

func (m *PolicySettings_Scheduling_BackupSet) SetTime(v *PolicySettings_Scheduling_BackupSet_Time) {
	m.Setting = &PolicySettings_Scheduling_BackupSet_Time_{
		Time: v,
	}
}

func (m *PolicySettings_Scheduling_BackupSet) SetSinceLastExecTime(v *PolicySettings_Scheduling_BackupSet_SinceLastExecTime) {
	m.Setting = &PolicySettings_Scheduling_BackupSet_SinceLastExecTime_{
		SinceLastExecTime: v,
	}
}

func (m *PolicySettings_Scheduling_BackupSet) SetType(v PolicySettings_Scheduling_BackupSet_Type) {
	m.Type = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetWeekdays(v []PolicySettings_Day) {
	m.Weekdays = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetRepeatAt(v []*PolicySettings_TimeOfDay) {
	m.RepeatAt = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetRepeatEvery(v *PolicySettings_Interval) {
	m.RepeatEvery = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetTimeFrom(v *PolicySettings_TimeOfDay) {
	m.TimeFrom = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetTimeTo(v *PolicySettings_TimeOfDay) {
	m.TimeTo = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetMonthdays(v []int64) {
	m.Monthdays = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetIncludeLastDayOfMonth(v bool) {
	m.IncludeLastDayOfMonth = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetMonths(v []int64) {
	m.Months = v
}

func (m *PolicySettings_Scheduling_BackupSet_Time) SetType(v PolicySettings_RepeatePeriod) {
	m.Type = v
}

func (m *PolicySettings_Scheduling_BackupSet_SinceLastExecTime) SetDelay(v *PolicySettings_Interval) {
	m.Delay = v
}

func (m *PolicyApplication) SetPolicyId(v string) {
	m.PolicyId = v
}

func (m *PolicyApplication) SetComputeInstanceId(v string) {
	m.ComputeInstanceId = v
}

func (m *PolicyApplication) SetEnabled(v bool) {
	m.Enabled = v
}

func (m *PolicyApplication) SetStatus(v PolicyApplication_Status) {
	m.Status = v
}

func (m *PolicyApplication) SetCreatedAt(v *timestamppb.Timestamp) {
	m.CreatedAt = v
}

func (m *PolicyApplication) SetIsProcessing(v bool) {
	m.IsProcessing = v
}
