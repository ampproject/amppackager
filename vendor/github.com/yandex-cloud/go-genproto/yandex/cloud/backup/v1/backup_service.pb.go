// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/backup/v1/backup_service.proto

package backup

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilesRecoveryOptions_Overwrite int32

const (
	// Unspecified value treated as Overwrite all
	FilesRecoveryOptions_OVERWRITE_UNSPECIFIED FilesRecoveryOptions_Overwrite = 0
	// All overwrites all existing files by recovered ones.
	FilesRecoveryOptions_OVERWRITE_ALL FilesRecoveryOptions_Overwrite = 1
	// Older overwrites older files only.
	FilesRecoveryOptions_OVERWRITE_OLDER FilesRecoveryOptions_Overwrite = 2
	// None does not overwrites files at all.
	FilesRecoveryOptions_OVERWRITE_NONE FilesRecoveryOptions_Overwrite = 3
)

// Enum value maps for FilesRecoveryOptions_Overwrite.
var (
	FilesRecoveryOptions_Overwrite_name = map[int32]string{
		0: "OVERWRITE_UNSPECIFIED",
		1: "OVERWRITE_ALL",
		2: "OVERWRITE_OLDER",
		3: "OVERWRITE_NONE",
	}
	FilesRecoveryOptions_Overwrite_value = map[string]int32{
		"OVERWRITE_UNSPECIFIED": 0,
		"OVERWRITE_ALL":         1,
		"OVERWRITE_OLDER":       2,
		"OVERWRITE_NONE":        3,
	}
)

func (x FilesRecoveryOptions_Overwrite) Enum() *FilesRecoveryOptions_Overwrite {
	p := new(FilesRecoveryOptions_Overwrite)
	*p = x
	return p
}

func (x FilesRecoveryOptions_Overwrite) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilesRecoveryOptions_Overwrite) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_backup_v1_backup_service_proto_enumTypes[0].Descriptor()
}

func (FilesRecoveryOptions_Overwrite) Type() protoreflect.EnumType {
	return &file_yandex_cloud_backup_v1_backup_service_proto_enumTypes[0]
}

func (x FilesRecoveryOptions_Overwrite) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilesRecoveryOptions_Overwrite.Descriptor instead.
func (FilesRecoveryOptions_Overwrite) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{11, 0}
}

type ListArchivesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*ListArchivesRequest_FolderId
	//	*ListArchivesRequest_ComputeInstanceId
	Id isListArchivesRequest_Id `protobuf_oneof:"id"`
}

func (x *ListArchivesRequest) Reset() {
	*x = ListArchivesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArchivesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivesRequest) ProtoMessage() {}

func (x *ListArchivesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivesRequest.ProtoReflect.Descriptor instead.
func (*ListArchivesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{0}
}

func (m *ListArchivesRequest) GetId() isListArchivesRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *ListArchivesRequest) GetFolderId() string {
	if x, ok := x.GetId().(*ListArchivesRequest_FolderId); ok {
		return x.FolderId
	}
	return ""
}

func (x *ListArchivesRequest) GetComputeInstanceId() string {
	if x, ok := x.GetId().(*ListArchivesRequest_ComputeInstanceId); ok {
		return x.ComputeInstanceId
	}
	return ""
}

type isListArchivesRequest_Id interface {
	isListArchivesRequest_Id()
}

type ListArchivesRequest_FolderId struct {
	// List of archives in specified folder.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3,oneof"`
}

type ListArchivesRequest_ComputeInstanceId struct {
	// List of archives of the specified Compute Cloud instance.
	ComputeInstanceId string `protobuf:"bytes,2,opt,name=compute_instance_id,json=computeInstanceId,proto3,oneof"`
}

func (*ListArchivesRequest_FolderId) isListArchivesRequest_Id() {}

func (*ListArchivesRequest_ComputeInstanceId) isListArchivesRequest_Id() {}

type ListArchivesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Archives []*Archive `protobuf:"bytes,1,rep,name=archives,proto3" json:"archives,omitempty"`
}

func (x *ListArchivesResponse) Reset() {
	*x = ListArchivesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArchivesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivesResponse) ProtoMessage() {}

func (x *ListArchivesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivesResponse.ProtoReflect.Descriptor instead.
func (*ListArchivesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListArchivesResponse) GetArchives() []*Archive {
	if x != nil {
		return x.Archives
	}
	return nil
}

type ListBackupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*ListBackupsRequest_ComputeInstanceId
	//	*ListBackupsRequest_Archive
	//	*ListBackupsRequest_FolderId
	//	*ListBackupsRequest_InstancePolicy_
	//	*ListBackupsRequest_ResourceId
	//	*ListBackupsRequest_PolicyId
	Id isListBackupsRequest_Id `protobuf_oneof:"id"`
	// By which column the listing should be ordered and in which direction,
	// format is "createdAt desc". "createdAt desc" if omitted.
	OrderBy string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Filter list by various parameters.
	// Supported parameters are:
	// * created_at
	//
	// Supported logic operators:
	// * AND
	Filter string `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListBackupsRequest) Reset() {
	*x = ListBackupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBackupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupsRequest) ProtoMessage() {}

func (x *ListBackupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupsRequest.ProtoReflect.Descriptor instead.
func (*ListBackupsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{2}
}

func (m *ListBackupsRequest) GetId() isListBackupsRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *ListBackupsRequest) GetComputeInstanceId() string {
	if x, ok := x.GetId().(*ListBackupsRequest_ComputeInstanceId); ok {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *ListBackupsRequest) GetArchive() *ListBackupsRequest_ArchiveParameters {
	if x, ok := x.GetId().(*ListBackupsRequest_Archive); ok {
		return x.Archive
	}
	return nil
}

func (x *ListBackupsRequest) GetFolderId() string {
	if x, ok := x.GetId().(*ListBackupsRequest_FolderId); ok {
		return x.FolderId
	}
	return ""
}

func (x *ListBackupsRequest) GetInstancePolicy() *ListBackupsRequest_InstancePolicy {
	if x, ok := x.GetId().(*ListBackupsRequest_InstancePolicy_); ok {
		return x.InstancePolicy
	}
	return nil
}

func (x *ListBackupsRequest) GetResourceId() string {
	if x, ok := x.GetId().(*ListBackupsRequest_ResourceId); ok {
		return x.ResourceId
	}
	return ""
}

func (x *ListBackupsRequest) GetPolicyId() string {
	if x, ok := x.GetId().(*ListBackupsRequest_PolicyId); ok {
		return x.PolicyId
	}
	return ""
}

func (x *ListBackupsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListBackupsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type isListBackupsRequest_Id interface {
	isListBackupsRequest_Id()
}

type ListBackupsRequest_ComputeInstanceId struct {
	// List backups that belongs to specific Compute Cloud instance.
	ComputeInstanceId string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3,oneof"`
}

type ListBackupsRequest_Archive struct {
	// List backups that belongs to specific archive of specific folder.
	Archive *ListBackupsRequest_ArchiveParameters `protobuf:"bytes,2,opt,name=archive,proto3,oneof"`
}

type ListBackupsRequest_FolderId struct {
	// List backups that belongs to specific folder.
	FolderId string `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3,oneof"`
}

type ListBackupsRequest_InstancePolicy_ struct {
	// List backups that belongs to specific instance and policy at the same time.
	InstancePolicy *ListBackupsRequest_InstancePolicy `protobuf:"bytes,4,opt,name=instance_policy,json=instancePolicy,proto3,oneof"`
}

type ListBackupsRequest_ResourceId struct {
	// List backups by specific resource ID.
	ResourceId string `protobuf:"bytes,6,opt,name=resource_id,json=resourceId,proto3,oneof"`
}

type ListBackupsRequest_PolicyId struct {
	// List backups by specific policy ID.
	PolicyId string `protobuf:"bytes,7,opt,name=policy_id,json=policyId,proto3,oneof"`
}

func (*ListBackupsRequest_ComputeInstanceId) isListBackupsRequest_Id() {}

func (*ListBackupsRequest_Archive) isListBackupsRequest_Id() {}

func (*ListBackupsRequest_FolderId) isListBackupsRequest_Id() {}

func (*ListBackupsRequest_InstancePolicy_) isListBackupsRequest_Id() {}

func (*ListBackupsRequest_ResourceId) isListBackupsRequest_Id() {}

func (*ListBackupsRequest_PolicyId) isListBackupsRequest_Id() {}

type ListBackupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backups []*Backup `protobuf:"bytes,1,rep,name=backups,proto3" json:"backups,omitempty"`
}

func (x *ListBackupsResponse) Reset() {
	*x = ListBackupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBackupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupsResponse) ProtoMessage() {}

func (x *ListBackupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupsResponse.ProtoReflect.Descriptor instead.
func (*ListBackupsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListBackupsResponse) GetBackups() []*Backup {
	if x != nil {
		return x.Backups
	}
	return nil
}

type ListFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Folder ID.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Backup ID.
	BackupId string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	// Empty source will list disks of the backup.
	SourceId string `protobuf:"bytes,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListFilesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListFilesRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *ListFilesRequest) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type ListFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*BackupFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListFilesResponse) GetFiles() []*BackupFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Backup ID.
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	// Folder ID.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
}

func (x *GetBackupRequest) Reset() {
	*x = GetBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackupRequest) ProtoMessage() {}

func (x *GetBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackupRequest.ProtoReflect.Descriptor instead.
func (*GetBackupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetBackupRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *GetBackupRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

type StartRecoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Destination Compute Cloud instance ID to which backup should be applied.
	ComputeInstanceId string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	// Backup ID that will be applied to destination Compute Cloud instance.
	BackupId string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
}

func (x *StartRecoveryRequest) Reset() {
	*x = StartRecoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecoveryRequest) ProtoMessage() {}

func (x *StartRecoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecoveryRequest.ProtoReflect.Descriptor instead.
func (*StartRecoveryRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{7}
}

func (x *StartRecoveryRequest) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *StartRecoveryRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type StartRecoveryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Progress of the backup process.
	ProgressPercentage float64 `protobuf:"fixed64,1,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	// Source Backup ID that will be applied.
	SrcBackupId string `protobuf:"bytes,2,opt,name=src_backup_id,json=srcBackupId,proto3" json:"src_backup_id,omitempty"`
	// Destination Compute Cloud instance ID to which backup will be applied.
	DstComputeInstanceId string `protobuf:"bytes,3,opt,name=dst_compute_instance_id,json=dstComputeInstanceId,proto3" json:"dst_compute_instance_id,omitempty"`
}

func (x *StartRecoveryMetadata) Reset() {
	*x = StartRecoveryMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecoveryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecoveryMetadata) ProtoMessage() {}

func (x *StartRecoveryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecoveryMetadata.ProtoReflect.Descriptor instead.
func (*StartRecoveryMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{8}
}

func (x *StartRecoveryMetadata) GetProgressPercentage() float64 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *StartRecoveryMetadata) GetSrcBackupId() string {
	if x != nil {
		return x.SrcBackupId
	}
	return ""
}

func (x *StartRecoveryMetadata) GetDstComputeInstanceId() string {
	if x != nil {
		return x.DstComputeInstanceId
	}
	return ""
}

type TargetPathOriginal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TargetPathOriginal) Reset() {
	*x = TargetPathOriginal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetPathOriginal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetPathOriginal) ProtoMessage() {}

func (x *TargetPathOriginal) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetPathOriginal.ProtoReflect.Descriptor instead.
func (*TargetPathOriginal) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{9}
}

type TargetPathCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Custom folder for file recovery.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *TargetPathCustom) Reset() {
	*x = TargetPathCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetPathCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetPathCustom) ProtoMessage() {}

func (x *TargetPathCustom) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetPathCustom.ProtoReflect.Descriptor instead.
func (*TargetPathCustom) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{10}
}

func (x *TargetPathCustom) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FilesRecoveryOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Overwrite options declares the behavior for files that already exists on the file system.
	Overwrite FilesRecoveryOptions_Overwrite `protobuf:"varint,1,opt,name=overwrite,proto3,enum=yandex.cloud.backup.v1.FilesRecoveryOptions_Overwrite" json:"overwrite,omitempty"`
	// specifies whether the recovery plan is able to reboot host if needed.
	RebootIfNeeded bool `protobuf:"varint,2,opt,name=reboot_if_needed,json=rebootIfNeeded,proto3" json:"reboot_if_needed,omitempty"`
	// Path strategy for selected files.
	//
	// Types that are assignable to Type:
	//
	//	*FilesRecoveryOptions_Original
	//	*FilesRecoveryOptions_Custom
	Type isFilesRecoveryOptions_Type `protobuf_oneof:"type"`
}

func (x *FilesRecoveryOptions) Reset() {
	*x = FilesRecoveryOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesRecoveryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesRecoveryOptions) ProtoMessage() {}

func (x *FilesRecoveryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesRecoveryOptions.ProtoReflect.Descriptor instead.
func (*FilesRecoveryOptions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{11}
}

func (x *FilesRecoveryOptions) GetOverwrite() FilesRecoveryOptions_Overwrite {
	if x != nil {
		return x.Overwrite
	}
	return FilesRecoveryOptions_OVERWRITE_UNSPECIFIED
}

func (x *FilesRecoveryOptions) GetRebootIfNeeded() bool {
	if x != nil {
		return x.RebootIfNeeded
	}
	return false
}

func (m *FilesRecoveryOptions) GetType() isFilesRecoveryOptions_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FilesRecoveryOptions) GetOriginal() *TargetPathOriginal {
	if x, ok := x.GetType().(*FilesRecoveryOptions_Original); ok {
		return x.Original
	}
	return nil
}

func (x *FilesRecoveryOptions) GetCustom() *TargetPathCustom {
	if x, ok := x.GetType().(*FilesRecoveryOptions_Custom); ok {
		return x.Custom
	}
	return nil
}

type isFilesRecoveryOptions_Type interface {
	isFilesRecoveryOptions_Type()
}

type FilesRecoveryOptions_Original struct {
	// Keep original paths of files.
	Original *TargetPathOriginal `protobuf:"bytes,100,opt,name=original,proto3,oneof"`
}

type FilesRecoveryOptions_Custom struct {
	// Set custom folder for file recovery.
	Custom *TargetPathCustom `protobuf:"bytes,101,opt,name=custom,proto3,oneof"`
}

func (*FilesRecoveryOptions_Original) isFilesRecoveryOptions_Type() {}

func (*FilesRecoveryOptions_Custom) isFilesRecoveryOptions_Type() {}

type StartFilesRecoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Destination instance ID.
	ComputeInstanceId string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	// Backup ID.
	BackupId  string                `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	Opts      *FilesRecoveryOptions `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
	SourceIds []string              `protobuf:"bytes,4,rep,name=source_ids,json=sourceIds,proto3" json:"source_ids,omitempty"`
}

func (x *StartFilesRecoveryRequest) Reset() {
	*x = StartFilesRecoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFilesRecoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFilesRecoveryRequest) ProtoMessage() {}

func (x *StartFilesRecoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFilesRecoveryRequest.ProtoReflect.Descriptor instead.
func (*StartFilesRecoveryRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{12}
}

func (x *StartFilesRecoveryRequest) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *StartFilesRecoveryRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *StartFilesRecoveryRequest) GetOpts() *FilesRecoveryOptions {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *StartFilesRecoveryRequest) GetSourceIds() []string {
	if x != nil {
		return x.SourceIds
	}
	return nil
}

type StartFilesRecoveryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgressPercentage float64 `protobuf:"fixed64,1,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	// Destination instance ID.
	ComputeInstanceId string `protobuf:"bytes,2,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	// Backup ID.
	BackupId  string   `protobuf:"bytes,3,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	SourceIds []string `protobuf:"bytes,4,rep,name=source_ids,json=sourceIds,proto3" json:"source_ids,omitempty"`
}

func (x *StartFilesRecoveryMetadata) Reset() {
	*x = StartFilesRecoveryMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFilesRecoveryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFilesRecoveryMetadata) ProtoMessage() {}

func (x *StartFilesRecoveryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFilesRecoveryMetadata.ProtoReflect.Descriptor instead.
func (*StartFilesRecoveryMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{13}
}

func (x *StartFilesRecoveryMetadata) GetProgressPercentage() float64 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *StartFilesRecoveryMetadata) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *StartFilesRecoveryMetadata) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *StartFilesRecoveryMetadata) GetSourceIds() []string {
	if x != nil {
		return x.SourceIds
	}
	return nil
}

type DeleteBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Compute Cloud instance ID of the Backup.
	ComputeInstanceId string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	// Backup ID that should be deleted.
	BackupId string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
}

func (x *DeleteBackupRequest) Reset() {
	*x = DeleteBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBackupRequest) ProtoMessage() {}

func (x *DeleteBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBackupRequest.ProtoReflect.Descriptor instead.
func (*DeleteBackupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteBackupRequest) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *DeleteBackupRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type DeleteBackupMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Compute Cloud instance ID of the Backup.
	ComputeInstanceId string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	// Backup ID that should be deleted.
	BackupId string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
}

func (x *DeleteBackupMetadata) Reset() {
	*x = DeleteBackupMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBackupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBackupMetadata) ProtoMessage() {}

func (x *DeleteBackupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBackupMetadata.ProtoReflect.Descriptor instead.
func (*DeleteBackupMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteBackupMetadata) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *DeleteBackupMetadata) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type ListBackupsRequest_ArchiveParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Archive ID.
	ArchiveId string `protobuf:"bytes,1,opt,name=archive_id,json=archiveId,proto3" json:"archive_id,omitempty"`
	// Folder ID.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
}

func (x *ListBackupsRequest_ArchiveParameters) Reset() {
	*x = ListBackupsRequest_ArchiveParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBackupsRequest_ArchiveParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupsRequest_ArchiveParameters) ProtoMessage() {}

func (x *ListBackupsRequest_ArchiveParameters) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupsRequest_ArchiveParameters.ProtoReflect.Descriptor instead.
func (*ListBackupsRequest_ArchiveParameters) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListBackupsRequest_ArchiveParameters) GetArchiveId() string {
	if x != nil {
		return x.ArchiveId
	}
	return ""
}

func (x *ListBackupsRequest_ArchiveParameters) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

type ListBackupsRequest_InstancePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Compute Cloud instance ID.
	ComputeInstanceId string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	// Policy ID.
	PolicyId string `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *ListBackupsRequest_InstancePolicy) Reset() {
	*x = ListBackupsRequest_InstancePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBackupsRequest_InstancePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackupsRequest_InstancePolicy) ProtoMessage() {}

func (x *ListBackupsRequest_InstancePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackupsRequest_InstancePolicy.ProtoReflect.Descriptor instead.
func (*ListBackupsRequest_InstancePolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ListBackupsRequest_InstancePolicy) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *ListBackupsRequest_InstancePolicy) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

var File_yandex_cloud_backup_v1_backup_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_backup_v1_backup_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x72, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x12,
	0x04, 0xc0, 0xc1, 0x31, 0x01, 0x22, 0x53, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x22, 0xe2, 0x04, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a,
	0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x0f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x5b, 0x0a, 0x11, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0a,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x09, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x1a, 0x5d, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x04, 0xc0, 0xc1, 0x31, 0x01, 0x22,
	0x4f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
	0x22, 0x7b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01,
	0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8,
	0xc7, 0x31, 0x00, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31,
	0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x72,
	0x63, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x17, 0x64, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x26, 0x0a, 0x10, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0xa8, 0x03, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5a, 0x0a, 0x09,
	0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x00, 0x52, 0x09, 0x6f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74,
	0x49, 0x66, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x42, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0x62, 0x0a, 0x09, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4f,
	0x4c, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x52,
	0x49, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x04, 0xc0, 0xc1, 0x31, 0x01, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x64, 0x22, 0xe3,
	0x01, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x25, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x06, 0x82, 0xc8, 0x31, 0x02, 0x3e, 0x30, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8,
	0xc7, 0x31, 0x01, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x06, 0x82, 0xc8, 0x31, 0x02, 0x3e, 0x30, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8,
	0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7,
	0x31, 0x01, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49,
	0x64, 0x32, 0xfb, 0x08, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
	0x12, 0xa4, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x12, 0x24, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x28, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x12, 0x1e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xcb, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0xb2, 0xd2, 0x2a, 0x2e, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01,
	0x2a, 0x22, 0x2c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x3a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12,
	0xa3, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0xb2, 0xd2,
	0x2a, 0x33, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0xc7, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x6d, 0xb2, 0xd2, 0x2a, 0x2d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x15, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x2a, 0x34, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x42,
	0x5f, 0x0a, 0x1a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x5a, 0x41, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_backup_v1_backup_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_backup_v1_backup_service_proto_rawDescData = file_yandex_cloud_backup_v1_backup_service_proto_rawDesc
)

func file_yandex_cloud_backup_v1_backup_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_backup_v1_backup_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_backup_v1_backup_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_backup_v1_backup_service_proto_rawDescData)
	})
	return file_yandex_cloud_backup_v1_backup_service_proto_rawDescData
}

var file_yandex_cloud_backup_v1_backup_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_backup_v1_backup_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_yandex_cloud_backup_v1_backup_service_proto_goTypes = []interface{}{
	(FilesRecoveryOptions_Overwrite)(0),          // 0: yandex.cloud.backup.v1.FilesRecoveryOptions.Overwrite
	(*ListArchivesRequest)(nil),                  // 1: yandex.cloud.backup.v1.ListArchivesRequest
	(*ListArchivesResponse)(nil),                 // 2: yandex.cloud.backup.v1.ListArchivesResponse
	(*ListBackupsRequest)(nil),                   // 3: yandex.cloud.backup.v1.ListBackupsRequest
	(*ListBackupsResponse)(nil),                  // 4: yandex.cloud.backup.v1.ListBackupsResponse
	(*ListFilesRequest)(nil),                     // 5: yandex.cloud.backup.v1.ListFilesRequest
	(*ListFilesResponse)(nil),                    // 6: yandex.cloud.backup.v1.ListFilesResponse
	(*GetBackupRequest)(nil),                     // 7: yandex.cloud.backup.v1.GetBackupRequest
	(*StartRecoveryRequest)(nil),                 // 8: yandex.cloud.backup.v1.StartRecoveryRequest
	(*StartRecoveryMetadata)(nil),                // 9: yandex.cloud.backup.v1.StartRecoveryMetadata
	(*TargetPathOriginal)(nil),                   // 10: yandex.cloud.backup.v1.TargetPathOriginal
	(*TargetPathCustom)(nil),                     // 11: yandex.cloud.backup.v1.TargetPathCustom
	(*FilesRecoveryOptions)(nil),                 // 12: yandex.cloud.backup.v1.FilesRecoveryOptions
	(*StartFilesRecoveryRequest)(nil),            // 13: yandex.cloud.backup.v1.StartFilesRecoveryRequest
	(*StartFilesRecoveryMetadata)(nil),           // 14: yandex.cloud.backup.v1.StartFilesRecoveryMetadata
	(*DeleteBackupRequest)(nil),                  // 15: yandex.cloud.backup.v1.DeleteBackupRequest
	(*DeleteBackupMetadata)(nil),                 // 16: yandex.cloud.backup.v1.DeleteBackupMetadata
	(*ListBackupsRequest_ArchiveParameters)(nil), // 17: yandex.cloud.backup.v1.ListBackupsRequest.ArchiveParameters
	(*ListBackupsRequest_InstancePolicy)(nil),    // 18: yandex.cloud.backup.v1.ListBackupsRequest.InstancePolicy
	(*Archive)(nil),                              // 19: yandex.cloud.backup.v1.Archive
	(*Backup)(nil),                               // 20: yandex.cloud.backup.v1.Backup
	(*BackupFile)(nil),                           // 21: yandex.cloud.backup.v1.BackupFile
	(*operation.Operation)(nil),                  // 22: yandex.cloud.operation.Operation
}
var file_yandex_cloud_backup_v1_backup_service_proto_depIdxs = []int32{
	19, // 0: yandex.cloud.backup.v1.ListArchivesResponse.archives:type_name -> yandex.cloud.backup.v1.Archive
	17, // 1: yandex.cloud.backup.v1.ListBackupsRequest.archive:type_name -> yandex.cloud.backup.v1.ListBackupsRequest.ArchiveParameters
	18, // 2: yandex.cloud.backup.v1.ListBackupsRequest.instance_policy:type_name -> yandex.cloud.backup.v1.ListBackupsRequest.InstancePolicy
	20, // 3: yandex.cloud.backup.v1.ListBackupsResponse.backups:type_name -> yandex.cloud.backup.v1.Backup
	21, // 4: yandex.cloud.backup.v1.ListFilesResponse.files:type_name -> yandex.cloud.backup.v1.BackupFile
	0,  // 5: yandex.cloud.backup.v1.FilesRecoveryOptions.overwrite:type_name -> yandex.cloud.backup.v1.FilesRecoveryOptions.Overwrite
	10, // 6: yandex.cloud.backup.v1.FilesRecoveryOptions.original:type_name -> yandex.cloud.backup.v1.TargetPathOriginal
	11, // 7: yandex.cloud.backup.v1.FilesRecoveryOptions.custom:type_name -> yandex.cloud.backup.v1.TargetPathCustom
	12, // 8: yandex.cloud.backup.v1.StartFilesRecoveryRequest.opts:type_name -> yandex.cloud.backup.v1.FilesRecoveryOptions
	3,  // 9: yandex.cloud.backup.v1.BackupService.List:input_type -> yandex.cloud.backup.v1.ListBackupsRequest
	1,  // 10: yandex.cloud.backup.v1.BackupService.ListArchives:input_type -> yandex.cloud.backup.v1.ListArchivesRequest
	5,  // 11: yandex.cloud.backup.v1.BackupService.ListFiles:input_type -> yandex.cloud.backup.v1.ListFilesRequest
	7,  // 12: yandex.cloud.backup.v1.BackupService.Get:input_type -> yandex.cloud.backup.v1.GetBackupRequest
	8,  // 13: yandex.cloud.backup.v1.BackupService.StartRecovery:input_type -> yandex.cloud.backup.v1.StartRecoveryRequest
	13, // 14: yandex.cloud.backup.v1.BackupService.StartFilesRecovery:input_type -> yandex.cloud.backup.v1.StartFilesRecoveryRequest
	15, // 15: yandex.cloud.backup.v1.BackupService.Delete:input_type -> yandex.cloud.backup.v1.DeleteBackupRequest
	4,  // 16: yandex.cloud.backup.v1.BackupService.List:output_type -> yandex.cloud.backup.v1.ListBackupsResponse
	2,  // 17: yandex.cloud.backup.v1.BackupService.ListArchives:output_type -> yandex.cloud.backup.v1.ListArchivesResponse
	6,  // 18: yandex.cloud.backup.v1.BackupService.ListFiles:output_type -> yandex.cloud.backup.v1.ListFilesResponse
	20, // 19: yandex.cloud.backup.v1.BackupService.Get:output_type -> yandex.cloud.backup.v1.Backup
	22, // 20: yandex.cloud.backup.v1.BackupService.StartRecovery:output_type -> yandex.cloud.operation.Operation
	22, // 21: yandex.cloud.backup.v1.BackupService.StartFilesRecovery:output_type -> yandex.cloud.operation.Operation
	22, // 22: yandex.cloud.backup.v1.BackupService.Delete:output_type -> yandex.cloud.operation.Operation
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_yandex_cloud_backup_v1_backup_service_proto_init() }
func file_yandex_cloud_backup_v1_backup_service_proto_init() {
	if File_yandex_cloud_backup_v1_backup_service_proto != nil {
		return
	}
	file_yandex_cloud_backup_v1_backup_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArchivesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArchivesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBackupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBackupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecoveryMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetPathOriginal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetPathCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesRecoveryOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFilesRecoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFilesRecoveryMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBackupMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBackupsRequest_ArchiveParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBackupsRequest_InstancePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ListArchivesRequest_FolderId)(nil),
		(*ListArchivesRequest_ComputeInstanceId)(nil),
	}
	file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListBackupsRequest_ComputeInstanceId)(nil),
		(*ListBackupsRequest_Archive)(nil),
		(*ListBackupsRequest_FolderId)(nil),
		(*ListBackupsRequest_InstancePolicy_)(nil),
		(*ListBackupsRequest_ResourceId)(nil),
		(*ListBackupsRequest_PolicyId)(nil),
	}
	file_yandex_cloud_backup_v1_backup_service_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*FilesRecoveryOptions_Original)(nil),
		(*FilesRecoveryOptions_Custom)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_backup_v1_backup_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_backup_v1_backup_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_backup_v1_backup_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_backup_v1_backup_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_backup_v1_backup_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_backup_v1_backup_service_proto = out.File
	file_yandex_cloud_backup_v1_backup_service_proto_rawDesc = nil
	file_yandex_cloud_backup_v1_backup_service_proto_goTypes = nil
	file_yandex_cloud_backup_v1_backup_service_proto_depIdxs = nil
}
