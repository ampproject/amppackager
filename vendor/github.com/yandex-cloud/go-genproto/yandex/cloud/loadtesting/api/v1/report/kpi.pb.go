// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/loadtesting/api/v1/report/kpi.proto

package report

import (
	common "github.com/yandex-cloud/go-genproto/yandex/cloud/loadtesting/api/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Aggregation function.
type Aggregation int32

const (
	// Unspecified.
	Aggregation_AGGREGATION_UNSPECIFIED Aggregation = 0
	// Minimum.
	Aggregation_AGGREGATION_MIN Aggregation = 1
	// Maximum.
	Aggregation_AGGREGATION_MAX Aggregation = 2
	// Average.
	Aggregation_AGGREGATION_AVG Aggregation = 4
	// Median.
	Aggregation_AGGREGATION_MEDIAN Aggregation = 5
	// Standard deviation.
	Aggregation_AGGREGATION_STD_DEV Aggregation = 6
)

// Enum value maps for Aggregation.
var (
	Aggregation_name = map[int32]string{
		0: "AGGREGATION_UNSPECIFIED",
		1: "AGGREGATION_MIN",
		2: "AGGREGATION_MAX",
		4: "AGGREGATION_AVG",
		5: "AGGREGATION_MEDIAN",
		6: "AGGREGATION_STD_DEV",
	}
	Aggregation_value = map[string]int32{
		"AGGREGATION_UNSPECIFIED": 0,
		"AGGREGATION_MIN":         1,
		"AGGREGATION_MAX":         2,
		"AGGREGATION_AVG":         4,
		"AGGREGATION_MEDIAN":      5,
		"AGGREGATION_STD_DEV":     6,
	}
)

func (x Aggregation) Enum() *Aggregation {
	p := new(Aggregation)
	*p = x
	return p
}

func (x Aggregation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Aggregation) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_enumTypes[0].Descriptor()
}

func (Aggregation) Type() protoreflect.EnumType {
	return &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_enumTypes[0]
}

func (x Aggregation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Aggregation.Descriptor instead.
func (Aggregation) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{0}
}

// Comparison operator.
type Comparison int32

const (
	// Unspecified.
	Comparison_COMPARISON_UNSPECIFIED Comparison = 0
	// Less than the specified value.
	Comparison_COMPARISON_LT Comparison = 1
	// Less than or equal to the specified value.
	Comparison_COMPARISON_LTE Comparison = 2
	// Greater than the specified value.
	Comparison_COMPARISON_GT Comparison = 3
	// Greater than or equal to the specified value.
	Comparison_COMPARISON_GTE Comparison = 4
)

// Enum value maps for Comparison.
var (
	Comparison_name = map[int32]string{
		0: "COMPARISON_UNSPECIFIED",
		1: "COMPARISON_LT",
		2: "COMPARISON_LTE",
		3: "COMPARISON_GT",
		4: "COMPARISON_GTE",
	}
	Comparison_value = map[string]int32{
		"COMPARISON_UNSPECIFIED": 0,
		"COMPARISON_LT":          1,
		"COMPARISON_LTE":         2,
		"COMPARISON_GT":          3,
		"COMPARISON_GTE":         4,
	}
)

func (x Comparison) Enum() *Comparison {
	p := new(Comparison)
	*p = x
	return p
}

func (x Comparison) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comparison) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_enumTypes[1].Descriptor()
}

func (Comparison) Type() protoreflect.EnumType {
	return &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_enumTypes[1]
}

func (x Comparison) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Comparison.Descriptor instead.
func (Comparison) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{1}
}

// KPI (Key Performance Indicator) represents some integral indicator measured during test.
type Kpi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kind of KPI.
	Selector *KpiSelector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// A condition that should be specified.
	Threshold *KpiThreshold `protobuf:"bytes,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *Kpi) Reset() {
	*x = Kpi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kpi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kpi) ProtoMessage() {}

func (x *Kpi) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kpi.ProtoReflect.Descriptor instead.
func (*Kpi) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{0}
}

func (x *Kpi) GetSelector() *KpiSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *Kpi) GetThreshold() *KpiThreshold {
	if x != nil {
		return x.Threshold
	}
	return nil
}

// KPI threshold represents a condition that an actual value of test's KPI should satisfy.
type KpiThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value for comparison with an actual KPI value.
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// Comparison operator for comparing actual with the threshold value.
	//
	// Rule: actual (</<=/>/>=) reference
	Comparison Comparison `protobuf:"varint,2,opt,name=comparison,proto3,enum=yandex.cloud.loadtesting.api.v1.report.Comparison" json:"comparison,omitempty"`
}

func (x *KpiThreshold) Reset() {
	*x = KpiThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiThreshold) ProtoMessage() {}

func (x *KpiThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiThreshold.ProtoReflect.Descriptor instead.
func (*KpiThreshold) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{1}
}

func (x *KpiThreshold) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *KpiThreshold) GetComparison() Comparison {
	if x != nil {
		return x.Comparison
	}
	return Comparison_COMPARISON_UNSPECIFIED
}

// KPI selector.
type KpiSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*KpiSelector_ResponseTime_
	//	*KpiSelector_Instances_
	//	*KpiSelector_ImbalanceRps_
	//	*KpiSelector_ProtocolCodesAbsolute_
	//	*KpiSelector_ProtocolCodesRelative_
	//	*KpiSelector_NetworkCodesAbsolute_
	//	*KpiSelector_NetworkCodesRelative_
	Kind isKpiSelector_Kind `protobuf_oneof:"kind"`
}

func (x *KpiSelector) Reset() {
	*x = KpiSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector) ProtoMessage() {}

func (x *KpiSelector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector.ProtoReflect.Descriptor instead.
func (*KpiSelector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2}
}

func (m *KpiSelector) GetKind() isKpiSelector_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *KpiSelector) GetResponseTime() *KpiSelector_ResponseTime {
	if x, ok := x.GetKind().(*KpiSelector_ResponseTime_); ok {
		return x.ResponseTime
	}
	return nil
}

func (x *KpiSelector) GetInstances() *KpiSelector_Instances {
	if x, ok := x.GetKind().(*KpiSelector_Instances_); ok {
		return x.Instances
	}
	return nil
}

func (x *KpiSelector) GetImbalanceRps() *KpiSelector_ImbalanceRps {
	if x, ok := x.GetKind().(*KpiSelector_ImbalanceRps_); ok {
		return x.ImbalanceRps
	}
	return nil
}

func (x *KpiSelector) GetProtocolCodesAbsolute() *KpiSelector_ProtocolCodesAbsolute {
	if x, ok := x.GetKind().(*KpiSelector_ProtocolCodesAbsolute_); ok {
		return x.ProtocolCodesAbsolute
	}
	return nil
}

func (x *KpiSelector) GetProtocolCodesRelative() *KpiSelector_ProtocolCodesRelative {
	if x, ok := x.GetKind().(*KpiSelector_ProtocolCodesRelative_); ok {
		return x.ProtocolCodesRelative
	}
	return nil
}

func (x *KpiSelector) GetNetworkCodesAbsolute() *KpiSelector_NetworkCodesAbsolute {
	if x, ok := x.GetKind().(*KpiSelector_NetworkCodesAbsolute_); ok {
		return x.NetworkCodesAbsolute
	}
	return nil
}

func (x *KpiSelector) GetNetworkCodesRelative() *KpiSelector_NetworkCodesRelative {
	if x, ok := x.GetKind().(*KpiSelector_NetworkCodesRelative_); ok {
		return x.NetworkCodesRelative
	}
	return nil
}

type isKpiSelector_Kind interface {
	isKpiSelector_Kind()
}

type KpiSelector_ResponseTime_ struct {
	// Response time cummulative quantile (percentile).
	ResponseTime *KpiSelector_ResponseTime `protobuf:"bytes,1,opt,name=response_time,json=responseTime,proto3,oneof"`
}

type KpiSelector_Instances_ struct {
	// A number of instances throughout the test.
	Instances *KpiSelector_Instances `protobuf:"bytes,2,opt,name=instances,proto3,oneof"`
}

type KpiSelector_ImbalanceRps_ struct {
	// An RPS at the moment the test has been auto-stopped.
	ImbalanceRps *KpiSelector_ImbalanceRps `protobuf:"bytes,3,opt,name=imbalance_rps,json=imbalanceRps,proto3,oneof"`
}

type KpiSelector_ProtocolCodesAbsolute_ struct {
	// A total number of requests completed with certain protocol (HTTP, GRPC, etc.) codes.
	ProtocolCodesAbsolute *KpiSelector_ProtocolCodesAbsolute `protobuf:"bytes,4,opt,name=protocol_codes_absolute,json=protocolCodesAbsolute,proto3,oneof"`
}

type KpiSelector_ProtocolCodesRelative_ struct {
	// A percentage of requests completed with certain protocol (HTTP, GRPC, etc.) codes.
	ProtocolCodesRelative *KpiSelector_ProtocolCodesRelative `protobuf:"bytes,5,opt,name=protocol_codes_relative,json=protocolCodesRelative,proto3,oneof"`
}

type KpiSelector_NetworkCodesAbsolute_ struct {
	// A total number of requests completed with certain network codes.
	NetworkCodesAbsolute *KpiSelector_NetworkCodesAbsolute `protobuf:"bytes,6,opt,name=network_codes_absolute,json=networkCodesAbsolute,proto3,oneof"`
}

type KpiSelector_NetworkCodesRelative_ struct {
	// A percentage of requests completed with certain network codes.
	NetworkCodesRelative *KpiSelector_NetworkCodesRelative `protobuf:"bytes,7,opt,name=network_codes_relative,json=networkCodesRelative,proto3,oneof"`
}

func (*KpiSelector_ResponseTime_) isKpiSelector_Kind() {}

func (*KpiSelector_Instances_) isKpiSelector_Kind() {}

func (*KpiSelector_ImbalanceRps_) isKpiSelector_Kind() {}

func (*KpiSelector_ProtocolCodesAbsolute_) isKpiSelector_Kind() {}

func (*KpiSelector_ProtocolCodesRelative_) isKpiSelector_Kind() {}

func (*KpiSelector_NetworkCodesAbsolute_) isKpiSelector_Kind() {}

func (*KpiSelector_NetworkCodesRelative_) isKpiSelector_Kind() {}

// Response time.
type KpiSelector_ResponseTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cummulative quantile (percentile).
	Quantile common.QuantileType `protobuf:"varint,1,opt,name=quantile,proto3,enum=yandex.cloud.loadtesting.api.v1.common.QuantileType" json:"quantile,omitempty"`
}

func (x *KpiSelector_ResponseTime) Reset() {
	*x = KpiSelector_ResponseTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_ResponseTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_ResponseTime) ProtoMessage() {}

func (x *KpiSelector_ResponseTime) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_ResponseTime.ProtoReflect.Descriptor instead.
func (*KpiSelector_ResponseTime) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 0}
}

func (x *KpiSelector_ResponseTime) GetQuantile() common.QuantileType {
	if x != nil {
		return x.Quantile
	}
	return common.QuantileType(0)
}

// Aggregated number of instances.
type KpiSelector_Instances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Aggregation function.
	Agg Aggregation `protobuf:"varint,1,opt,name=agg,proto3,enum=yandex.cloud.loadtesting.api.v1.report.Aggregation" json:"agg,omitempty"`
}

func (x *KpiSelector_Instances) Reset() {
	*x = KpiSelector_Instances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_Instances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_Instances) ProtoMessage() {}

func (x *KpiSelector_Instances) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_Instances.ProtoReflect.Descriptor instead.
func (*KpiSelector_Instances) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 1}
}

func (x *KpiSelector_Instances) GetAgg() Aggregation {
	if x != nil {
		return x.Agg
	}
	return Aggregation_AGGREGATION_UNSPECIFIED
}

// Imbalance RPS.
type KpiSelector_ImbalanceRps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KpiSelector_ImbalanceRps) Reset() {
	*x = KpiSelector_ImbalanceRps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_ImbalanceRps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_ImbalanceRps) ProtoMessage() {}

func (x *KpiSelector_ImbalanceRps) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_ImbalanceRps.ProtoReflect.Descriptor instead.
func (*KpiSelector_ImbalanceRps) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 2}
}

type KpiSelector_ProtocolCodesAbsolute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Protocol (HTTP, GRPC) code patterns to match.
	//
	// All successful HTTP responses: ['2xx', '3xx'].
	// All failed HTTP responses: ['0', '4xx', '5xx'].
	CodesPatterns []string `protobuf:"bytes,1,rep,name=codes_patterns,json=codesPatterns,proto3" json:"codes_patterns,omitempty"`
}

func (x *KpiSelector_ProtocolCodesAbsolute) Reset() {
	*x = KpiSelector_ProtocolCodesAbsolute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_ProtocolCodesAbsolute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_ProtocolCodesAbsolute) ProtoMessage() {}

func (x *KpiSelector_ProtocolCodesAbsolute) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_ProtocolCodesAbsolute.ProtoReflect.Descriptor instead.
func (*KpiSelector_ProtocolCodesAbsolute) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 3}
}

func (x *KpiSelector_ProtocolCodesAbsolute) GetCodesPatterns() []string {
	if x != nil {
		return x.CodesPatterns
	}
	return nil
}

type KpiSelector_ProtocolCodesRelative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Protocol (HTTP, GRPC) code patterns to match.
	//
	// All successful HTTP responses: ['2xx', '3xx'].
	// All failed HTTP responses: ['0', '4xx', '5xx'].
	CodesPatterns []string `protobuf:"bytes,1,rep,name=codes_patterns,json=codesPatterns,proto3" json:"codes_patterns,omitempty"`
}

func (x *KpiSelector_ProtocolCodesRelative) Reset() {
	*x = KpiSelector_ProtocolCodesRelative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_ProtocolCodesRelative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_ProtocolCodesRelative) ProtoMessage() {}

func (x *KpiSelector_ProtocolCodesRelative) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_ProtocolCodesRelative.ProtoReflect.Descriptor instead.
func (*KpiSelector_ProtocolCodesRelative) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 4}
}

func (x *KpiSelector_ProtocolCodesRelative) GetCodesPatterns() []string {
	if x != nil {
		return x.CodesPatterns
	}
	return nil
}

type KpiSelector_NetworkCodesAbsolute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network code patterns to match.
	//
	// All successful network responses: ['0'].
	// All failed network responses: ['xx', 'xxx'].
	CodesPatterns []string `protobuf:"bytes,1,rep,name=codes_patterns,json=codesPatterns,proto3" json:"codes_patterns,omitempty"`
}

func (x *KpiSelector_NetworkCodesAbsolute) Reset() {
	*x = KpiSelector_NetworkCodesAbsolute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_NetworkCodesAbsolute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_NetworkCodesAbsolute) ProtoMessage() {}

func (x *KpiSelector_NetworkCodesAbsolute) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_NetworkCodesAbsolute.ProtoReflect.Descriptor instead.
func (*KpiSelector_NetworkCodesAbsolute) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 5}
}

func (x *KpiSelector_NetworkCodesAbsolute) GetCodesPatterns() []string {
	if x != nil {
		return x.CodesPatterns
	}
	return nil
}

type KpiSelector_NetworkCodesRelative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network code patterns to match.
	//
	// All successful network responses: ['0'].
	// All failed network responses: ['xx', 'xxx'].
	CodesPatterns []string `protobuf:"bytes,1,rep,name=codes_patterns,json=codesPatterns,proto3" json:"codes_patterns,omitempty"`
}

func (x *KpiSelector_NetworkCodesRelative) Reset() {
	*x = KpiSelector_NetworkCodesRelative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KpiSelector_NetworkCodesRelative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KpiSelector_NetworkCodesRelative) ProtoMessage() {}

func (x *KpiSelector_NetworkCodesRelative) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KpiSelector_NetworkCodesRelative.ProtoReflect.Descriptor instead.
func (*KpiSelector_NetworkCodesRelative) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP(), []int{2, 6}
}

func (x *KpiSelector_NetworkCodesRelative) GetCodesPatterns() []string {
	if x != nil {
		return x.CodesPatterns
	}
	return nil
}

var File_yandex_cloud_loadtesting_api_v1_report_kpi_proto protoreflect.FileDescriptor

var file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDesc = []byte{
	0x0a, 0x30, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6c,
	0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6b, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x26, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x36, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x03, 0x4b, 0x70, 0x69, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64,
	0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f,
	0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x70, 0x69, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22,
	0x78, 0x0a, 0x0c, 0x4b, 0x70, 0x69, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x52, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x22, 0x9c, 0x0a, 0x0a, 0x0b, 0x4b, 0x70,
	0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x67, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x70, 0x69, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b,
	0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x67, 0x0a, 0x0d, 0x69, 0x6d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x4b, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6d,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x70, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x17, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x61, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64,
	0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x41,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x12, 0x83, 0x01, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x70, 0x69, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x4b, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x16, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x70, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x60, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f,
	0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x1a, 0x52,
	0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x03, 0x61,
	0x67, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x61,
	0x67, 0x67, 0x1a, 0x0e, 0x0a, 0x0c, 0x49, 0x6d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x70, 0x73, 0x1a, 0x3e, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x73, 0x1a, 0x3d, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x2a, 0x9a, 0x01, 0x0a, 0x0b, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x47, 0x47, 0x52,
	0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x47,
	0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x56, 0x47, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x4e, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13,
	0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x44, 0x5f,
	0x44, 0x45, 0x56, 0x10, 0x06, 0x2a, 0x76, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53, 0x4f,
	0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x54,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52, 0x49, 0x53, 0x4f, 0x4e,
	0x5f, 0x4c, 0x54, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52,
	0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x47, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d,
	0x50, 0x41, 0x52, 0x49, 0x53, 0x4f, 0x4e, 0x5f, 0x47, 0x54, 0x45, 0x10, 0x04, 0x42, 0x7f, 0x0a,
	0x2a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5a, 0x51, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6c, 0x6f,
	0x61, 0x64, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x3b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescOnce sync.Once
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescData = file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDesc
)

func file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescGZIP() []byte {
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescData)
	})
	return file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDescData
}

var file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_goTypes = []interface{}{
	(Aggregation)(0),                          // 0: yandex.cloud.loadtesting.api.v1.report.Aggregation
	(Comparison)(0),                           // 1: yandex.cloud.loadtesting.api.v1.report.Comparison
	(*Kpi)(nil),                               // 2: yandex.cloud.loadtesting.api.v1.report.Kpi
	(*KpiThreshold)(nil),                      // 3: yandex.cloud.loadtesting.api.v1.report.KpiThreshold
	(*KpiSelector)(nil),                       // 4: yandex.cloud.loadtesting.api.v1.report.KpiSelector
	(*KpiSelector_ResponseTime)(nil),          // 5: yandex.cloud.loadtesting.api.v1.report.KpiSelector.ResponseTime
	(*KpiSelector_Instances)(nil),             // 6: yandex.cloud.loadtesting.api.v1.report.KpiSelector.Instances
	(*KpiSelector_ImbalanceRps)(nil),          // 7: yandex.cloud.loadtesting.api.v1.report.KpiSelector.ImbalanceRps
	(*KpiSelector_ProtocolCodesAbsolute)(nil), // 8: yandex.cloud.loadtesting.api.v1.report.KpiSelector.ProtocolCodesAbsolute
	(*KpiSelector_ProtocolCodesRelative)(nil), // 9: yandex.cloud.loadtesting.api.v1.report.KpiSelector.ProtocolCodesRelative
	(*KpiSelector_NetworkCodesAbsolute)(nil),  // 10: yandex.cloud.loadtesting.api.v1.report.KpiSelector.NetworkCodesAbsolute
	(*KpiSelector_NetworkCodesRelative)(nil),  // 11: yandex.cloud.loadtesting.api.v1.report.KpiSelector.NetworkCodesRelative
	(common.QuantileType)(0),                  // 12: yandex.cloud.loadtesting.api.v1.common.QuantileType
}
var file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_depIdxs = []int32{
	4,  // 0: yandex.cloud.loadtesting.api.v1.report.Kpi.selector:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector
	3,  // 1: yandex.cloud.loadtesting.api.v1.report.Kpi.threshold:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiThreshold
	1,  // 2: yandex.cloud.loadtesting.api.v1.report.KpiThreshold.comparison:type_name -> yandex.cloud.loadtesting.api.v1.report.Comparison
	5,  // 3: yandex.cloud.loadtesting.api.v1.report.KpiSelector.response_time:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.ResponseTime
	6,  // 4: yandex.cloud.loadtesting.api.v1.report.KpiSelector.instances:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.Instances
	7,  // 5: yandex.cloud.loadtesting.api.v1.report.KpiSelector.imbalance_rps:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.ImbalanceRps
	8,  // 6: yandex.cloud.loadtesting.api.v1.report.KpiSelector.protocol_codes_absolute:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.ProtocolCodesAbsolute
	9,  // 7: yandex.cloud.loadtesting.api.v1.report.KpiSelector.protocol_codes_relative:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.ProtocolCodesRelative
	10, // 8: yandex.cloud.loadtesting.api.v1.report.KpiSelector.network_codes_absolute:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.NetworkCodesAbsolute
	11, // 9: yandex.cloud.loadtesting.api.v1.report.KpiSelector.network_codes_relative:type_name -> yandex.cloud.loadtesting.api.v1.report.KpiSelector.NetworkCodesRelative
	12, // 10: yandex.cloud.loadtesting.api.v1.report.KpiSelector.ResponseTime.quantile:type_name -> yandex.cloud.loadtesting.api.v1.common.QuantileType
	0,  // 11: yandex.cloud.loadtesting.api.v1.report.KpiSelector.Instances.agg:type_name -> yandex.cloud.loadtesting.api.v1.report.Aggregation
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_init() }
func file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_init() {
	if File_yandex_cloud_loadtesting_api_v1_report_kpi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kpi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_ResponseTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_Instances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_ImbalanceRps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_ProtocolCodesAbsolute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_ProtocolCodesRelative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_NetworkCodesAbsolute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KpiSelector_NetworkCodesRelative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*KpiSelector_ResponseTime_)(nil),
		(*KpiSelector_Instances_)(nil),
		(*KpiSelector_ImbalanceRps_)(nil),
		(*KpiSelector_ProtocolCodesAbsolute_)(nil),
		(*KpiSelector_ProtocolCodesRelative_)(nil),
		(*KpiSelector_NetworkCodesAbsolute_)(nil),
		(*KpiSelector_NetworkCodesRelative_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_msgTypes,
	}.Build()
	File_yandex_cloud_loadtesting_api_v1_report_kpi_proto = out.File
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_rawDesc = nil
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_goTypes = nil
	file_yandex_cloud_loadtesting_api_v1_report_kpi_proto_depIdxs = nil
}
