// Code generated by protoc-gen-goext. DO NOT EDIT.

package greenplum

import (
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

func (m *PXFConfig) SetConnectionTimeout(v *wrapperspb.Int64Value) {
	m.ConnectionTimeout = v
}

func (m *PXFConfig) SetUploadTimeout(v *wrapperspb.Int64Value) {
	m.UploadTimeout = v
}

func (m *PXFConfig) SetMaxThreads(v *wrapperspb.Int64Value) {
	m.MaxThreads = v
}

func (m *PXFConfig) SetPoolAllowCoreThreadTimeout(v *wrapperspb.BoolValue) {
	m.PoolAllowCoreThreadTimeout = v
}

func (m *PXFConfig) SetPoolCoreSize(v *wrapperspb.Int64Value) {
	m.PoolCoreSize = v
}

func (m *PXFConfig) SetPoolQueueCapacity(v *wrapperspb.Int64Value) {
	m.PoolQueueCapacity = v
}

func (m *PXFConfig) SetPoolMaxSize(v *wrapperspb.Int64Value) {
	m.PoolMaxSize = v
}

func (m *PXFConfig) SetXmx(v *wrapperspb.Int64Value) {
	m.Xmx = v
}

func (m *PXFConfig) SetXms(v *wrapperspb.Int64Value) {
	m.Xms = v
}

func (m *PXFConfigSet) SetEffectiveConfig(v *PXFConfig) {
	m.EffectiveConfig = v
}

func (m *PXFConfigSet) SetUserConfig(v *PXFConfig) {
	m.UserConfig = v
}

func (m *PXFConfigSet) SetDefaultConfig(v *PXFConfig) {
	m.DefaultConfig = v
}

func (m *PXFDatasourceS3) SetAccessKey(v string) {
	m.AccessKey = v
}

func (m *PXFDatasourceS3) SetSecretKey(v string) {
	m.SecretKey = v
}

func (m *PXFDatasourceS3) SetFastUpload(v *wrapperspb.BoolValue) {
	m.FastUpload = v
}

func (m *PXFDatasourceS3) SetEndpoint(v string) {
	m.Endpoint = v
}

func (m *PXFDatasourceJDBC) SetDriver(v string) {
	m.Driver = v
}

func (m *PXFDatasourceJDBC) SetUrl(v string) {
	m.Url = v
}

func (m *PXFDatasourceJDBC) SetUser(v string) {
	m.User = v
}

func (m *PXFDatasourceJDBC) SetPassword(v string) {
	m.Password = v
}

func (m *PXFDatasourceJDBC) SetStatementBatchSize(v *wrapperspb.Int64Value) {
	m.StatementBatchSize = v
}

func (m *PXFDatasourceJDBC) SetStatementFetchSize(v *wrapperspb.Int64Value) {
	m.StatementFetchSize = v
}

func (m *PXFDatasourceJDBC) SetStatementQueryTimeout(v *wrapperspb.Int64Value) {
	m.StatementQueryTimeout = v
}

func (m *PXFDatasourceJDBC) SetPoolEnabled(v *wrapperspb.BoolValue) {
	m.PoolEnabled = v
}

func (m *PXFDatasourceJDBC) SetPoolMaximumSize(v *wrapperspb.Int64Value) {
	m.PoolMaximumSize = v
}

func (m *PXFDatasourceJDBC) SetPoolConnectionTimeout(v *wrapperspb.Int64Value) {
	m.PoolConnectionTimeout = v
}

func (m *PXFDatasourceJDBC) SetPoolIdleTimeout(v *wrapperspb.Int64Value) {
	m.PoolIdleTimeout = v
}

func (m *PXFDatasourceJDBC) SetPoolMinimumIdle(v *wrapperspb.Int64Value) {
	m.PoolMinimumIdle = v
}

func (m *PXFDatasourceCore) SetDefaultFs(v string) {
	m.DefaultFs = v
}

func (m *PXFDatasourceCore) SetSecurityAuthToLocal(v string) {
	m.SecurityAuthToLocal = v
}

func (m *PXFDatasourceKerberos) SetEnable(v *wrapperspb.BoolValue) {
	m.Enable = v
}

func (m *PXFDatasourceKerberos) SetPrimary(v string) {
	m.Primary = v
}

func (m *PXFDatasourceKerberos) SetRealm(v string) {
	m.Realm = v
}

func (m *PXFDatasourceKerberos) SetKdcServers(v []string) {
	m.KdcServers = v
}

func (m *PXFDatasourceKerberos) SetAdminServer(v string) {
	m.AdminServer = v
}

func (m *PXFDatasourceKerberos) SetDefaultDomain(v string) {
	m.DefaultDomain = v
}

func (m *PXFDatasourceKerberos) SetKeytabBase64(v string) {
	m.KeytabBase64 = v
}

func (m *PXFDatasourceHDFSDfsNamenode) SetRpcAddress(v string) {
	m.RpcAddress = v
}

func (m *PXFDatasourceHDFSDfsNamenode) SetServiceRpcAddress(v string) {
	m.ServiceRpcAddress = v
}

func (m *PXFDatasourceHDFSDfsNamenode) SetHttpAddress(v string) {
	m.HttpAddress = v
}

func (m *PXFDatasourceHDFSDfsNamenode) SetHttpsAddress(v string) {
	m.HttpsAddress = v
}

func (m *PXFDatasourceHDFSDfs) SetHaAutomaticFailoverEnabled(v *wrapperspb.BoolValue) {
	m.HaAutomaticFailoverEnabled = v
}

func (m *PXFDatasourceHDFSDfs) SetBlockAccessTokenEnabled(v *wrapperspb.BoolValue) {
	m.BlockAccessTokenEnabled = v
}

func (m *PXFDatasourceHDFSDfs) SetUseDatanodeHostname(v *wrapperspb.BoolValue) {
	m.UseDatanodeHostname = v
}

func (m *PXFDatasourceHDFSDfs) SetNamenodes(v map[string]*PXFDatasourceHDFSDfsNamenode) {
	m.Namenodes = v
}

func (m *PXFDatasourceHDFSDfs) SetNameservices(v string) {
	m.Nameservices = v
}

func (m *PXFDatasourceHDFSYarnHaRm) SetResourcemanagerAddress(v string) {
	m.ResourcemanagerAddress = v
}

func (m *PXFDatasourceHDFSYarnHaRm) SetResourcemanagerSchedulerAddress(v string) {
	m.ResourcemanagerSchedulerAddress = v
}

func (m *PXFDatasourceHDFSYarnHaRm) SetResourcemanagerResourceTrackerAddress(v string) {
	m.ResourcemanagerResourceTrackerAddress = v
}

func (m *PXFDatasourceHDFSYarnHaRm) SetResourcemanagerAdminAddress(v string) {
	m.ResourcemanagerAdminAddress = v
}

func (m *PXFDatasourceHDFSYarnHaRm) SetResourcemanagerWebappAddress(v string) {
	m.ResourcemanagerWebappAddress = v
}

func (m *PXFDatasourceHDFSYarnHaRm) SetResourcemanagerWebappHttpsAddress(v string) {
	m.ResourcemanagerWebappHttpsAddress = v
}

func (m *PXFDatasourceHDFSYarn) SetResourcemanagerHaEnabled(v *wrapperspb.BoolValue) {
	m.ResourcemanagerHaEnabled = v
}

func (m *PXFDatasourceHDFSYarn) SetResourcemanagerHaAutoFailoverEnabled(v *wrapperspb.BoolValue) {
	m.ResourcemanagerHaAutoFailoverEnabled = v
}

func (m *PXFDatasourceHDFSYarn) SetResourcemanagerHaAutoFailoverEmbedded(v *wrapperspb.BoolValue) {
	m.ResourcemanagerHaAutoFailoverEmbedded = v
}

func (m *PXFDatasourceHDFSYarn) SetResourcemanagerClusterId(v string) {
	m.ResourcemanagerClusterId = v
}

func (m *PXFDatasourceHDFSYarn) SetHaRm(v map[string]*PXFDatasourceHDFSYarnHaRm) {
	m.HaRm = v
}

func (m *PXFDatasourceHDFS) SetCore(v *PXFDatasourceCore) {
	m.Core = v
}

func (m *PXFDatasourceHDFS) SetKerberos(v *PXFDatasourceKerberos) {
	m.Kerberos = v
}

func (m *PXFDatasourceHDFS) SetUserImpersonation(v *wrapperspb.BoolValue) {
	m.UserImpersonation = v
}

func (m *PXFDatasourceHDFS) SetUsername(v string) {
	m.Username = v
}

func (m *PXFDatasourceHDFS) SetSaslConnectionRetries(v *wrapperspb.Int64Value) {
	m.SaslConnectionRetries = v
}

func (m *PXFDatasourceHDFS) SetZkHosts(v []string) {
	m.ZkHosts = v
}

func (m *PXFDatasourceHDFS) SetDfs(v *PXFDatasourceHDFSDfs) {
	m.Dfs = v
}

func (m *PXFDatasourceHDFS) SetYarn(v *PXFDatasourceHDFSYarn) {
	m.Yarn = v
}

func (m *PXFDatasourceHive) SetCore(v *PXFDatasourceCore) {
	m.Core = v
}

func (m *PXFDatasourceHive) SetKerberos(v *PXFDatasourceKerberos) {
	m.Kerberos = v
}

func (m *PXFDatasourceHive) SetUserImpersonation(v *wrapperspb.BoolValue) {
	m.UserImpersonation = v
}

func (m *PXFDatasourceHive) SetUsername(v string) {
	m.Username = v
}

func (m *PXFDatasourceHive) SetSaslConnectionRetries(v *wrapperspb.Int64Value) {
	m.SaslConnectionRetries = v
}

func (m *PXFDatasourceHive) SetZkHosts(v []string) {
	m.ZkHosts = v
}

func (m *PXFDatasourceHive) SetPpd(v *wrapperspb.BoolValue) {
	m.Ppd = v
}

func (m *PXFDatasourceHive) SetMetastoreUris(v []string) {
	m.MetastoreUris = v
}

func (m *PXFDatasourceHive) SetMetastoreKerberosPrincipal(v string) {
	m.MetastoreKerberosPrincipal = v
}

func (m *PXFDatasourceHive) SetAuthKerberosPrincipal(v string) {
	m.AuthKerberosPrincipal = v
}

type PXFDatasource_Settings = isPXFDatasource_Settings

func (m *PXFDatasource) SetSettings(v PXFDatasource_Settings) {
	m.Settings = v
}

func (m *PXFDatasource) SetName(v string) {
	m.Name = v
}

func (m *PXFDatasource) SetS3(v *PXFDatasourceS3) {
	m.Settings = &PXFDatasource_S3{
		S3: v,
	}
}

func (m *PXFDatasource) SetJdbc(v *PXFDatasourceJDBC) {
	m.Settings = &PXFDatasource_Jdbc{
		Jdbc: v,
	}
}

func (m *PXFDatasource) SetHdfs(v *PXFDatasourceHDFS) {
	m.Settings = &PXFDatasource_Hdfs{
		Hdfs: v,
	}
}

func (m *PXFDatasource) SetHive(v *PXFDatasourceHive) {
	m.Settings = &PXFDatasource_Hive{
		Hive: v,
	}
}
