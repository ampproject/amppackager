// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.17.3
// source: yandex/cloud/monitoring/v3/unit_format.proto

package monitoring

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnitFormat int32

const (
	UnitFormat_UNIT_FORMAT_UNSPECIFIED UnitFormat = 0
	// None (show tick values as-is).
	UnitFormat_UNIT_NONE UnitFormat = 1
	// Count.
	UnitFormat_UNIT_COUNT UnitFormat = 2
	// Percent (0-100).
	UnitFormat_UNIT_PERCENT UnitFormat = 3
	// Percent (0-1).
	UnitFormat_UNIT_PERCENT_UNIT UnitFormat = 4
	// Nanoseconds (ns).
	UnitFormat_UNIT_NANOSECONDS UnitFormat = 5
	// Microseconds (µs).
	UnitFormat_UNIT_MICROSECONDS UnitFormat = 6
	// Milliseconds (ms).
	UnitFormat_UNIT_MILLISECONDS UnitFormat = 7
	// Seconds (s).
	UnitFormat_UNIT_SECONDS UnitFormat = 8
	// Minutes (m).
	UnitFormat_UNIT_MINUTES UnitFormat = 9
	// Hours (h).
	UnitFormat_UNIT_HOURS UnitFormat = 10
	// Days (d).
	UnitFormat_UNIT_DAYS UnitFormat = 11
	// Bits (SI).
	UnitFormat_UNIT_BITS_SI UnitFormat = 12
	// Bytes (SI).
	UnitFormat_UNIT_BYTES_SI UnitFormat = 13
	// Kilobytes (KB).
	UnitFormat_UNIT_KILOBYTES UnitFormat = 14
	// Megabytes (MB).
	UnitFormat_UNIT_MEGABYTES UnitFormat = 15
	// Gigabytes (GB).
	UnitFormat_UNIT_GIGABYTES UnitFormat = 16
	// Terabytes (TB)
	UnitFormat_UNIT_TERABYTES UnitFormat = 17
	// Petabytes (PB).
	UnitFormat_UNIT_PETABYTES UnitFormat = 18
	// Exabytes (EB).
	UnitFormat_UNIT_EXABYTES UnitFormat = 19
	// Bits (IEC).
	UnitFormat_UNIT_BITS_IEC UnitFormat = 20
	// Bytes (IEC).
	UnitFormat_UNIT_BYTES_IEC UnitFormat = 21
	// Kibibytes (KiB).
	UnitFormat_UNIT_KIBIBYTES UnitFormat = 22
	// Mebibytes (MiB).
	UnitFormat_UNIT_MEBIBYTES UnitFormat = 23
	// Gigibytes (GiB).
	UnitFormat_UNIT_GIBIBYTES UnitFormat = 24
	// Tebibytes (TiB).
	UnitFormat_UNIT_TEBIBYTES UnitFormat = 25
	// Pebibytes (PiB).
	UnitFormat_UNIT_PEBIBYTES UnitFormat = 26
	// Exbibytes (EiB).
	UnitFormat_UNIT_EXBIBYTES UnitFormat = 27
	// Requests per second (reqps).
	UnitFormat_UNIT_REQUESTS_PER_SECOND UnitFormat = 28
	// Operations per second (ops).
	UnitFormat_UNIT_OPERATIONS_PER_SECOND UnitFormat = 29
	// Writes per second (wps).
	UnitFormat_UNIT_WRITES_PER_SECOND UnitFormat = 30
	// Reads per second (rps).
	UnitFormat_UNIT_READS_PER_SECOND UnitFormat = 31
	// Packets per second (pps).
	UnitFormat_UNIT_PACKETS_PER_SECOND UnitFormat = 32
	// IO operations per second (iops).
	UnitFormat_UNIT_IO_OPERATIONS_PER_SECOND UnitFormat = 33
	// Counts per second (counts/sec).
	UnitFormat_UNIT_COUNTS_PER_SECOND UnitFormat = 34
	// Bits (SI) per second (bits/sec).
	UnitFormat_UNIT_BITS_SI_PER_SECOND UnitFormat = 35
	// Bytes (SI) per second (bytes/sec).
	UnitFormat_UNIT_BYTES_SI_PER_SECOND UnitFormat = 36
	// Kilobits per second (KBits/sec).
	UnitFormat_UNIT_KILOBITS_PER_SECOND UnitFormat = 37
	// Kilobytes per second (KB/sec).
	UnitFormat_UNIT_KILOBYTES_PER_SECOND UnitFormat = 38
	// Megabits per second (MBits/sec).
	UnitFormat_UNIT_MEGABITS_PER_SECOND UnitFormat = 39
	// Megabytes per second (MB/sec).
	UnitFormat_UNIT_MEGABYTES_PER_SECOND UnitFormat = 40
	// Gigabits per second (GBits/sec).
	UnitFormat_UNIT_GIGABITS_PER_SECOND UnitFormat = 41
	// Gigabytes per second (GB/sec).
	UnitFormat_UNIT_GIGABYTES_PER_SECOND UnitFormat = 42
	// Terabits per second (TBits/sec).
	UnitFormat_UNIT_TERABITS_PER_SECOND UnitFormat = 43
	// Terabytes per second (TB/sec).
	UnitFormat_UNIT_TERABYTES_PER_SECOND UnitFormat = 44
	// Petabits per second (Pbits/sec).
	UnitFormat_UNIT_PETABITS_PER_SECOND UnitFormat = 45
	// Petabytes per second (PB/sec).
	UnitFormat_UNIT_PETABYTES_PER_SECOND UnitFormat = 46
	// Bits (IEC) per second (bits/sec).
	UnitFormat_UNIT_BITS_IEC_PER_SECOND UnitFormat = 47
	// Bytes (IEC) per second (bytes/sec).
	UnitFormat_UNIT_BYTES_IEC_PER_SECOND UnitFormat = 48
	// Kibibits per second (KiBits/sec).
	UnitFormat_UNIT_KIBIBITS_PER_SECOND UnitFormat = 49
	// Kibibytes per second (KiB/sec).
	UnitFormat_UNIT_KIBIBYTES_PER_SECOND UnitFormat = 50
	// Mebibits per second (MiBits/sec).
	UnitFormat_UNIT_MEBIBITS_PER_SECOND UnitFormat = 51
	// Mebibytes per second (MiB/sec).
	UnitFormat_UNIT_MEBIBYTES_PER_SECOND UnitFormat = 52
	// Gibibits per second (GiBits/sec).
	UnitFormat_UNIT_GIBIBITS_PER_SECOND UnitFormat = 53
	// Gibibytes per second (GiB/sec).
	UnitFormat_UNIT_GIBIBYTES_PER_SECOND UnitFormat = 54
	// Tebibits per second (TiBits/sec).
	UnitFormat_UNIT_TEBIBITS_PER_SECOND UnitFormat = 55
	// Tebibytes per second (TiB/sec).
	UnitFormat_UNIT_TEBIBYTES_PER_SECOND UnitFormat = 56
	// Pebibits per second (PiBits/sec).
	UnitFormat_UNIT_PEBIBITS_PER_SECOND UnitFormat = 57
	// Pebibytes per second (PiB/sec).
	UnitFormat_UNIT_PEBIBYTES_PER_SECOND UnitFormat = 58
	// Datetime (UTC).
	UnitFormat_UNIT_DATETIME_UTC UnitFormat = 59
	// Datetime (local).
	UnitFormat_UNIT_DATETIME_LOCAL UnitFormat = 60
	// Hertz (Hz).
	UnitFormat_UNIT_HERTZ UnitFormat = 61
	// Kilohertz (KHz).
	UnitFormat_UNIT_KILOHERTZ UnitFormat = 62
	// Megahertz (MHz).
	UnitFormat_UNIT_MEGAHERTZ UnitFormat = 63
	// Gigahertz (GHz).
	UnitFormat_UNIT_GIGAHERTZ UnitFormat = 64
	// Dollar.
	UnitFormat_UNIT_DOLLAR UnitFormat = 65
	// Euro.
	UnitFormat_UNIT_EURO UnitFormat = 66
	// Rouble.
	UnitFormat_UNIT_ROUBLE UnitFormat = 67
	// Celsius (°C).
	UnitFormat_UNIT_CELSIUS UnitFormat = 68
	// Fahrenheit (°F).
	UnitFormat_UNIT_FAHRENHEIT UnitFormat = 69
	// Kelvin (K).
	UnitFormat_UNIT_KELVIN UnitFormat = 70
	// Flop per second (FLOP/sec).
	UnitFormat_UNIT_FLOP_PER_SECOND UnitFormat = 71
	// Kiloflop per second (KFLOP/sec).
	UnitFormat_UNIT_KILOFLOP_PER_SECOND UnitFormat = 72
	// Megaflop per second (MFLOP/sec).
	UnitFormat_UNIT_MEGAFLOP_PER_SECOND UnitFormat = 73
	// Gigaflop per second (GFLOP/sec).
	UnitFormat_UNIT_GIGAFLOP_PER_SECOND UnitFormat = 74
	// Petaflop per second (PFLOP/sec).
	UnitFormat_UNIT_PETAFLOP_PER_SECOND UnitFormat = 75
	// Exaflop per second (EFLOP/sec).
	UnitFormat_UNIT_EXAFLOP_PER_SECOND UnitFormat = 76
	// Meters per second (m/sec).
	UnitFormat_UNIT_METERS_PER_SECOND UnitFormat = 77
	// Kilometers per hour (km/h).
	UnitFormat_UNIT_KILOMETERS_PER_HOUR UnitFormat = 78
	// Miles per hour (mi/h).
	UnitFormat_UNIT_MILES_PER_HOUR UnitFormat = 79
	// Millimeter.
	UnitFormat_UNIT_MILLIMETER UnitFormat = 80
	// Centimeter.
	UnitFormat_UNIT_CENTIMETER UnitFormat = 81
	// Meter.
	UnitFormat_UNIT_METER UnitFormat = 82
	// Kilometer.
	UnitFormat_UNIT_KILOMETER UnitFormat = 83
	// Mile.
	UnitFormat_UNIT_MILE UnitFormat = 84
	// Parts per million (ppm).
	UnitFormat_UNIT_PPM UnitFormat = 85
	// Events per second
	UnitFormat_UNIT_EVENTS_PER_SECOND UnitFormat = 86
	// Packets
	UnitFormat_UNIT_PACKETS UnitFormat = 87
	// dBm (dbm)
	UnitFormat_UNIT_DBM UnitFormat = 88
	// Virtual CPU cores based on CPU time (vcpu)
	UnitFormat_UNIT_VIRTUAL_CPU UnitFormat = 89
	// Messages per second (mps)
	UnitFormat_UNIT_MESSAGES_PER_SECOND UnitFormat = 90
)

// Enum value maps for UnitFormat.
var (
	UnitFormat_name = map[int32]string{
		0:  "UNIT_FORMAT_UNSPECIFIED",
		1:  "UNIT_NONE",
		2:  "UNIT_COUNT",
		3:  "UNIT_PERCENT",
		4:  "UNIT_PERCENT_UNIT",
		5:  "UNIT_NANOSECONDS",
		6:  "UNIT_MICROSECONDS",
		7:  "UNIT_MILLISECONDS",
		8:  "UNIT_SECONDS",
		9:  "UNIT_MINUTES",
		10: "UNIT_HOURS",
		11: "UNIT_DAYS",
		12: "UNIT_BITS_SI",
		13: "UNIT_BYTES_SI",
		14: "UNIT_KILOBYTES",
		15: "UNIT_MEGABYTES",
		16: "UNIT_GIGABYTES",
		17: "UNIT_TERABYTES",
		18: "UNIT_PETABYTES",
		19: "UNIT_EXABYTES",
		20: "UNIT_BITS_IEC",
		21: "UNIT_BYTES_IEC",
		22: "UNIT_KIBIBYTES",
		23: "UNIT_MEBIBYTES",
		24: "UNIT_GIBIBYTES",
		25: "UNIT_TEBIBYTES",
		26: "UNIT_PEBIBYTES",
		27: "UNIT_EXBIBYTES",
		28: "UNIT_REQUESTS_PER_SECOND",
		29: "UNIT_OPERATIONS_PER_SECOND",
		30: "UNIT_WRITES_PER_SECOND",
		31: "UNIT_READS_PER_SECOND",
		32: "UNIT_PACKETS_PER_SECOND",
		33: "UNIT_IO_OPERATIONS_PER_SECOND",
		34: "UNIT_COUNTS_PER_SECOND",
		35: "UNIT_BITS_SI_PER_SECOND",
		36: "UNIT_BYTES_SI_PER_SECOND",
		37: "UNIT_KILOBITS_PER_SECOND",
		38: "UNIT_KILOBYTES_PER_SECOND",
		39: "UNIT_MEGABITS_PER_SECOND",
		40: "UNIT_MEGABYTES_PER_SECOND",
		41: "UNIT_GIGABITS_PER_SECOND",
		42: "UNIT_GIGABYTES_PER_SECOND",
		43: "UNIT_TERABITS_PER_SECOND",
		44: "UNIT_TERABYTES_PER_SECOND",
		45: "UNIT_PETABITS_PER_SECOND",
		46: "UNIT_PETABYTES_PER_SECOND",
		47: "UNIT_BITS_IEC_PER_SECOND",
		48: "UNIT_BYTES_IEC_PER_SECOND",
		49: "UNIT_KIBIBITS_PER_SECOND",
		50: "UNIT_KIBIBYTES_PER_SECOND",
		51: "UNIT_MEBIBITS_PER_SECOND",
		52: "UNIT_MEBIBYTES_PER_SECOND",
		53: "UNIT_GIBIBITS_PER_SECOND",
		54: "UNIT_GIBIBYTES_PER_SECOND",
		55: "UNIT_TEBIBITS_PER_SECOND",
		56: "UNIT_TEBIBYTES_PER_SECOND",
		57: "UNIT_PEBIBITS_PER_SECOND",
		58: "UNIT_PEBIBYTES_PER_SECOND",
		59: "UNIT_DATETIME_UTC",
		60: "UNIT_DATETIME_LOCAL",
		61: "UNIT_HERTZ",
		62: "UNIT_KILOHERTZ",
		63: "UNIT_MEGAHERTZ",
		64: "UNIT_GIGAHERTZ",
		65: "UNIT_DOLLAR",
		66: "UNIT_EURO",
		67: "UNIT_ROUBLE",
		68: "UNIT_CELSIUS",
		69: "UNIT_FAHRENHEIT",
		70: "UNIT_KELVIN",
		71: "UNIT_FLOP_PER_SECOND",
		72: "UNIT_KILOFLOP_PER_SECOND",
		73: "UNIT_MEGAFLOP_PER_SECOND",
		74: "UNIT_GIGAFLOP_PER_SECOND",
		75: "UNIT_PETAFLOP_PER_SECOND",
		76: "UNIT_EXAFLOP_PER_SECOND",
		77: "UNIT_METERS_PER_SECOND",
		78: "UNIT_KILOMETERS_PER_HOUR",
		79: "UNIT_MILES_PER_HOUR",
		80: "UNIT_MILLIMETER",
		81: "UNIT_CENTIMETER",
		82: "UNIT_METER",
		83: "UNIT_KILOMETER",
		84: "UNIT_MILE",
		85: "UNIT_PPM",
		86: "UNIT_EVENTS_PER_SECOND",
		87: "UNIT_PACKETS",
		88: "UNIT_DBM",
		89: "UNIT_VIRTUAL_CPU",
		90: "UNIT_MESSAGES_PER_SECOND",
	}
	UnitFormat_value = map[string]int32{
		"UNIT_FORMAT_UNSPECIFIED":       0,
		"UNIT_NONE":                     1,
		"UNIT_COUNT":                    2,
		"UNIT_PERCENT":                  3,
		"UNIT_PERCENT_UNIT":             4,
		"UNIT_NANOSECONDS":              5,
		"UNIT_MICROSECONDS":             6,
		"UNIT_MILLISECONDS":             7,
		"UNIT_SECONDS":                  8,
		"UNIT_MINUTES":                  9,
		"UNIT_HOURS":                    10,
		"UNIT_DAYS":                     11,
		"UNIT_BITS_SI":                  12,
		"UNIT_BYTES_SI":                 13,
		"UNIT_KILOBYTES":                14,
		"UNIT_MEGABYTES":                15,
		"UNIT_GIGABYTES":                16,
		"UNIT_TERABYTES":                17,
		"UNIT_PETABYTES":                18,
		"UNIT_EXABYTES":                 19,
		"UNIT_BITS_IEC":                 20,
		"UNIT_BYTES_IEC":                21,
		"UNIT_KIBIBYTES":                22,
		"UNIT_MEBIBYTES":                23,
		"UNIT_GIBIBYTES":                24,
		"UNIT_TEBIBYTES":                25,
		"UNIT_PEBIBYTES":                26,
		"UNIT_EXBIBYTES":                27,
		"UNIT_REQUESTS_PER_SECOND":      28,
		"UNIT_OPERATIONS_PER_SECOND":    29,
		"UNIT_WRITES_PER_SECOND":        30,
		"UNIT_READS_PER_SECOND":         31,
		"UNIT_PACKETS_PER_SECOND":       32,
		"UNIT_IO_OPERATIONS_PER_SECOND": 33,
		"UNIT_COUNTS_PER_SECOND":        34,
		"UNIT_BITS_SI_PER_SECOND":       35,
		"UNIT_BYTES_SI_PER_SECOND":      36,
		"UNIT_KILOBITS_PER_SECOND":      37,
		"UNIT_KILOBYTES_PER_SECOND":     38,
		"UNIT_MEGABITS_PER_SECOND":      39,
		"UNIT_MEGABYTES_PER_SECOND":     40,
		"UNIT_GIGABITS_PER_SECOND":      41,
		"UNIT_GIGABYTES_PER_SECOND":     42,
		"UNIT_TERABITS_PER_SECOND":      43,
		"UNIT_TERABYTES_PER_SECOND":     44,
		"UNIT_PETABITS_PER_SECOND":      45,
		"UNIT_PETABYTES_PER_SECOND":     46,
		"UNIT_BITS_IEC_PER_SECOND":      47,
		"UNIT_BYTES_IEC_PER_SECOND":     48,
		"UNIT_KIBIBITS_PER_SECOND":      49,
		"UNIT_KIBIBYTES_PER_SECOND":     50,
		"UNIT_MEBIBITS_PER_SECOND":      51,
		"UNIT_MEBIBYTES_PER_SECOND":     52,
		"UNIT_GIBIBITS_PER_SECOND":      53,
		"UNIT_GIBIBYTES_PER_SECOND":     54,
		"UNIT_TEBIBITS_PER_SECOND":      55,
		"UNIT_TEBIBYTES_PER_SECOND":     56,
		"UNIT_PEBIBITS_PER_SECOND":      57,
		"UNIT_PEBIBYTES_PER_SECOND":     58,
		"UNIT_DATETIME_UTC":             59,
		"UNIT_DATETIME_LOCAL":           60,
		"UNIT_HERTZ":                    61,
		"UNIT_KILOHERTZ":                62,
		"UNIT_MEGAHERTZ":                63,
		"UNIT_GIGAHERTZ":                64,
		"UNIT_DOLLAR":                   65,
		"UNIT_EURO":                     66,
		"UNIT_ROUBLE":                   67,
		"UNIT_CELSIUS":                  68,
		"UNIT_FAHRENHEIT":               69,
		"UNIT_KELVIN":                   70,
		"UNIT_FLOP_PER_SECOND":          71,
		"UNIT_KILOFLOP_PER_SECOND":      72,
		"UNIT_MEGAFLOP_PER_SECOND":      73,
		"UNIT_GIGAFLOP_PER_SECOND":      74,
		"UNIT_PETAFLOP_PER_SECOND":      75,
		"UNIT_EXAFLOP_PER_SECOND":       76,
		"UNIT_METERS_PER_SECOND":        77,
		"UNIT_KILOMETERS_PER_HOUR":      78,
		"UNIT_MILES_PER_HOUR":           79,
		"UNIT_MILLIMETER":               80,
		"UNIT_CENTIMETER":               81,
		"UNIT_METER":                    82,
		"UNIT_KILOMETER":                83,
		"UNIT_MILE":                     84,
		"UNIT_PPM":                      85,
		"UNIT_EVENTS_PER_SECOND":        86,
		"UNIT_PACKETS":                  87,
		"UNIT_DBM":                      88,
		"UNIT_VIRTUAL_CPU":              89,
		"UNIT_MESSAGES_PER_SECOND":      90,
	}
)

func (x UnitFormat) Enum() *UnitFormat {
	p := new(UnitFormat)
	*p = x
	return p
}

func (x UnitFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_monitoring_v3_unit_format_proto_enumTypes[0].Descriptor()
}

func (UnitFormat) Type() protoreflect.EnumType {
	return &file_yandex_cloud_monitoring_v3_unit_format_proto_enumTypes[0]
}

func (x UnitFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitFormat.Descriptor instead.
func (UnitFormat) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescGZIP(), []int{0}
}

var File_yandex_cloud_monitoring_v3_unit_format_proto protoreflect.FileDescriptor

var file_yandex_cloud_monitoring_v3_unit_format_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x33, 0x2f, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x2a, 0xa0, 0x11, 0x0a, 0x0a, 0x55,
	0x6e, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x45,
	0x52, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4e, 0x41, 0x4e, 0x4f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x53, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x43,
	0x52, 0x4f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53,
	0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x53, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x4e,
	0x55, 0x54, 0x45, 0x53, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x48,
	0x4f, 0x55, 0x52, 0x53, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x44,
	0x41, 0x59, 0x53, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x42, 0x49,
	0x54, 0x53, 0x5f, 0x53, 0x49, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x53, 0x49, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x0e, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45, 0x47, 0x41, 0x42, 0x59, 0x54, 0x45, 0x53,
	0x10, 0x0f, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x49, 0x47, 0x41, 0x42,
	0x59, 0x54, 0x45, 0x53, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54,
	0x45, 0x52, 0x41, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x50, 0x45, 0x54, 0x41, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x12, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x41, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10,
	0x13, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x49,
	0x45, 0x43, 0x10, 0x14, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x42, 0x59, 0x54,
	0x45, 0x53, 0x5f, 0x49, 0x45, 0x43, 0x10, 0x15, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x4b, 0x49, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x16, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x17,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x49, 0x42, 0x49, 0x42, 0x59, 0x54,
	0x45, 0x53, 0x10, 0x18, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x45, 0x42,
	0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x19, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x50, 0x45, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x1a, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x1b,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x1c, 0x12, 0x1e,
	0x0a, 0x1a, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x1d, 0x12, 0x1a,
	0x0a, 0x16, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45,
	0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x1e, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x10, 0x1f, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x10, 0x20, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x49, 0x4f, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x10, 0x21, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10,
	0x22, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x53,
	0x49, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x23, 0x12, 0x1c,
	0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x53, 0x49, 0x5f,
	0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x24, 0x12, 0x1c, 0x0a, 0x18,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45,
	0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x25, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52,
	0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x26, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x4d, 0x45, 0x47, 0x41, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53,
	0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x27, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x4d, 0x45, 0x47, 0x41, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45,
	0x43, 0x4f, 0x4e, 0x44, 0x10, 0x28, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47,
	0x49, 0x47, 0x41, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x10, 0x29, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x49, 0x47,
	0x41, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x10, 0x2a, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x45, 0x52, 0x41,
	0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10,
	0x2b, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x45, 0x52, 0x41, 0x42, 0x59,
	0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x2c,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x45, 0x54, 0x41, 0x42, 0x49, 0x54,
	0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x2d, 0x12, 0x1d,
	0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x45, 0x54, 0x41, 0x42, 0x59, 0x54, 0x45, 0x53,
	0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x2e, 0x12, 0x1c, 0x0a,
	0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x49, 0x45, 0x43, 0x5f, 0x50,
	0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x2f, 0x12, 0x1d, 0x0a, 0x19, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x49, 0x45, 0x43, 0x5f, 0x50, 0x45,
	0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x30, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x4b, 0x49, 0x42, 0x49, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f,
	0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x31, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x4b, 0x49, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53,
	0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x32, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x4d, 0x45, 0x42, 0x49, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x10, 0x33, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45,
	0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x10, 0x34, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x49, 0x42,
	0x49, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x10, 0x35, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x49, 0x42, 0x49, 0x42,
	0x59, 0x54, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10,
	0x36, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x45, 0x42, 0x49, 0x42, 0x49,
	0x54, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x37, 0x12,
	0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x45, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45,
	0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x38, 0x12, 0x1c,
	0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x45, 0x42, 0x49, 0x42, 0x49, 0x54, 0x53, 0x5f,
	0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x39, 0x12, 0x1d, 0x0a, 0x19,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x45, 0x42, 0x49, 0x42, 0x59, 0x54, 0x45, 0x53, 0x5f, 0x50,
	0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x3a, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x54, 0x43,
	0x10, 0x3b, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x3c, 0x12, 0x0e, 0x0a, 0x0a, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x48, 0x45, 0x52, 0x54, 0x5a, 0x10, 0x3d, 0x12, 0x12, 0x0a, 0x0e, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x48, 0x45, 0x52, 0x54, 0x5a, 0x10, 0x3e, 0x12,
	0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45, 0x47, 0x41, 0x48, 0x45, 0x52, 0x54,
	0x5a, 0x10, 0x3f, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47, 0x49, 0x47, 0x41,
	0x48, 0x45, 0x52, 0x54, 0x5a, 0x10, 0x40, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x44, 0x4f, 0x4c, 0x4c, 0x41, 0x52, 0x10, 0x41, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x45, 0x55, 0x52, 0x4f, 0x10, 0x42, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x52, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x43, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x43, 0x45, 0x4c, 0x53, 0x49, 0x55, 0x53, 0x10, 0x44, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x46, 0x41, 0x48, 0x52, 0x45, 0x4e, 0x48, 0x45, 0x49, 0x54, 0x10, 0x45, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4b, 0x45, 0x4c, 0x56, 0x49, 0x4e, 0x10, 0x46,
	0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x46, 0x4c, 0x4f, 0x50, 0x5f, 0x50, 0x45,
	0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x47, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e,
	0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x46, 0x4c, 0x4f, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x5f,
	0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x48, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x4d, 0x45, 0x47, 0x41, 0x46, 0x4c, 0x4f, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45,
	0x43, 0x4f, 0x4e, 0x44, 0x10, 0x49, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x47,
	0x49, 0x47, 0x41, 0x46, 0x4c, 0x4f, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x10, 0x4a, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x45, 0x54,
	0x41, 0x46, 0x4c, 0x4f, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x10, 0x4b, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x41, 0x46, 0x4c,
	0x4f, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x4c, 0x12,
	0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x5f, 0x50,
	0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x4d, 0x12, 0x1c, 0x0a, 0x18, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x5f, 0x50,
	0x45, 0x52, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x4e, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x4d, 0x49, 0x4c, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x48, 0x4f, 0x55, 0x52,
	0x10, 0x4f, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x4c, 0x4c, 0x49,
	0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x50, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x43, 0x45, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x51, 0x12, 0x0e, 0x0a, 0x0a,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x52, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x53,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x4c, 0x45, 0x10, 0x54, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x50, 0x50, 0x4d, 0x10, 0x55, 0x12, 0x1a, 0x0a,
	0x16, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x50, 0x45, 0x52,
	0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x56, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x57, 0x12, 0x0c, 0x0a, 0x08, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x44, 0x42, 0x4d, 0x10, 0x58, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x43, 0x50, 0x55, 0x10, 0x59, 0x12,
	0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53,
	0x5f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x5a, 0x42, 0x6b, 0x0a,
	0x1e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x5a,
	0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x33, 0x3b,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescOnce sync.Once
	file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescData = file_yandex_cloud_monitoring_v3_unit_format_proto_rawDesc
)

func file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescGZIP() []byte {
	file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescData)
	})
	return file_yandex_cloud_monitoring_v3_unit_format_proto_rawDescData
}

var file_yandex_cloud_monitoring_v3_unit_format_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_monitoring_v3_unit_format_proto_goTypes = []interface{}{
	(UnitFormat)(0), // 0: yandex.cloud.monitoring.v3.UnitFormat
}
var file_yandex_cloud_monitoring_v3_unit_format_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_yandex_cloud_monitoring_v3_unit_format_proto_init() }
func file_yandex_cloud_monitoring_v3_unit_format_proto_init() {
	if File_yandex_cloud_monitoring_v3_unit_format_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_monitoring_v3_unit_format_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_monitoring_v3_unit_format_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_monitoring_v3_unit_format_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_monitoring_v3_unit_format_proto_enumTypes,
	}.Build()
	File_yandex_cloud_monitoring_v3_unit_format_proto = out.File
	file_yandex_cloud_monitoring_v3_unit_format_proto_rawDesc = nil
	file_yandex_cloud_monitoring_v3_unit_format_proto_goTypes = nil
	file_yandex_cloud_monitoring_v3_unit_format_proto_depIdxs = nil
}
