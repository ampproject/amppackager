// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: yandex/cloud/ydb/v1/database.proto

package ydb

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertEvaluationStatus int32

const (
	AlertEvaluationStatus_ALERT_EVALUATION_STATUS_UNSPECIFIED AlertEvaluationStatus = 0
	AlertEvaluationStatus_ALERT_EVALUATION_STATUS_OK          AlertEvaluationStatus = 1
	AlertEvaluationStatus_ALERT_EVALUATION_STATUS_NO_DATA     AlertEvaluationStatus = 2
	AlertEvaluationStatus_ALERT_EVALUATION_STATUS_ERROR       AlertEvaluationStatus = 3
	AlertEvaluationStatus_ALERT_EVALUATION_STATUS_ALARM       AlertEvaluationStatus = 4
	AlertEvaluationStatus_ALERT_EVALUATION_STATUS_WARN        AlertEvaluationStatus = 5
)

// Enum value maps for AlertEvaluationStatus.
var (
	AlertEvaluationStatus_name = map[int32]string{
		0: "ALERT_EVALUATION_STATUS_UNSPECIFIED",
		1: "ALERT_EVALUATION_STATUS_OK",
		2: "ALERT_EVALUATION_STATUS_NO_DATA",
		3: "ALERT_EVALUATION_STATUS_ERROR",
		4: "ALERT_EVALUATION_STATUS_ALARM",
		5: "ALERT_EVALUATION_STATUS_WARN",
	}
	AlertEvaluationStatus_value = map[string]int32{
		"ALERT_EVALUATION_STATUS_UNSPECIFIED": 0,
		"ALERT_EVALUATION_STATUS_OK":          1,
		"ALERT_EVALUATION_STATUS_NO_DATA":     2,
		"ALERT_EVALUATION_STATUS_ERROR":       3,
		"ALERT_EVALUATION_STATUS_ALARM":       4,
		"ALERT_EVALUATION_STATUS_WARN":        5,
	}
)

func (x AlertEvaluationStatus) Enum() *AlertEvaluationStatus {
	p := new(AlertEvaluationStatus)
	*p = x
	return p
}

func (x AlertEvaluationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertEvaluationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ydb_v1_database_proto_enumTypes[0].Descriptor()
}

func (AlertEvaluationStatus) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ydb_v1_database_proto_enumTypes[0]
}

func (x AlertEvaluationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertEvaluationStatus.Descriptor instead.
func (AlertEvaluationStatus) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{0}
}

type Database_Status int32

const (
	Database_STATUS_UNSPECIFIED Database_Status = 0
	Database_PROVISIONING       Database_Status = 1
	Database_RUNNING            Database_Status = 2
	Database_UPDATING           Database_Status = 4
	Database_ERROR              Database_Status = 5
	Database_DELETING           Database_Status = 6
	Database_STARTING           Database_Status = 7
	Database_STOPPED            Database_Status = 8
)

// Enum value maps for Database_Status.
var (
	Database_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PROVISIONING",
		2: "RUNNING",
		4: "UPDATING",
		5: "ERROR",
		6: "DELETING",
		7: "STARTING",
		8: "STOPPED",
	}
	Database_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PROVISIONING":       1,
		"RUNNING":            2,
		"UPDATING":           4,
		"ERROR":              5,
		"DELETING":           6,
		"STARTING":           7,
		"STOPPED":            8,
	}
)

func (x Database_Status) Enum() *Database_Status {
	p := new(Database_Status)
	*p = x
	return p
}

func (x Database_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Database_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ydb_v1_database_proto_enumTypes[1].Descriptor()
}

func (Database_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ydb_v1_database_proto_enumTypes[1]
}

func (x Database_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Database_Status.Descriptor instead.
func (Database_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{0, 0}
}

// YDB database.
type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FolderId         string                 `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status           Database_Status        `protobuf:"varint,6,opt,name=status,proto3,enum=yandex.cloud.ydb.v1.Database_Status" json:"status,omitempty"`
	Endpoint         string                 `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ResourcePresetId string                 `protobuf:"bytes,9,opt,name=resource_preset_id,json=resourcePresetId,proto3" json:"resource_preset_id,omitempty"`
	StorageConfig    *StorageConfig         `protobuf:"bytes,10,opt,name=storage_config,json=storageConfig,proto3" json:"storage_config,omitempty"`
	ScalePolicy      *ScalePolicy           `protobuf:"bytes,11,opt,name=scale_policy,json=scalePolicy,proto3" json:"scale_policy,omitempty"`
	NetworkId        string                 `protobuf:"bytes,12,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	SubnetIds        []string               `protobuf:"bytes,13,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	// Types that are assignable to DatabaseType:
	//	*Database_ZonalDatabase
	//	*Database_RegionalDatabase
	//	*Database_DedicatedDatabase
	//	*Database_ServerlessDatabase
	DatabaseType        isDatabase_DatabaseType `protobuf_oneof:"database_type"`
	AssignPublicIps     bool                    `protobuf:"varint,16,opt,name=assign_public_ips,json=assignPublicIps,proto3" json:"assign_public_ips,omitempty"`
	LocationId          string                  `protobuf:"bytes,17,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Labels              map[string]string       `protobuf:"bytes,20,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BackupConfig        *BackupConfig           `protobuf:"bytes,21,opt,name=backup_config,json=backupConfig,proto3" json:"backup_config,omitempty"`
	DocumentApiEndpoint string                  `protobuf:"bytes,22,opt,name=document_api_endpoint,json=documentApiEndpoint,proto3" json:"document_api_endpoint,omitempty"`
	KinesisApiEndpoint  string                  `protobuf:"bytes,23,opt,name=kinesis_api_endpoint,json=kinesisApiEndpoint,proto3" json:"kinesis_api_endpoint,omitempty"`
	MonitoringConfig    *MonitoringConfig       `protobuf:"bytes,24,opt,name=monitoring_config,json=monitoringConfig,proto3" json:"monitoring_config,omitempty"`
	DeletionProtection  bool                    `protobuf:"varint,25,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{0}
}

func (x *Database) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Database) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *Database) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Database) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Database) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Database) GetStatus() Database_Status {
	if x != nil {
		return x.Status
	}
	return Database_STATUS_UNSPECIFIED
}

func (x *Database) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Database) GetResourcePresetId() string {
	if x != nil {
		return x.ResourcePresetId
	}
	return ""
}

func (x *Database) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.StorageConfig
	}
	return nil
}

func (x *Database) GetScalePolicy() *ScalePolicy {
	if x != nil {
		return x.ScalePolicy
	}
	return nil
}

func (x *Database) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *Database) GetSubnetIds() []string {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (m *Database) GetDatabaseType() isDatabase_DatabaseType {
	if m != nil {
		return m.DatabaseType
	}
	return nil
}

func (x *Database) GetZonalDatabase() *ZonalDatabase {
	if x, ok := x.GetDatabaseType().(*Database_ZonalDatabase); ok {
		return x.ZonalDatabase
	}
	return nil
}

func (x *Database) GetRegionalDatabase() *RegionalDatabase {
	if x, ok := x.GetDatabaseType().(*Database_RegionalDatabase); ok {
		return x.RegionalDatabase
	}
	return nil
}

func (x *Database) GetDedicatedDatabase() *DedicatedDatabase {
	if x, ok := x.GetDatabaseType().(*Database_DedicatedDatabase); ok {
		return x.DedicatedDatabase
	}
	return nil
}

func (x *Database) GetServerlessDatabase() *ServerlessDatabase {
	if x, ok := x.GetDatabaseType().(*Database_ServerlessDatabase); ok {
		return x.ServerlessDatabase
	}
	return nil
}

func (x *Database) GetAssignPublicIps() bool {
	if x != nil {
		return x.AssignPublicIps
	}
	return false
}

func (x *Database) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *Database) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Database) GetBackupConfig() *BackupConfig {
	if x != nil {
		return x.BackupConfig
	}
	return nil
}

func (x *Database) GetDocumentApiEndpoint() string {
	if x != nil {
		return x.DocumentApiEndpoint
	}
	return ""
}

func (x *Database) GetKinesisApiEndpoint() string {
	if x != nil {
		return x.KinesisApiEndpoint
	}
	return ""
}

func (x *Database) GetMonitoringConfig() *MonitoringConfig {
	if x != nil {
		return x.MonitoringConfig
	}
	return nil
}

func (x *Database) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

type isDatabase_DatabaseType interface {
	isDatabase_DatabaseType()
}

type Database_ZonalDatabase struct {
	// deprecated field
	ZonalDatabase *ZonalDatabase `protobuf:"bytes,14,opt,name=zonal_database,json=zonalDatabase,proto3,oneof"`
}

type Database_RegionalDatabase struct {
	// deprecated field
	RegionalDatabase *RegionalDatabase `protobuf:"bytes,15,opt,name=regional_database,json=regionalDatabase,proto3,oneof"`
}

type Database_DedicatedDatabase struct {
	DedicatedDatabase *DedicatedDatabase `protobuf:"bytes,18,opt,name=dedicated_database,json=dedicatedDatabase,proto3,oneof"`
}

type Database_ServerlessDatabase struct {
	ServerlessDatabase *ServerlessDatabase `protobuf:"bytes,19,opt,name=serverless_database,json=serverlessDatabase,proto3,oneof"`
}

func (*Database_ZonalDatabase) isDatabase_DatabaseType() {}

func (*Database_RegionalDatabase) isDatabase_DatabaseType() {}

func (*Database_DedicatedDatabase) isDatabase_DatabaseType() {}

func (*Database_ServerlessDatabase) isDatabase_DatabaseType() {}

type AlertParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Parameter:
	//	*AlertParameter_DoubleParameterValue_
	//	*AlertParameter_IntegerParameterValue_
	//	*AlertParameter_TextParameterValue_
	//	*AlertParameter_TextListParameterValue_
	//	*AlertParameter_LabelListParameterValue_
	Parameter isAlertParameter_Parameter `protobuf_oneof:"parameter"`
}

func (x *AlertParameter) Reset() {
	*x = AlertParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertParameter) ProtoMessage() {}

func (x *AlertParameter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertParameter.ProtoReflect.Descriptor instead.
func (*AlertParameter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{1}
}

func (m *AlertParameter) GetParameter() isAlertParameter_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (x *AlertParameter) GetDoubleParameterValue() *AlertParameter_DoubleParameterValue {
	if x, ok := x.GetParameter().(*AlertParameter_DoubleParameterValue_); ok {
		return x.DoubleParameterValue
	}
	return nil
}

func (x *AlertParameter) GetIntegerParameterValue() *AlertParameter_IntegerParameterValue {
	if x, ok := x.GetParameter().(*AlertParameter_IntegerParameterValue_); ok {
		return x.IntegerParameterValue
	}
	return nil
}

func (x *AlertParameter) GetTextParameterValue() *AlertParameter_TextParameterValue {
	if x, ok := x.GetParameter().(*AlertParameter_TextParameterValue_); ok {
		return x.TextParameterValue
	}
	return nil
}

func (x *AlertParameter) GetTextListParameterValue() *AlertParameter_TextListParameterValue {
	if x, ok := x.GetParameter().(*AlertParameter_TextListParameterValue_); ok {
		return x.TextListParameterValue
	}
	return nil
}

func (x *AlertParameter) GetLabelListParameterValue() *AlertParameter_LabelListParameterValue {
	if x, ok := x.GetParameter().(*AlertParameter_LabelListParameterValue_); ok {
		return x.LabelListParameterValue
	}
	return nil
}

type isAlertParameter_Parameter interface {
	isAlertParameter_Parameter()
}

type AlertParameter_DoubleParameterValue_ struct {
	DoubleParameterValue *AlertParameter_DoubleParameterValue `protobuf:"bytes,1,opt,name=double_parameter_value,json=doubleParameterValue,proto3,oneof"`
}

type AlertParameter_IntegerParameterValue_ struct {
	IntegerParameterValue *AlertParameter_IntegerParameterValue `protobuf:"bytes,2,opt,name=integer_parameter_value,json=integerParameterValue,proto3,oneof"`
}

type AlertParameter_TextParameterValue_ struct {
	TextParameterValue *AlertParameter_TextParameterValue `protobuf:"bytes,3,opt,name=text_parameter_value,json=textParameterValue,proto3,oneof"`
}

type AlertParameter_TextListParameterValue_ struct {
	TextListParameterValue *AlertParameter_TextListParameterValue `protobuf:"bytes,4,opt,name=text_list_parameter_value,json=textListParameterValue,proto3,oneof"`
}

type AlertParameter_LabelListParameterValue_ struct {
	LabelListParameterValue *AlertParameter_LabelListParameterValue `protobuf:"bytes,5,opt,name=label_list_parameter_value,json=labelListParameterValue,proto3,oneof"`
}

func (*AlertParameter_DoubleParameterValue_) isAlertParameter_Parameter() {}

func (*AlertParameter_IntegerParameterValue_) isAlertParameter_Parameter() {}

func (*AlertParameter_TextParameterValue_) isAlertParameter_Parameter() {}

func (*AlertParameter_TextListParameterValue_) isAlertParameter_Parameter() {}

func (*AlertParameter_LabelListParameterValue_) isAlertParameter_Parameter() {}

type NotificationChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationChannelId string                  `protobuf:"bytes,1,opt,name=notification_channel_id,json=notificationChannelId,proto3" json:"notification_channel_id,omitempty"`
	NotifyAboutStatuses   []AlertEvaluationStatus `protobuf:"varint,2,rep,packed,name=notify_about_statuses,json=notifyAboutStatuses,proto3,enum=yandex.cloud.ydb.v1.AlertEvaluationStatus" json:"notify_about_statuses,omitempty"`
	RepeateNotifyDelayMs  int64                   `protobuf:"varint,3,opt,name=repeate_notify_delay_ms,json=repeateNotifyDelayMs,proto3" json:"repeate_notify_delay_ms,omitempty"`
}

func (x *NotificationChannel) Reset() {
	*x = NotificationChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationChannel) ProtoMessage() {}

func (x *NotificationChannel) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationChannel.ProtoReflect.Descriptor instead.
func (*NotificationChannel) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationChannel) GetNotificationChannelId() string {
	if x != nil {
		return x.NotificationChannelId
	}
	return ""
}

func (x *NotificationChannel) GetNotifyAboutStatuses() []AlertEvaluationStatus {
	if x != nil {
		return x.NotifyAboutStatuses
	}
	return nil
}

func (x *NotificationChannel) GetRepeateNotifyDelayMs() int64 {
	if x != nil {
		return x.RepeateNotifyDelayMs
	}
	return 0
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// output only field.
	AlertId string `protobuf:"bytes,1,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	// template of the alert.
	AlertTemplateId string `protobuf:"bytes,2,opt,name=alert_template_id,json=alertTemplateId,proto3" json:"alert_template_id,omitempty"`
	// name of the alert.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// human readable description of the alert.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// the notification channels of the alert.
	NotificationChannels []*NotificationChannel `protobuf:"bytes,5,rep,name=notification_channels,json=notificationChannels,proto3" json:"notification_channels,omitempty"`
	// alert parameters to override.
	AlertParameters []*AlertParameter `protobuf:"bytes,6,rep,name=alert_parameters,json=alertParameters,proto3" json:"alert_parameters,omitempty"`
	// alert paratemers to override.
	AlertThresholds []*AlertParameter `protobuf:"bytes,7,rep,name=alert_thresholds,json=alertThresholds,proto3" json:"alert_thresholds,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{3}
}

func (x *Alert) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *Alert) GetAlertTemplateId() string {
	if x != nil {
		return x.AlertTemplateId
	}
	return ""
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alert) GetNotificationChannels() []*NotificationChannel {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

func (x *Alert) GetAlertParameters() []*AlertParameter {
	if x != nil {
		return x.AlertParameters
	}
	return nil
}

func (x *Alert) GetAlertThresholds() []*AlertParameter {
	if x != nil {
		return x.AlertThresholds
	}
	return nil
}

type MonitoringConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *MonitoringConfig) Reset() {
	*x = MonitoringConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitoringConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringConfig) ProtoMessage() {}

func (x *MonitoringConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringConfig.ProtoReflect.Descriptor instead.
func (*MonitoringConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{4}
}

func (x *MonitoringConfig) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type DedicatedDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePresetId string         `protobuf:"bytes,1,opt,name=resource_preset_id,json=resourcePresetId,proto3" json:"resource_preset_id,omitempty"`
	StorageConfig    *StorageConfig `protobuf:"bytes,2,opt,name=storage_config,json=storageConfig,proto3" json:"storage_config,omitempty"`
	ScalePolicy      *ScalePolicy   `protobuf:"bytes,3,opt,name=scale_policy,json=scalePolicy,proto3" json:"scale_policy,omitempty"`
	NetworkId        string         `protobuf:"bytes,4,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	SubnetIds        []string       `protobuf:"bytes,5,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	AssignPublicIps  bool           `protobuf:"varint,6,opt,name=assign_public_ips,json=assignPublicIps,proto3" json:"assign_public_ips,omitempty"`
}

func (x *DedicatedDatabase) Reset() {
	*x = DedicatedDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DedicatedDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DedicatedDatabase) ProtoMessage() {}

func (x *DedicatedDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DedicatedDatabase.ProtoReflect.Descriptor instead.
func (*DedicatedDatabase) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{5}
}

func (x *DedicatedDatabase) GetResourcePresetId() string {
	if x != nil {
		return x.ResourcePresetId
	}
	return ""
}

func (x *DedicatedDatabase) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.StorageConfig
	}
	return nil
}

func (x *DedicatedDatabase) GetScalePolicy() *ScalePolicy {
	if x != nil {
		return x.ScalePolicy
	}
	return nil
}

func (x *DedicatedDatabase) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *DedicatedDatabase) GetSubnetIds() []string {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (x *DedicatedDatabase) GetAssignPublicIps() bool {
	if x != nil {
		return x.AssignPublicIps
	}
	return false
}

type ServerlessDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Let's define 1 RU  - 1 request unit
	// Let's define 1 RCU - 1 request capacity unit, which is 1 RU per second.
	// If `enable_throttling_rcu_limit` flag is true, the database will be throttled using `throttling_rcu_limit` value.
	// Otherwise, the database is throttled using the cloud quotas.
	// If zero, all requests will be blocked until non zero value is set.
	ThrottlingRcuLimit int64 `protobuf:"varint,1,opt,name=throttling_rcu_limit,json=throttlingRcuLimit,proto3" json:"throttling_rcu_limit,omitempty"`
	// Specify serverless database storage size limit. If zero, default value is applied.
	StorageSizeLimit int64 `protobuf:"varint,2,opt,name=storage_size_limit,json=storageSizeLimit,proto3" json:"storage_size_limit,omitempty"`
	// If false, the database is throttled by cloud value.
	EnableThrottlingRcuLimit bool `protobuf:"varint,3,opt,name=enable_throttling_rcu_limit,json=enableThrottlingRcuLimit,proto3" json:"enable_throttling_rcu_limit,omitempty"`
	// Specify the number of provisioned RCUs to pay less if the database has predictable load.
	// You will be charged for the provisioned capacity regularly even if this capacity is not fully consumed.
	// You will be charged for the on-demand consumption only if provisioned capacity is consumed.
	ProvisionedRcuLimit int64 `protobuf:"varint,4,opt,name=provisioned_rcu_limit,json=provisionedRcuLimit,proto3" json:"provisioned_rcu_limit,omitempty"`
}

func (x *ServerlessDatabase) Reset() {
	*x = ServerlessDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerlessDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerlessDatabase) ProtoMessage() {}

func (x *ServerlessDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerlessDatabase.ProtoReflect.Descriptor instead.
func (*ServerlessDatabase) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{6}
}

func (x *ServerlessDatabase) GetThrottlingRcuLimit() int64 {
	if x != nil {
		return x.ThrottlingRcuLimit
	}
	return 0
}

func (x *ServerlessDatabase) GetStorageSizeLimit() int64 {
	if x != nil {
		return x.StorageSizeLimit
	}
	return 0
}

func (x *ServerlessDatabase) GetEnableThrottlingRcuLimit() bool {
	if x != nil {
		return x.EnableThrottlingRcuLimit
	}
	return false
}

func (x *ServerlessDatabase) GetProvisionedRcuLimit() int64 {
	if x != nil {
		return x.ProvisionedRcuLimit
	}
	return 0
}

type ZonalDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
}

func (x *ZonalDatabase) Reset() {
	*x = ZonalDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZonalDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonalDatabase) ProtoMessage() {}

func (x *ZonalDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonalDatabase.ProtoReflect.Descriptor instead.
func (*ZonalDatabase) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{7}
}

func (x *ZonalDatabase) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

type RegionalDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId string `protobuf:"bytes,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *RegionalDatabase) Reset() {
	*x = RegionalDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionalDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionalDatabase) ProtoMessage() {}

func (x *RegionalDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionalDatabase.ProtoReflect.Descriptor instead.
func (*RegionalDatabase) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{8}
}

func (x *RegionalDatabase) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type ScalePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ScaleType:
	//	*ScalePolicy_FixedScale_
	ScaleType isScalePolicy_ScaleType `protobuf_oneof:"scale_type"`
}

func (x *ScalePolicy) Reset() {
	*x = ScalePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalePolicy) ProtoMessage() {}

func (x *ScalePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalePolicy.ProtoReflect.Descriptor instead.
func (*ScalePolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{9}
}

func (m *ScalePolicy) GetScaleType() isScalePolicy_ScaleType {
	if m != nil {
		return m.ScaleType
	}
	return nil
}

func (x *ScalePolicy) GetFixedScale() *ScalePolicy_FixedScale {
	if x, ok := x.GetScaleType().(*ScalePolicy_FixedScale_); ok {
		return x.FixedScale
	}
	return nil
}

type isScalePolicy_ScaleType interface {
	isScalePolicy_ScaleType()
}

type ScalePolicy_FixedScale_ struct {
	FixedScale *ScalePolicy_FixedScale `protobuf:"bytes,1,opt,name=fixed_scale,json=fixedScale,proto3,oneof"`
}

func (*ScalePolicy_FixedScale_) isScalePolicy_ScaleType() {}

type StorageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageOptions []*StorageOption `protobuf:"bytes,1,rep,name=storage_options,json=storageOptions,proto3" json:"storage_options,omitempty"`
	// output only field: storage size limit of dedicated database.
	StorageSizeLimit int64 `protobuf:"varint,2,opt,name=storage_size_limit,json=storageSizeLimit,proto3" json:"storage_size_limit,omitempty"`
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{10}
}

func (x *StorageConfig) GetStorageOptions() []*StorageOption {
	if x != nil {
		return x.StorageOptions
	}
	return nil
}

func (x *StorageConfig) GetStorageSizeLimit() int64 {
	if x != nil {
		return x.StorageSizeLimit
	}
	return 0
}

type StorageOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageTypeId string `protobuf:"bytes,1,opt,name=storage_type_id,json=storageTypeId,proto3" json:"storage_type_id,omitempty"`
	GroupCount    int64  `protobuf:"varint,2,opt,name=group_count,json=groupCount,proto3" json:"group_count,omitempty"`
}

func (x *StorageOption) Reset() {
	*x = StorageOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageOption) ProtoMessage() {}

func (x *StorageOption) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageOption.ProtoReflect.Descriptor instead.
func (*StorageOption) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{11}
}

func (x *StorageOption) GetStorageTypeId() string {
	if x != nil {
		return x.StorageTypeId
	}
	return ""
}

func (x *StorageOption) GetGroupCount() int64 {
	if x != nil {
		return x.GroupCount
	}
	return 0
}

type AlertParameter_DoubleParameterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Parameter name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Parameter value
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AlertParameter_DoubleParameterValue) Reset() {
	*x = AlertParameter_DoubleParameterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertParameter_DoubleParameterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertParameter_DoubleParameterValue) ProtoMessage() {}

func (x *AlertParameter_DoubleParameterValue) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertParameter_DoubleParameterValue.ProtoReflect.Descriptor instead.
func (*AlertParameter_DoubleParameterValue) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AlertParameter_DoubleParameterValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertParameter_DoubleParameterValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AlertParameter_IntegerParameterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Parameter name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Parameter value
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AlertParameter_IntegerParameterValue) Reset() {
	*x = AlertParameter_IntegerParameterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertParameter_IntegerParameterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertParameter_IntegerParameterValue) ProtoMessage() {}

func (x *AlertParameter_IntegerParameterValue) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertParameter_IntegerParameterValue.ProtoReflect.Descriptor instead.
func (*AlertParameter_IntegerParameterValue) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AlertParameter_IntegerParameterValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertParameter_IntegerParameterValue) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AlertParameter_TextParameterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Parameter name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Parameter value
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AlertParameter_TextParameterValue) Reset() {
	*x = AlertParameter_TextParameterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertParameter_TextParameterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertParameter_TextParameterValue) ProtoMessage() {}

func (x *AlertParameter_TextParameterValue) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertParameter_TextParameterValue.ProtoReflect.Descriptor instead.
func (*AlertParameter_TextParameterValue) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AlertParameter_TextParameterValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertParameter_TextParameterValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AlertParameter_TextListParameterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Parameter name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Parameter value
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AlertParameter_TextListParameterValue) Reset() {
	*x = AlertParameter_TextListParameterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertParameter_TextListParameterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertParameter_TextListParameterValue) ProtoMessage() {}

func (x *AlertParameter_TextListParameterValue) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertParameter_TextListParameterValue.ProtoReflect.Descriptor instead.
func (*AlertParameter_TextListParameterValue) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AlertParameter_TextListParameterValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertParameter_TextListParameterValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type AlertParameter_LabelListParameterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Parameter name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Parameter value
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AlertParameter_LabelListParameterValue) Reset() {
	*x = AlertParameter_LabelListParameterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertParameter_LabelListParameterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertParameter_LabelListParameterValue) ProtoMessage() {}

func (x *AlertParameter_LabelListParameterValue) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertParameter_LabelListParameterValue.ProtoReflect.Descriptor instead.
func (*AlertParameter_LabelListParameterValue) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{1, 4}
}

func (x *AlertParameter_LabelListParameterValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlertParameter_LabelListParameterValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ScalePolicy_FixedScale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ScalePolicy_FixedScale) Reset() {
	*x = ScalePolicy_FixedScale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalePolicy_FixedScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalePolicy_FixedScale) ProtoMessage() {}

func (x *ScalePolicy_FixedScale) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_database_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalePolicy_FixedScale.ProtoReflect.Descriptor instead.
func (*ScalePolicy_FixedScale) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ScalePolicy_FixedScale) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_yandex_cloud_ydb_v1_database_proto protoreflect.FileDescriptor

var file_yandex_cloud_ydb_v1_database_proto_rawDesc = []byte{
	0x0a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79,
	0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x0b, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x49,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x0e,
	0x7a, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x6f, 0x6e, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x7a, 0x6f, 0x6e, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x12, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x41, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x15,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x41, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x52, 0x0a, 0x11, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x81, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f,
	0x50, 0x50, 0x45, 0x44, 0x10, 0x08, 0x42, 0x0f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb7, 0x07, 0x0a, 0x0e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x70, 0x0a, 0x16, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x14, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x73, 0x0a, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x6a, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x77, 0x0a,
	0x19, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x16,
	0x74, 0x65, 0x78, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x7a, 0x0a, 0x1a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x17, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x40, 0x0a, 0x14, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x41, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3e, 0x0a, 0x12, 0x54, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x44, 0x0a, 0x16, 0x54, 0x65, 0x78, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x45, 0x0a,
	0x17, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x22, 0xe4, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x5e, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x62, 0x6f, 0x75,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x73, 0x22, 0x83, 0x03, 0x0a, 0x05, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5d, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x4e,
	0x0a, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4e,
	0x0a, 0x10, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x22, 0x46,
	0x0a, 0x10, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x11, 0x44, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0b, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x70, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x74,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x63, 0x75, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x68, 0x72, 0x6f, 0x74,
	0x74, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x63, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x63, 0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69,
	0x6e, 0x67, 0x52, 0x63, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x63, 0x75, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x63, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x2e,
	0x0a, 0x0d, 0x5a, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4e, 0x0a, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x1a, 0x29, 0x0a, 0x0a, 0x46, 0x69, 0x78, 0x65, 0x64, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0xc7, 0x31, 0x03, 0x3e, 0x3d, 0x31, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x42, 0x12, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x04,
	0xc0, 0xc1, 0x31, 0x01, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x07, 0x82, 0xc8, 0x31, 0x03, 0x3e, 0x3d, 0x31, 0x52, 0x0e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x58, 0x0a, 0x0d, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x2a, 0xed, 0x01, 0x0a, 0x15, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27,
	0x0a, 0x23, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x4c, 0x45, 0x52, 0x54,
	0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x4c, 0x45, 0x52, 0x54,
	0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d,
	0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12,
	0x21, 0x0a, 0x1d, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x41, 0x52, 0x4d,
	0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x41, 0x4c,
	0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41,
	0x52, 0x4e, 0x10, 0x05, 0x42, 0x56, 0x0a, 0x17, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x5a,
	0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x79, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x79, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_ydb_v1_database_proto_rawDescOnce sync.Once
	file_yandex_cloud_ydb_v1_database_proto_rawDescData = file_yandex_cloud_ydb_v1_database_proto_rawDesc
)

func file_yandex_cloud_ydb_v1_database_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ydb_v1_database_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ydb_v1_database_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ydb_v1_database_proto_rawDescData)
	})
	return file_yandex_cloud_ydb_v1_database_proto_rawDescData
}

var file_yandex_cloud_ydb_v1_database_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_ydb_v1_database_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_yandex_cloud_ydb_v1_database_proto_goTypes = []interface{}{
	(AlertEvaluationStatus)(0),                     // 0: yandex.cloud.ydb.v1.AlertEvaluationStatus
	(Database_Status)(0),                           // 1: yandex.cloud.ydb.v1.Database.Status
	(*Database)(nil),                               // 2: yandex.cloud.ydb.v1.Database
	(*AlertParameter)(nil),                         // 3: yandex.cloud.ydb.v1.AlertParameter
	(*NotificationChannel)(nil),                    // 4: yandex.cloud.ydb.v1.NotificationChannel
	(*Alert)(nil),                                  // 5: yandex.cloud.ydb.v1.Alert
	(*MonitoringConfig)(nil),                       // 6: yandex.cloud.ydb.v1.MonitoringConfig
	(*DedicatedDatabase)(nil),                      // 7: yandex.cloud.ydb.v1.DedicatedDatabase
	(*ServerlessDatabase)(nil),                     // 8: yandex.cloud.ydb.v1.ServerlessDatabase
	(*ZonalDatabase)(nil),                          // 9: yandex.cloud.ydb.v1.ZonalDatabase
	(*RegionalDatabase)(nil),                       // 10: yandex.cloud.ydb.v1.RegionalDatabase
	(*ScalePolicy)(nil),                            // 11: yandex.cloud.ydb.v1.ScalePolicy
	(*StorageConfig)(nil),                          // 12: yandex.cloud.ydb.v1.StorageConfig
	(*StorageOption)(nil),                          // 13: yandex.cloud.ydb.v1.StorageOption
	nil,                                            // 14: yandex.cloud.ydb.v1.Database.LabelsEntry
	(*AlertParameter_DoubleParameterValue)(nil),    // 15: yandex.cloud.ydb.v1.AlertParameter.DoubleParameterValue
	(*AlertParameter_IntegerParameterValue)(nil),   // 16: yandex.cloud.ydb.v1.AlertParameter.IntegerParameterValue
	(*AlertParameter_TextParameterValue)(nil),      // 17: yandex.cloud.ydb.v1.AlertParameter.TextParameterValue
	(*AlertParameter_TextListParameterValue)(nil),  // 18: yandex.cloud.ydb.v1.AlertParameter.TextListParameterValue
	(*AlertParameter_LabelListParameterValue)(nil), // 19: yandex.cloud.ydb.v1.AlertParameter.LabelListParameterValue
	(*ScalePolicy_FixedScale)(nil),                 // 20: yandex.cloud.ydb.v1.ScalePolicy.FixedScale
	(*timestamppb.Timestamp)(nil),                  // 21: google.protobuf.Timestamp
	(*BackupConfig)(nil),                           // 22: yandex.cloud.ydb.v1.BackupConfig
}
var file_yandex_cloud_ydb_v1_database_proto_depIdxs = []int32{
	21, // 0: yandex.cloud.ydb.v1.Database.created_at:type_name -> google.protobuf.Timestamp
	1,  // 1: yandex.cloud.ydb.v1.Database.status:type_name -> yandex.cloud.ydb.v1.Database.Status
	12, // 2: yandex.cloud.ydb.v1.Database.storage_config:type_name -> yandex.cloud.ydb.v1.StorageConfig
	11, // 3: yandex.cloud.ydb.v1.Database.scale_policy:type_name -> yandex.cloud.ydb.v1.ScalePolicy
	9,  // 4: yandex.cloud.ydb.v1.Database.zonal_database:type_name -> yandex.cloud.ydb.v1.ZonalDatabase
	10, // 5: yandex.cloud.ydb.v1.Database.regional_database:type_name -> yandex.cloud.ydb.v1.RegionalDatabase
	7,  // 6: yandex.cloud.ydb.v1.Database.dedicated_database:type_name -> yandex.cloud.ydb.v1.DedicatedDatabase
	8,  // 7: yandex.cloud.ydb.v1.Database.serverless_database:type_name -> yandex.cloud.ydb.v1.ServerlessDatabase
	14, // 8: yandex.cloud.ydb.v1.Database.labels:type_name -> yandex.cloud.ydb.v1.Database.LabelsEntry
	22, // 9: yandex.cloud.ydb.v1.Database.backup_config:type_name -> yandex.cloud.ydb.v1.BackupConfig
	6,  // 10: yandex.cloud.ydb.v1.Database.monitoring_config:type_name -> yandex.cloud.ydb.v1.MonitoringConfig
	15, // 11: yandex.cloud.ydb.v1.AlertParameter.double_parameter_value:type_name -> yandex.cloud.ydb.v1.AlertParameter.DoubleParameterValue
	16, // 12: yandex.cloud.ydb.v1.AlertParameter.integer_parameter_value:type_name -> yandex.cloud.ydb.v1.AlertParameter.IntegerParameterValue
	17, // 13: yandex.cloud.ydb.v1.AlertParameter.text_parameter_value:type_name -> yandex.cloud.ydb.v1.AlertParameter.TextParameterValue
	18, // 14: yandex.cloud.ydb.v1.AlertParameter.text_list_parameter_value:type_name -> yandex.cloud.ydb.v1.AlertParameter.TextListParameterValue
	19, // 15: yandex.cloud.ydb.v1.AlertParameter.label_list_parameter_value:type_name -> yandex.cloud.ydb.v1.AlertParameter.LabelListParameterValue
	0,  // 16: yandex.cloud.ydb.v1.NotificationChannel.notify_about_statuses:type_name -> yandex.cloud.ydb.v1.AlertEvaluationStatus
	4,  // 17: yandex.cloud.ydb.v1.Alert.notification_channels:type_name -> yandex.cloud.ydb.v1.NotificationChannel
	3,  // 18: yandex.cloud.ydb.v1.Alert.alert_parameters:type_name -> yandex.cloud.ydb.v1.AlertParameter
	3,  // 19: yandex.cloud.ydb.v1.Alert.alert_thresholds:type_name -> yandex.cloud.ydb.v1.AlertParameter
	5,  // 20: yandex.cloud.ydb.v1.MonitoringConfig.alerts:type_name -> yandex.cloud.ydb.v1.Alert
	12, // 21: yandex.cloud.ydb.v1.DedicatedDatabase.storage_config:type_name -> yandex.cloud.ydb.v1.StorageConfig
	11, // 22: yandex.cloud.ydb.v1.DedicatedDatabase.scale_policy:type_name -> yandex.cloud.ydb.v1.ScalePolicy
	20, // 23: yandex.cloud.ydb.v1.ScalePolicy.fixed_scale:type_name -> yandex.cloud.ydb.v1.ScalePolicy.FixedScale
	13, // 24: yandex.cloud.ydb.v1.StorageConfig.storage_options:type_name -> yandex.cloud.ydb.v1.StorageOption
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ydb_v1_database_proto_init() }
func file_yandex_cloud_ydb_v1_database_proto_init() {
	if File_yandex_cloud_ydb_v1_database_proto != nil {
		return
	}
	file_yandex_cloud_ydb_v1_backup_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitoringConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DedicatedDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerlessDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZonalDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionalDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertParameter_DoubleParameterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertParameter_IntegerParameterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertParameter_TextParameterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertParameter_TextListParameterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertParameter_LabelListParameterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_database_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalePolicy_FixedScale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_ydb_v1_database_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Database_ZonalDatabase)(nil),
		(*Database_RegionalDatabase)(nil),
		(*Database_DedicatedDatabase)(nil),
		(*Database_ServerlessDatabase)(nil),
	}
	file_yandex_cloud_ydb_v1_database_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AlertParameter_DoubleParameterValue_)(nil),
		(*AlertParameter_IntegerParameterValue_)(nil),
		(*AlertParameter_TextParameterValue_)(nil),
		(*AlertParameter_TextListParameterValue_)(nil),
		(*AlertParameter_LabelListParameterValue_)(nil),
	}
	file_yandex_cloud_ydb_v1_database_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ScalePolicy_FixedScale_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ydb_v1_database_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_ydb_v1_database_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ydb_v1_database_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_ydb_v1_database_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_ydb_v1_database_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ydb_v1_database_proto = out.File
	file_yandex_cloud_ydb_v1_database_proto_rawDesc = nil
	file_yandex_cloud_ydb_v1_database_proto_goTypes = nil
	file_yandex_cloud_ydb_v1_database_proto_depIdxs = nil
}
