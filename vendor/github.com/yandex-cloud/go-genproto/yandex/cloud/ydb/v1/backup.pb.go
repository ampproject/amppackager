// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: yandex/cloud/ydb/v1/backup.proto

package ydb

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	dayofweek "google.golang.org/genproto/googleapis/type/dayofweek"
	timeofday "google.golang.org/genproto/googleapis/type/timeofday"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackupSettings_Type int32

const (
	BackupSettings_TYPE_UNSPECIFIED BackupSettings_Type = 0
	BackupSettings_SYSTEM           BackupSettings_Type = 1
	BackupSettings_USER             BackupSettings_Type = 2
)

// Enum value maps for BackupSettings_Type.
var (
	BackupSettings_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "SYSTEM",
		2: "USER",
	}
	BackupSettings_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"SYSTEM":           1,
		"USER":             2,
	}
)

func (x BackupSettings_Type) Enum() *BackupSettings_Type {
	p := new(BackupSettings_Type)
	*p = x
	return p
}

func (x BackupSettings_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupSettings_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ydb_v1_backup_proto_enumTypes[0].Descriptor()
}

func (BackupSettings_Type) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ydb_v1_backup_proto_enumTypes[0]
}

func (x BackupSettings_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupSettings_Type.Descriptor instead.
func (BackupSettings_Type) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{5, 0}
}

type BackupSettings_StorageClass int32

const (
	BackupSettings_STORAGE_CLASS_UNSPECIFIED BackupSettings_StorageClass = 0
	BackupSettings_STANDARD                  BackupSettings_StorageClass = 1
	BackupSettings_REDUCED_REDUNDANCY        BackupSettings_StorageClass = 2
	BackupSettings_STANDARD_IA               BackupSettings_StorageClass = 3
	BackupSettings_ONEZONE_IA                BackupSettings_StorageClass = 4
	BackupSettings_INTELLIGENT_TIERING       BackupSettings_StorageClass = 5
	BackupSettings_GLACIER                   BackupSettings_StorageClass = 6
	BackupSettings_DEEP_ARCHIVE              BackupSettings_StorageClass = 7
	BackupSettings_OUTPOSTS                  BackupSettings_StorageClass = 8
)

// Enum value maps for BackupSettings_StorageClass.
var (
	BackupSettings_StorageClass_name = map[int32]string{
		0: "STORAGE_CLASS_UNSPECIFIED",
		1: "STANDARD",
		2: "REDUCED_REDUNDANCY",
		3: "STANDARD_IA",
		4: "ONEZONE_IA",
		5: "INTELLIGENT_TIERING",
		6: "GLACIER",
		7: "DEEP_ARCHIVE",
		8: "OUTPOSTS",
	}
	BackupSettings_StorageClass_value = map[string]int32{
		"STORAGE_CLASS_UNSPECIFIED": 0,
		"STANDARD":                  1,
		"REDUCED_REDUNDANCY":        2,
		"STANDARD_IA":               3,
		"ONEZONE_IA":                4,
		"INTELLIGENT_TIERING":       5,
		"GLACIER":                   6,
		"DEEP_ARCHIVE":              7,
		"OUTPOSTS":                  8,
	}
)

func (x BackupSettings_StorageClass) Enum() *BackupSettings_StorageClass {
	p := new(BackupSettings_StorageClass)
	*p = x
	return p
}

func (x BackupSettings_StorageClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupSettings_StorageClass) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ydb_v1_backup_proto_enumTypes[1].Descriptor()
}

func (BackupSettings_StorageClass) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ydb_v1_backup_proto_enumTypes[1]
}

func (x BackupSettings_StorageClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupSettings_StorageClass.Descriptor instead.
func (BackupSettings_StorageClass) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{5, 1}
}

// id of backup
type Backup_Status int32

const (
	Backup_STATUS_UNSPECIFIED Backup_Status = 0
	Backup_CREATING           Backup_Status = 1
	Backup_READY              Backup_Status = 2
	Backup_ERROR              Backup_Status = 3
	Backup_CANCELLED          Backup_Status = 4
)

// Enum value maps for Backup_Status.
var (
	Backup_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "READY",
		3: "ERROR",
		4: "CANCELLED",
	}
	Backup_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"CREATING":           1,
		"READY":              2,
		"ERROR":              3,
		"CANCELLED":          4,
	}
)

func (x Backup_Status) Enum() *Backup_Status {
	p := new(Backup_Status)
	*p = x
	return p
}

func (x Backup_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Backup_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ydb_v1_backup_proto_enumTypes[2].Descriptor()
}

func (Backup_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ydb_v1_backup_proto_enumTypes[2]
}

func (x Backup_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Backup_Status.Descriptor instead.
func (Backup_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{7, 0}
}

type Backup_Type int32

const (
	Backup_TYPE_UNSPECIFIED Backup_Type = 0
	// indicates that backup started by the system.
	Backup_SYSTEM Backup_Type = 1
	Backup_USER   Backup_Type = 2
)

// Enum value maps for Backup_Type.
var (
	Backup_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "SYSTEM",
		2: "USER",
	}
	Backup_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"SYSTEM":           1,
		"USER":             2,
	}
)

func (x Backup_Type) Enum() *Backup_Type {
	p := new(Backup_Type)
	*p = x
	return p
}

func (x Backup_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Backup_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ydb_v1_backup_proto_enumTypes[3].Descriptor()
}

func (Backup_Type) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ydb_v1_backup_proto_enumTypes[3]
}

func (x Backup_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Backup_Type.Descriptor instead.
func (Backup_Type) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{7, 1}
}

type BackupSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Policy:
	//	*BackupSchedule_DailyBackupSchedule
	//	*BackupSchedule_WeeklyBackupSchedule
	//	*BackupSchedule_RecurringBackupSchedule
	Policy isBackupSchedule_Policy `protobuf_oneof:"policy"`
	// output only field: when next backup will be executed
	// using provided schedule.
	NextExecuteTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=next_execute_time,json=nextExecuteTime,proto3" json:"next_execute_time,omitempty"`
}

func (x *BackupSchedule) Reset() {
	*x = BackupSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupSchedule) ProtoMessage() {}

func (x *BackupSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupSchedule.ProtoReflect.Descriptor instead.
func (*BackupSchedule) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{0}
}

func (m *BackupSchedule) GetPolicy() isBackupSchedule_Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (x *BackupSchedule) GetDailyBackupSchedule() *DailyBackupSchedule {
	if x, ok := x.GetPolicy().(*BackupSchedule_DailyBackupSchedule); ok {
		return x.DailyBackupSchedule
	}
	return nil
}

func (x *BackupSchedule) GetWeeklyBackupSchedule() *WeeklyBackupSchedule {
	if x, ok := x.GetPolicy().(*BackupSchedule_WeeklyBackupSchedule); ok {
		return x.WeeklyBackupSchedule
	}
	return nil
}

func (x *BackupSchedule) GetRecurringBackupSchedule() *RecurringBackupSchedule {
	if x, ok := x.GetPolicy().(*BackupSchedule_RecurringBackupSchedule); ok {
		return x.RecurringBackupSchedule
	}
	return nil
}

func (x *BackupSchedule) GetNextExecuteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecuteTime
	}
	return nil
}

type isBackupSchedule_Policy interface {
	isBackupSchedule_Policy()
}

type BackupSchedule_DailyBackupSchedule struct {
	DailyBackupSchedule *DailyBackupSchedule `protobuf:"bytes,1,opt,name=daily_backup_schedule,json=dailyBackupSchedule,proto3,oneof"`
}

type BackupSchedule_WeeklyBackupSchedule struct {
	WeeklyBackupSchedule *WeeklyBackupSchedule `protobuf:"bytes,2,opt,name=weekly_backup_schedule,json=weeklyBackupSchedule,proto3,oneof"`
}

type BackupSchedule_RecurringBackupSchedule struct {
	RecurringBackupSchedule *RecurringBackupSchedule `protobuf:"bytes,4,opt,name=recurring_backup_schedule,json=recurringBackupSchedule,proto3,oneof"`
}

func (*BackupSchedule_DailyBackupSchedule) isBackupSchedule_Policy() {}

func (*BackupSchedule_WeeklyBackupSchedule) isBackupSchedule_Policy() {}

func (*BackupSchedule_RecurringBackupSchedule) isBackupSchedule_Policy() {}

type RecurringBackupSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp of the first recurrence.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
	// this backup reccurs.
	// The FREQ values of MINUTELY, and SECONDLY are not supported.
	Recurrence string `protobuf:"bytes,2,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
}

func (x *RecurringBackupSchedule) Reset() {
	*x = RecurringBackupSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecurringBackupSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecurringBackupSchedule) ProtoMessage() {}

func (x *RecurringBackupSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecurringBackupSchedule.ProtoReflect.Descriptor instead.
func (*RecurringBackupSchedule) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{1}
}

func (x *RecurringBackupSchedule) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RecurringBackupSchedule) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

type DaysOfWeekBackupSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days        []dayofweek.DayOfWeek `protobuf:"varint,1,rep,packed,name=days,proto3,enum=google.type.DayOfWeek" json:"days,omitempty"`
	ExecuteTime *timeofday.TimeOfDay  `protobuf:"bytes,2,opt,name=execute_time,json=executeTime,proto3" json:"execute_time,omitempty"`
}

func (x *DaysOfWeekBackupSchedule) Reset() {
	*x = DaysOfWeekBackupSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaysOfWeekBackupSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaysOfWeekBackupSchedule) ProtoMessage() {}

func (x *DaysOfWeekBackupSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaysOfWeekBackupSchedule.ProtoReflect.Descriptor instead.
func (*DaysOfWeekBackupSchedule) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{2}
}

func (x *DaysOfWeekBackupSchedule) GetDays() []dayofweek.DayOfWeek {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *DaysOfWeekBackupSchedule) GetExecuteTime() *timeofday.TimeOfDay {
	if x != nil {
		return x.ExecuteTime
	}
	return nil
}

type WeeklyBackupSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaysOfWeek []*DaysOfWeekBackupSchedule `protobuf:"bytes,1,rep,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"`
}

func (x *WeeklyBackupSchedule) Reset() {
	*x = WeeklyBackupSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeeklyBackupSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklyBackupSchedule) ProtoMessage() {}

func (x *WeeklyBackupSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklyBackupSchedule.ProtoReflect.Descriptor instead.
func (*WeeklyBackupSchedule) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{3}
}

func (x *WeeklyBackupSchedule) GetDaysOfWeek() []*DaysOfWeekBackupSchedule {
	if x != nil {
		return x.DaysOfWeek
	}
	return nil
}

type DailyBackupSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecuteTime *timeofday.TimeOfDay `protobuf:"bytes,1,opt,name=execute_time,json=executeTime,proto3" json:"execute_time,omitempty"`
}

func (x *DailyBackupSchedule) Reset() {
	*x = DailyBackupSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyBackupSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyBackupSchedule) ProtoMessage() {}

func (x *DailyBackupSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyBackupSchedule.ProtoReflect.Descriptor instead.
func (*DailyBackupSchedule) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{4}
}

func (x *DailyBackupSchedule) GetExecuteTime() *timeofday.TimeOfDay {
	if x != nil {
		return x.ExecuteTime
	}
	return nil
}

type BackupSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of backup settings
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// human readable description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// provide schedule. if empty, backup will be disabled.
	BackupSchedule *BackupSchedule `protobuf:"bytes,3,opt,name=backup_schedule,json=backupSchedule,proto3" json:"backup_schedule,omitempty"`
	// provide time to live of backup.
	BackupTimeToLive *durationpb.Duration `protobuf:"bytes,4,opt,name=backup_time_to_live,json=backupTimeToLive,proto3" json:"backup_time_to_live,omitempty"`
	// provide a list of source paths. Each path can be directory, table or even database itself.
	// Each directory (or database) will be traversed recursively and all childs of directory will be included to backup.
	// By default, backup will be created for full database.
	SourcePaths []string `protobuf:"bytes,5,rep,name=source_paths,json=sourcePaths,proto3" json:"source_paths,omitempty"`
	// provide a list of paths to exclude from backup.
	// Each path is a directory, table, or database.
	// Each directory (or database) will be traversed recursively and all childs of directory will be excluded.
	SourcePathsToExclude []string                    `protobuf:"bytes,6,rep,name=source_paths_to_exclude,json=sourcePathsToExclude,proto3" json:"source_paths_to_exclude,omitempty"`
	Type                 BackupSettings_Type         `protobuf:"varint,7,opt,name=type,proto3,enum=yandex.cloud.ydb.v1.BackupSettings_Type" json:"type,omitempty"`
	StorageClass         BackupSettings_StorageClass `protobuf:"varint,8,opt,name=storage_class,json=storageClass,proto3,enum=yandex.cloud.ydb.v1.BackupSettings_StorageClass" json:"storage_class,omitempty"`
}

func (x *BackupSettings) Reset() {
	*x = BackupSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupSettings) ProtoMessage() {}

func (x *BackupSettings) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupSettings.ProtoReflect.Descriptor instead.
func (*BackupSettings) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{5}
}

func (x *BackupSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BackupSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BackupSettings) GetBackupSchedule() *BackupSchedule {
	if x != nil {
		return x.BackupSchedule
	}
	return nil
}

func (x *BackupSettings) GetBackupTimeToLive() *durationpb.Duration {
	if x != nil {
		return x.BackupTimeToLive
	}
	return nil
}

func (x *BackupSettings) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

func (x *BackupSettings) GetSourcePathsToExclude() []string {
	if x != nil {
		return x.SourcePathsToExclude
	}
	return nil
}

func (x *BackupSettings) GetType() BackupSettings_Type {
	if x != nil {
		return x.Type
	}
	return BackupSettings_TYPE_UNSPECIFIED
}

func (x *BackupSettings) GetStorageClass() BackupSettings_StorageClass {
	if x != nil {
		return x.StorageClass
	}
	return BackupSettings_STORAGE_CLASS_UNSPECIFIED
}

type BackupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupSettings []*BackupSettings `protobuf:"bytes,1,rep,name=backup_settings,json=backupSettings,proto3" json:"backup_settings,omitempty"`
}

func (x *BackupConfig) Reset() {
	*x = BackupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupConfig) ProtoMessage() {}

func (x *BackupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupConfig.ProtoReflect.Descriptor instead.
func (*BackupConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{6}
}

func (x *BackupConfig) GetBackupSettings() []*BackupSettings {
	if x != nil {
		return x.BackupSettings
	}
	return nil
}

type Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// human readable backup name.
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FolderId   string `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	DatabaseId string `protobuf:"bytes,4,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	// description of backup.
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// indicates when backup started.
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// indicates when backup completed.
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Status      Backup_Status          `protobuf:"varint,9,opt,name=status,proto3,enum=yandex.cloud.ydb.v1.Backup_Status" json:"status,omitempty"`
	// settings used to make backup.
	BackupSettings *BackupSettings `protobuf:"bytes,10,opt,name=backup_settings,json=backupSettings,proto3" json:"backup_settings,omitempty"`
	Type           Backup_Type     `protobuf:"varint,11,opt,name=type,proto3,enum=yandex.cloud.ydb.v1.Backup_Type" json:"type,omitempty"`
	// size of backup in bytes.
	Size int64 `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Backup) Reset() {
	*x = Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup) ProtoMessage() {}

func (x *Backup) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ydb_v1_backup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup.ProtoReflect.Descriptor instead.
func (*Backup) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP(), []int{7}
}

func (x *Backup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Backup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Backup) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *Backup) GetDatabaseId() string {
	if x != nil {
		return x.DatabaseId
	}
	return ""
}

func (x *Backup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Backup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Backup) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Backup) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Backup) GetStatus() Backup_Status {
	if x != nil {
		return x.Status
	}
	return Backup_STATUS_UNSPECIFIED
}

func (x *Backup) GetBackupSettings() *BackupSettings {
	if x != nil {
		return x.BackupSettings
	}
	return nil
}

func (x *Backup) GetType() Backup_Type {
	if x != nil {
		return x.Type
	}
	return Backup_TYPE_UNSPECIFIED
}

func (x *Backup) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_yandex_cloud_ydb_v1_backup_proto protoreflect.FileDescriptor

var file_yandex_cloud_ydb_v1_backup_proto_rawDesc = []byte{
	0x0a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79,
	0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x66, 0x64, 0x61, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x64, 0x61, 0x79, 0x6f, 0x66, 0x77, 0x65, 0x65, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x97, 0x03, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x15, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x04, 0xc0, 0xc1, 0x31, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7,
	0x31, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x90,
	0x01, 0x0a, 0x18, 0x44, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x42, 0x07, 0x82, 0xc8, 0x31, 0x03, 0x31, 0x2d, 0x37, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x12, 0x3f, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x42, 0x04,
	0xe8, 0xc7, 0x31, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x70, 0x0a, 0x14, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x0c, 0x64, 0x61, 0x79,
	0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x07,
	0x82, 0xc8, 0x31, 0x03, 0x31, 0x2d, 0x37, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x4f, 0x66, 0x57,
	0x65, 0x65, 0x6b, 0x22, 0x56, 0x0a, 0x13, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x0b,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xea, 0x05, 0x0a, 0x0e,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x8a, 0xc8,
	0x31, 0x05, 0x3c, 0x3d, 0x32, 0x35, 0x36, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0x8a, 0xc8, 0x31, 0x05, 0x3c, 0x3d, 0x32, 0x35, 0x36, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x13, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69,
	0x76, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x09, 0x82, 0xc8, 0x31, 0x05, 0x3c, 0x3d,
	0x32, 0x35, 0x36, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x12, 0x40, 0x0a, 0x17, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x09, 0x82, 0xc8, 0x31, 0x05, 0x3c, 0x3d, 0x32, 0x35, 0x36, 0x52, 0x14, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x54, 0x6f, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x55, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x22, 0xba, 0x01, 0x0a, 0x0c,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x19,
	0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x44,
	0x55, 0x43, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x44, 0x55, 0x4e, 0x44, 0x41, 0x4e, 0x43, 0x59, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x41,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x45, 0x5a, 0x4f, 0x4e, 0x45, 0x5f, 0x49, 0x41,
	0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x54, 0x45, 0x4c, 0x4c, 0x49, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x49, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x47,
	0x4c, 0x41, 0x43, 0x49, 0x45, 0x52, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x45, 0x50,
	0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x55,
	0x54, 0x50, 0x4f, 0x53, 0x54, 0x53, 0x10, 0x08, 0x22, 0x5c, 0x0a, 0x0c, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x9e, 0x05, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x79,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x53,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x22, 0x32, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x42, 0x56, 0x0a, 0x17, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x79, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x79, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x79, 0x64, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_ydb_v1_backup_proto_rawDescOnce sync.Once
	file_yandex_cloud_ydb_v1_backup_proto_rawDescData = file_yandex_cloud_ydb_v1_backup_proto_rawDesc
)

func file_yandex_cloud_ydb_v1_backup_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ydb_v1_backup_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ydb_v1_backup_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ydb_v1_backup_proto_rawDescData)
	})
	return file_yandex_cloud_ydb_v1_backup_proto_rawDescData
}

var file_yandex_cloud_ydb_v1_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_yandex_cloud_ydb_v1_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_yandex_cloud_ydb_v1_backup_proto_goTypes = []interface{}{
	(BackupSettings_Type)(0),         // 0: yandex.cloud.ydb.v1.BackupSettings.Type
	(BackupSettings_StorageClass)(0), // 1: yandex.cloud.ydb.v1.BackupSettings.StorageClass
	(Backup_Status)(0),               // 2: yandex.cloud.ydb.v1.Backup.Status
	(Backup_Type)(0),                 // 3: yandex.cloud.ydb.v1.Backup.Type
	(*BackupSchedule)(nil),           // 4: yandex.cloud.ydb.v1.BackupSchedule
	(*RecurringBackupSchedule)(nil),  // 5: yandex.cloud.ydb.v1.RecurringBackupSchedule
	(*DaysOfWeekBackupSchedule)(nil), // 6: yandex.cloud.ydb.v1.DaysOfWeekBackupSchedule
	(*WeeklyBackupSchedule)(nil),     // 7: yandex.cloud.ydb.v1.WeeklyBackupSchedule
	(*DailyBackupSchedule)(nil),      // 8: yandex.cloud.ydb.v1.DailyBackupSchedule
	(*BackupSettings)(nil),           // 9: yandex.cloud.ydb.v1.BackupSettings
	(*BackupConfig)(nil),             // 10: yandex.cloud.ydb.v1.BackupConfig
	(*Backup)(nil),                   // 11: yandex.cloud.ydb.v1.Backup
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
	(dayofweek.DayOfWeek)(0),         // 13: google.type.DayOfWeek
	(*timeofday.TimeOfDay)(nil),      // 14: google.type.TimeOfDay
	(*durationpb.Duration)(nil),      // 15: google.protobuf.Duration
}
var file_yandex_cloud_ydb_v1_backup_proto_depIdxs = []int32{
	8,  // 0: yandex.cloud.ydb.v1.BackupSchedule.daily_backup_schedule:type_name -> yandex.cloud.ydb.v1.DailyBackupSchedule
	7,  // 1: yandex.cloud.ydb.v1.BackupSchedule.weekly_backup_schedule:type_name -> yandex.cloud.ydb.v1.WeeklyBackupSchedule
	5,  // 2: yandex.cloud.ydb.v1.BackupSchedule.recurring_backup_schedule:type_name -> yandex.cloud.ydb.v1.RecurringBackupSchedule
	12, // 3: yandex.cloud.ydb.v1.BackupSchedule.next_execute_time:type_name -> google.protobuf.Timestamp
	12, // 4: yandex.cloud.ydb.v1.RecurringBackupSchedule.start_time:type_name -> google.protobuf.Timestamp
	13, // 5: yandex.cloud.ydb.v1.DaysOfWeekBackupSchedule.days:type_name -> google.type.DayOfWeek
	14, // 6: yandex.cloud.ydb.v1.DaysOfWeekBackupSchedule.execute_time:type_name -> google.type.TimeOfDay
	6,  // 7: yandex.cloud.ydb.v1.WeeklyBackupSchedule.days_of_week:type_name -> yandex.cloud.ydb.v1.DaysOfWeekBackupSchedule
	14, // 8: yandex.cloud.ydb.v1.DailyBackupSchedule.execute_time:type_name -> google.type.TimeOfDay
	4,  // 9: yandex.cloud.ydb.v1.BackupSettings.backup_schedule:type_name -> yandex.cloud.ydb.v1.BackupSchedule
	15, // 10: yandex.cloud.ydb.v1.BackupSettings.backup_time_to_live:type_name -> google.protobuf.Duration
	0,  // 11: yandex.cloud.ydb.v1.BackupSettings.type:type_name -> yandex.cloud.ydb.v1.BackupSettings.Type
	1,  // 12: yandex.cloud.ydb.v1.BackupSettings.storage_class:type_name -> yandex.cloud.ydb.v1.BackupSettings.StorageClass
	9,  // 13: yandex.cloud.ydb.v1.BackupConfig.backup_settings:type_name -> yandex.cloud.ydb.v1.BackupSettings
	12, // 14: yandex.cloud.ydb.v1.Backup.created_at:type_name -> google.protobuf.Timestamp
	12, // 15: yandex.cloud.ydb.v1.Backup.started_at:type_name -> google.protobuf.Timestamp
	12, // 16: yandex.cloud.ydb.v1.Backup.completed_at:type_name -> google.protobuf.Timestamp
	2,  // 17: yandex.cloud.ydb.v1.Backup.status:type_name -> yandex.cloud.ydb.v1.Backup.Status
	9,  // 18: yandex.cloud.ydb.v1.Backup.backup_settings:type_name -> yandex.cloud.ydb.v1.BackupSettings
	3,  // 19: yandex.cloud.ydb.v1.Backup.type:type_name -> yandex.cloud.ydb.v1.Backup.Type
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ydb_v1_backup_proto_init() }
func file_yandex_cloud_ydb_v1_backup_proto_init() {
	if File_yandex_cloud_ydb_v1_backup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecurringBackupSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaysOfWeekBackupSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeeklyBackupSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyBackupSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ydb_v1_backup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_ydb_v1_backup_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*BackupSchedule_DailyBackupSchedule)(nil),
		(*BackupSchedule_WeeklyBackupSchedule)(nil),
		(*BackupSchedule_RecurringBackupSchedule)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ydb_v1_backup_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_ydb_v1_backup_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ydb_v1_backup_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_ydb_v1_backup_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_ydb_v1_backup_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ydb_v1_backup_proto = out.File
	file_yandex_cloud_ydb_v1_backup_proto_rawDesc = nil
	file_yandex_cloud_ydb_v1_backup_proto_goTypes = nil
	file_yandex_cloud_ydb_v1_backup_proto_depIdxs = nil
}
