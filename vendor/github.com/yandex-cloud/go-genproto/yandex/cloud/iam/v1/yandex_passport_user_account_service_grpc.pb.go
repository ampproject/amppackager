// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: yandex/cloud/iam/v1/yandex_passport_user_account_service.proto

package iam

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// YandexPassportUserAccountServiceClient is the client API for YandexPassportUserAccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type YandexPassportUserAccountServiceClient interface {
	// Returns the specified YandexPassportUserAccount resource.
	GetByLogin(ctx context.Context, in *GetUserAccountByLoginRequest, opts ...grpc.CallOption) (*UserAccount, error)
}

type yandexPassportUserAccountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewYandexPassportUserAccountServiceClient(cc grpc.ClientConnInterface) YandexPassportUserAccountServiceClient {
	return &yandexPassportUserAccountServiceClient{cc}
}

func (c *yandexPassportUserAccountServiceClient) GetByLogin(ctx context.Context, in *GetUserAccountByLoginRequest, opts ...grpc.CallOption) (*UserAccount, error) {
	out := new(UserAccount)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iam.v1.YandexPassportUserAccountService/GetByLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YandexPassportUserAccountServiceServer is the server API for YandexPassportUserAccountService service.
// All implementations should embed UnimplementedYandexPassportUserAccountServiceServer
// for forward compatibility
type YandexPassportUserAccountServiceServer interface {
	// Returns the specified YandexPassportUserAccount resource.
	GetByLogin(context.Context, *GetUserAccountByLoginRequest) (*UserAccount, error)
}

// UnimplementedYandexPassportUserAccountServiceServer should be embedded to have forward compatible implementations.
type UnimplementedYandexPassportUserAccountServiceServer struct {
}

func (UnimplementedYandexPassportUserAccountServiceServer) GetByLogin(context.Context, *GetUserAccountByLoginRequest) (*UserAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByLogin not implemented")
}

// UnsafeYandexPassportUserAccountServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to YandexPassportUserAccountServiceServer will
// result in compilation errors.
type UnsafeYandexPassportUserAccountServiceServer interface {
	mustEmbedUnimplementedYandexPassportUserAccountServiceServer()
}

func RegisterYandexPassportUserAccountServiceServer(s grpc.ServiceRegistrar, srv YandexPassportUserAccountServiceServer) {
	s.RegisterService(&YandexPassportUserAccountService_ServiceDesc, srv)
}

func _YandexPassportUserAccountService_GetByLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserAccountByLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YandexPassportUserAccountServiceServer).GetByLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iam.v1.YandexPassportUserAccountService/GetByLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YandexPassportUserAccountServiceServer).GetByLogin(ctx, req.(*GetUserAccountByLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// YandexPassportUserAccountService_ServiceDesc is the grpc.ServiceDesc for YandexPassportUserAccountService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var YandexPassportUserAccountService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.iam.v1.YandexPassportUserAccountService",
	HandlerType: (*YandexPassportUserAccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByLogin",
			Handler:    _YandexPassportUserAccountService_GetByLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/iam/v1/yandex_passport_user_account_service.proto",
}
