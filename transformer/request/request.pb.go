// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transformer/request/request.proto

package request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This should be kept in sync with HtmlFormat.Code in
// github.com/ampproject/amphtml/validator/validator.proto.
// Deprecated fields, do not reuse:
// reserved 5;
type Request_HtmlFormat int32

const (
	Request_UNKNOWN_CODE Request_HtmlFormat = 0
	Request_AMP          Request_HtmlFormat = 1
	Request_AMP4ADS      Request_HtmlFormat = 2
	Request_AMP4EMAIL    Request_HtmlFormat = 3
	Request_EXPERIMENTAL Request_HtmlFormat = 4
)

var Request_HtmlFormat_name = map[int32]string{
	0: "UNKNOWN_CODE",
	1: "AMP",
	2: "AMP4ADS",
	3: "AMP4EMAIL",
	4: "EXPERIMENTAL",
}

var Request_HtmlFormat_value = map[string]int32{
	"UNKNOWN_CODE": 0,
	"AMP":          1,
	"AMP4ADS":      2,
	"AMP4EMAIL":    3,
	"EXPERIMENTAL": 4,
}

func (x Request_HtmlFormat) String() string {
	return proto.EnumName(Request_HtmlFormat_name, int32(x))
}

func (Request_HtmlFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{0, 0}
}

type Request_TransformersConfig int32

const (
	// Execute the default list of transformers. For packager production
	// environments, this should be the config used.
	Request_DEFAULT Request_TransformersConfig = 0
	// Execute none, and simply parse and re-emit. Some normalization will be
	// performed regardless, including, but not limited to:
	// - HTML normalization (e.g. closing all non-void tags).
	// - removal of all comments
	// - lowercase-ing of attribute keys
	// - lexical sort of attribute keys
	// - text is escaped
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_NONE Request_TransformersConfig = 1
	// Execute the minimum needed for verification/validation.
	//
	// WARNING. FOR AMP CACHE USE ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_VALIDATION Request_TransformersConfig = 2
	// Execute a custom set of transformers.
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_CUSTOM Request_TransformersConfig = 3
)

var Request_TransformersConfig_name = map[int32]string{
	0: "DEFAULT",
	1: "NONE",
	2: "VALIDATION",
	3: "CUSTOM",
}

var Request_TransformersConfig_value = map[string]int32{
	"DEFAULT":    0,
	"NONE":       1,
	"VALIDATION": 2,
	"CUSTOM":     3,
}

func (x Request_TransformersConfig) String() string {
	return proto.EnumName(Request_TransformersConfig_name, int32(x))
}

func (Request_TransformersConfig) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{0, 1}
}

// A Request encapsulates input and contextual parameters for use by the
// transformers.
type Request struct {
	// The AMP HTML document to transform.
	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	// The public URL of the document, i.e. the location that should appear in
	// the browser URL bar.
	DocumentUrl string `protobuf:"bytes,2,opt,name=document_url,json=documentUrl,proto3" json:"document_url,omitempty"`
	// The AMP runtime version.
	Rtv string `protobuf:"bytes,4,opt,name=rtv,proto3" json:"rtv,omitempty"`
	// The CSS contents to inline into the transformed HTML
	Css string `protobuf:"bytes,5,opt,name=css,proto3" json:"css,omitempty"`
	// Transformations are only run if the HTML tag contains the attribute
	// specifying one of the provided formats. If allowed_formats is empty, then
	// all non-experimental AMP formats are allowed.
	AllowedFormats []Request_HtmlFormat       `protobuf:"varint,7,rep,packed,name=allowed_formats,json=allowedFormats,proto3,enum=amp.transform.Request_HtmlFormat" json:"allowed_formats,omitempty"`
	Config         Request_TransformersConfig `protobuf:"varint,6,opt,name=config,proto3,enum=amp.transform.Request_TransformersConfig" json:"config,omitempty"`
	// If config == CUSTOM, this is the list of custom transformers to execute,
	// in the order provided here. Otherwise, this is ignored.
	Transformers []string `protobuf:"bytes,3,rep,name=transformers,proto3" json:"transformers,omitempty"`
	// The version of the transforms to perform (optional). If specified, it must
	// be a supported version.
	Version              int64    `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *Request) GetDocumentUrl() string {
	if m != nil {
		return m.DocumentUrl
	}
	return ""
}

func (m *Request) GetRtv() string {
	if m != nil {
		return m.Rtv
	}
	return ""
}

func (m *Request) GetCss() string {
	if m != nil {
		return m.Css
	}
	return ""
}

func (m *Request) GetAllowedFormats() []Request_HtmlFormat {
	if m != nil {
		return m.AllowedFormats
	}
	return nil
}

func (m *Request) GetConfig() Request_TransformersConfig {
	if m != nil {
		return m.Config
	}
	return Request_DEFAULT
}

func (m *Request) GetTransformers() []string {
	if m != nil {
		return m.Transformers
	}
	return nil
}

func (m *Request) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// An inclusive range of version numbers.
type VersionRange struct {
	Min                  int64    `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  int64    `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRange) Reset()         { *m = VersionRange{} }
func (m *VersionRange) String() string { return proto.CompactTextString(m) }
func (*VersionRange) ProtoMessage()    {}
func (*VersionRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{1}
}

func (m *VersionRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRange.Unmarshal(m, b)
}
func (m *VersionRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRange.Marshal(b, m, deterministic)
}
func (m *VersionRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRange.Merge(m, src)
}
func (m *VersionRange) XXX_Size() int {
	return xxx_messageInfo_VersionRange.Size(m)
}
func (m *VersionRange) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRange.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRange proto.InternalMessageInfo

func (m *VersionRange) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *VersionRange) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

// A Metadata is part of the transformers' response, and includes additional
// information either not present in or not easily accessible from the HTML. It
// should remain relatively small, as it undergoes a
// serialization/deserialization round-trip when the Go library is called from
// C.
type Metadata struct {
	// Absolute URLs of resources that should be preloaded when the AMP is
	// prefetched. In a signed exchange (SXG) context, these would be included as
	// `Link: rel=preload` headers, as these are used by the browser during SXG
	// prefetch:
	// https://github.com/WICG/webpackage/blob/master/explainer.md#prefetching-stops-here
	Preloads []*Metadata_Preload `protobuf:"bytes,1,rep,name=preloads,proto3" json:"preloads,omitempty"`
	// Recommended validity duration (`expires - date`), in seconds, of the SXG,
	// based on the content being signed. In particular, JS is given a shorter
	// lifetime to reduce risk of issues due to downgrades:
	// https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#seccons-downgrades.
	MaxAgeSecs           int32    `protobuf:"varint,2,opt,name=max_age_secs,json=maxAgeSecs,proto3" json:"max_age_secs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetPreloads() []*Metadata_Preload {
	if m != nil {
		return m.Preloads
	}
	return nil
}

func (m *Metadata) GetMaxAgeSecs() int32 {
	if m != nil {
		return m.MaxAgeSecs
	}
	return 0
}

type Metadata_Preload struct {
	// The URL of the resource to preload. Will be an absolute URL on the domain
	// of the target AMP cache.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// The `as` attribute of the preload, as specified in
	// https://w3c.github.io/preload/#as-attribute and
	// https://html.spec.whatwg.org/multipage/semantics.html#attr-link-as. The
	// full list of potential values is specified in
	// https://fetch.spec.whatwg.org/#concept-request-destination, though for
	// the time being only "script", "style", and "image" are allowed.
	As string `protobuf:"bytes,2,opt,name=as,proto3" json:"as,omitempty"`
	// The media attribute for image preload link. This attribute is useful
	// only for image links. Deprecated, instead use the `attributes` field.
	Media string `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"` // Deprecated: Do not use.
	// Optional remaining attributes. This does not include the `href` or `as`
	// attributes.
	Attributes []*Metadata_Preload_Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// If true, this is a modulepreload instead of a preload.
	Module               bool     `protobuf:"varint,5,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata_Preload) Reset()         { *m = Metadata_Preload{} }
func (m *Metadata_Preload) String() string { return proto.CompactTextString(m) }
func (*Metadata_Preload) ProtoMessage()    {}
func (*Metadata_Preload) Descriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{2, 0}
}

func (m *Metadata_Preload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata_Preload.Unmarshal(m, b)
}
func (m *Metadata_Preload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata_Preload.Marshal(b, m, deterministic)
}
func (m *Metadata_Preload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata_Preload.Merge(m, src)
}
func (m *Metadata_Preload) XXX_Size() int {
	return xxx_messageInfo_Metadata_Preload.Size(m)
}
func (m *Metadata_Preload) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata_Preload.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata_Preload proto.InternalMessageInfo

func (m *Metadata_Preload) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Metadata_Preload) GetAs() string {
	if m != nil {
		return m.As
	}
	return ""
}

// Deprecated: Do not use.
func (m *Metadata_Preload) GetMedia() string {
	if m != nil {
		return m.Media
	}
	return ""
}

func (m *Metadata_Preload) GetAttributes() []*Metadata_Preload_Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Metadata_Preload) GetModule() bool {
	if m != nil {
		return m.Module
	}
	return false
}

type Metadata_Preload_Attribute struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata_Preload_Attribute) Reset()         { *m = Metadata_Preload_Attribute{} }
func (m *Metadata_Preload_Attribute) String() string { return proto.CompactTextString(m) }
func (*Metadata_Preload_Attribute) ProtoMessage()    {}
func (*Metadata_Preload_Attribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{2, 0, 0}
}

func (m *Metadata_Preload_Attribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata_Preload_Attribute.Unmarshal(m, b)
}
func (m *Metadata_Preload_Attribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata_Preload_Attribute.Marshal(b, m, deterministic)
}
func (m *Metadata_Preload_Attribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata_Preload_Attribute.Merge(m, src)
}
func (m *Metadata_Preload_Attribute) XXX_Size() int {
	return xxx_messageInfo_Metadata_Preload_Attribute.Size(m)
}
func (m *Metadata_Preload_Attribute) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata_Preload_Attribute.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata_Preload_Attribute proto.InternalMessageInfo

func (m *Metadata_Preload_Attribute) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Metadata_Preload_Attribute) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func init() {
	proto.RegisterEnum("amp.transform.Request_HtmlFormat", Request_HtmlFormat_name, Request_HtmlFormat_value)
	proto.RegisterEnum("amp.transform.Request_TransformersConfig", Request_TransformersConfig_name, Request_TransformersConfig_value)
	proto.RegisterType((*Request)(nil), "amp.transform.Request")
	proto.RegisterType((*VersionRange)(nil), "amp.transform.VersionRange")
	proto.RegisterType((*Metadata)(nil), "amp.transform.Metadata")
	proto.RegisterType((*Metadata_Preload)(nil), "amp.transform.Metadata.Preload")
	proto.RegisterType((*Metadata_Preload_Attribute)(nil), "amp.transform.Metadata.Preload.Attribute")
}

func init() {
	proto.RegisterFile("transformer/request/request.proto", fileDescriptor_762cce2ac5f73405)
}

var fileDescriptor_762cce2ac5f73405 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x72, 0xda, 0x3c,
	0x14, 0x8d, 0x2d, 0xc2, 0xcf, 0x0d, 0xe1, 0xf3, 0x68, 0xf1, 0x8d, 0x26, 0x9b, 0x3a, 0xac, 0xc8,
	0xc6, 0xcc, 0xd0, 0x76, 0xba, 0xe8, 0xca, 0x09, 0x4e, 0x4b, 0x0b, 0x86, 0x51, 0x20, 0xed, 0x74,
	0xc3, 0x28, 0x46, 0x21, 0x34, 0x16, 0xa6, 0x92, 0x48, 0xc9, 0x03, 0xf6, 0x01, 0xba, 0xec, 0xdb,
	0x74, 0x24, 0x63, 0x92, 0xf4, 0x67, 0xba, 0xd2, 0xb9, 0x47, 0xf7, 0x48, 0x67, 0xee, 0x0f, 0x1c,
	0x6b, 0xc9, 0x96, 0xea, 0x3a, 0x93, 0x82, 0xcb, 0xb6, 0xe4, 0x5f, 0xd6, 0x5c, 0xe9, 0xe2, 0x0c,
	0x56, 0x32, 0xd3, 0x19, 0x3e, 0x64, 0x62, 0x15, 0xec, 0xd2, 0x9a, 0xdf, 0x11, 0x54, 0x68, 0x9e,
	0x80, 0x31, 0x94, 0x6e, 0xb4, 0x48, 0x89, 0xe3, 0x3b, 0xad, 0x1a, 0xb5, 0x18, 0x1f, 0x43, 0x7d,
	0x96, 0x25, 0x6b, 0xc1, 0x97, 0x7a, 0xba, 0x96, 0x29, 0x71, 0xed, 0xdd, 0x41, 0xc1, 0x4d, 0x64,
	0x8a, 0x3d, 0x40, 0x52, 0xdf, 0x91, 0x92, 0xbd, 0x31, 0xd0, 0x30, 0x89, 0x52, 0x64, 0x3f, 0x67,
	0x12, 0xa5, 0xf0, 0x3b, 0xf8, 0x8f, 0xa5, 0x69, 0xf6, 0x95, 0xcf, 0xa6, 0xe6, 0x5b, 0xa6, 0x15,
	0xa9, 0xf8, 0xa8, 0xd5, 0xe8, 0x1c, 0x07, 0x4f, 0xfc, 0x04, 0x5b, 0x2f, 0xc1, 0x5b, 0x2d, 0xd2,
	0x73, 0x9b, 0x49, 0x1b, 0x5b, 0x65, 0x1e, 0x2a, 0x1c, 0x42, 0x39, 0xc9, 0x96, 0xd7, 0x8b, 0x39,
	0x29, 0xfb, 0x4e, 0xab, 0xd1, 0x39, 0xf9, 0xcb, 0x13, 0xe3, 0x87, 0x5a, 0xa8, 0x33, 0x2b, 0xa0,
	0x5b, 0x21, 0x6e, 0x42, 0xfd, 0x51, 0xa5, 0x14, 0x41, 0x3e, 0x6a, 0xd5, 0xe8, 0x13, 0x0e, 0x13,
	0xa8, 0xdc, 0x71, 0xa9, 0x16, 0xd9, 0x92, 0x54, 0x7d, 0xa7, 0x85, 0x68, 0x11, 0x36, 0x27, 0x00,
	0x0f, 0xf6, 0xb0, 0x07, 0xf5, 0x49, 0xfc, 0x3e, 0x1e, 0x7e, 0x88, 0xa7, 0x67, 0xc3, 0x6e, 0xe4,
	0xed, 0xe1, 0x0a, 0xa0, 0x70, 0x30, 0xf2, 0x1c, 0x7c, 0x00, 0x95, 0x70, 0x30, 0x7a, 0x11, 0x76,
	0x2f, 0x3c, 0x17, 0x1f, 0x42, 0xcd, 0x04, 0xd1, 0x20, 0xec, 0xf5, 0x3d, 0x64, 0x64, 0xd1, 0xc7,
	0x51, 0x44, 0x7b, 0x83, 0x28, 0x1e, 0x87, 0x7d, 0xaf, 0xd4, 0x7c, 0x03, 0xf8, 0x77, 0xcb, 0xe6,
	0x8d, 0x6e, 0x74, 0x1e, 0x4e, 0xfa, 0x63, 0x6f, 0x0f, 0x57, 0xa1, 0x14, 0x0f, 0xe3, 0xc8, 0x73,
	0x70, 0x03, 0xe0, 0x32, 0xec, 0xf7, 0xba, 0xe1, 0xb8, 0x37, 0x8c, 0x3d, 0x17, 0x03, 0x94, 0xcf,
	0x26, 0x17, 0xe3, 0xe1, 0xc0, 0x43, 0xcd, 0x0e, 0xd4, 0x2f, 0x73, 0xab, 0x94, 0x2d, 0xe7, 0xdc,
	0xb4, 0x43, 0x2c, 0x96, 0xb6, 0xad, 0x88, 0x1a, 0x68, 0x19, 0xb6, 0xb1, 0xcd, 0x34, 0x0c, 0xdb,
	0x34, 0xbf, 0xb9, 0x50, 0x1d, 0x70, 0xcd, 0x66, 0x4c, 0x33, 0xfc, 0x1a, 0xaa, 0x2b, 0xc9, 0xd3,
	0x8c, 0xcd, 0x14, 0x71, 0x7c, 0xd4, 0x3a, 0xe8, 0x3c, 0xfb, 0xa5, 0xc6, 0x45, 0x6a, 0x30, 0xca,
	0xf3, 0xe8, 0x4e, 0x80, 0x7d, 0xa8, 0x0b, 0xb6, 0x99, 0xb2, 0x39, 0x9f, 0x2a, 0x9e, 0x28, 0xfb,
	0xc9, 0x3e, 0x05, 0xc1, 0x36, 0xe1, 0x9c, 0x5f, 0xf0, 0x44, 0x1d, 0xfd, 0x70, 0xa0, 0xb2, 0xd5,
	0x19, 0x27, 0x66, 0xac, 0xf2, 0x91, 0x33, 0x10, 0x37, 0xc0, 0x65, 0x6a, 0x3b, 0x67, 0x2e, 0x33,
	0x7d, 0xd8, 0x17, 0x7c, 0xb6, 0x60, 0x04, 0x19, 0xea, 0xd4, 0x25, 0x0e, 0xcd, 0x09, 0xdc, 0x03,
	0x60, 0x5a, 0xcb, 0xc5, 0xd5, 0x5a, 0x73, 0x45, 0x4a, 0xd6, 0xe8, 0xc9, 0x3f, 0x8c, 0x06, 0x61,
	0xa1, 0xa0, 0x8f, 0xc4, 0xf8, 0x7f, 0x28, 0x8b, 0x6c, 0xb6, 0x4e, 0xb9, 0x1d, 0xda, 0x2a, 0xdd,
	0x46, 0x47, 0x6d, 0xa8, 0xed, 0x04, 0xc6, 0xeb, 0x2d, 0xbf, 0x2f, 0xbc, 0xde, 0xf2, 0x7b, 0xc3,
	0xdc, 0xb1, 0x62, 0x29, 0x0c, 0x3c, 0x7d, 0xf5, 0xe9, 0xe5, 0x7c, 0xa1, 0x6f, 0xd6, 0x57, 0x41,
	0x92, 0x89, 0x36, 0x13, 0xab, 0x95, 0xcc, 0x3e, 0xf3, 0x44, 0x5b, 0xc8, 0x92, 0x5b, 0x36, 0xe7,
	0xb2, 0xfd, 0x87, 0x2d, 0xbd, 0x2a, 0xdb, 0xf5, 0x7c, 0xfe, 0x33, 0x00, 0x00, 0xff, 0xff, 0xa7,
	0x23, 0x3f, 0xb6, 0xc3, 0x03, 0x00, 0x00,
}
