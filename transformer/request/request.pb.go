// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transformer/request/request.proto

package request // import "github.com/ampproject/amppackager/transformer/request"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request_TransformersConfig int32

const (
	// Execute the default list of transformers. For packager production
	// environments, this should be the config used.
	Request_DEFAULT Request_TransformersConfig = 0
	// Execute none, and simply parse and re-emit. Some normalization will be
	// performed regardless, including, but not limited to:
	// - HTML normalization (e.g. closing all non-void tags).
	// - removal of all comments
	// - lowercase-ing of attribute keys
	// - lexical sort of attribute keys
	// - text is escaped
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_NONE Request_TransformersConfig = 1
	// Execute the minimum needed for verification/validation.
	//
	// WARNING. FOR AMP CACHE USE ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_VALIDATION Request_TransformersConfig = 2
	// Execute a custom set of transformers.
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_CUSTOM Request_TransformersConfig = 3
)

var Request_TransformersConfig_name = map[int32]string{
	0: "DEFAULT",
	1: "NONE",
	2: "VALIDATION",
	3: "CUSTOM",
}

var Request_TransformersConfig_value = map[string]int32{
	"DEFAULT":    0,
	"NONE":       1,
	"VALIDATION": 2,
	"CUSTOM":     3,
}

func (x Request_TransformersConfig) String() string {
	return proto.EnumName(Request_TransformersConfig_name, int32(x))
}

func (Request_TransformersConfig) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{0, 0}
}

// A Request encapsulates input and contextual parameters for use by the
// local transformation library.
type Request struct {
	// The AMP HTML document to transform.
	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	// The public URL of the document, i.e. the location that should appear in
	// the browser URL bar.
	DocumentUrl string `protobuf:"bytes,2,opt,name=document_url,json=documentUrl,proto3" json:"document_url,omitempty"`
	// The AMP runtime version.
	Rtv string `protobuf:"bytes,4,opt,name=rtv,proto3" json:"rtv,omitempty"`
	// The CSS contents to inline into the transformed HTML
	Css    string                     `protobuf:"bytes,5,opt,name=css,proto3" json:"css,omitempty"`
	Config Request_TransformersConfig `protobuf:"varint,6,opt,name=config,proto3,enum=amp.transform.Request_TransformersConfig" json:"config,omitempty"`
	// If config == CUSTOM, this is the list of custom transformers to execute,
	// in the order provided here. Otherwise, this is ignored.
	Transformers         []string `protobuf:"bytes,3,rep,name=transformers,proto3" json:"transformers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_762cce2ac5f73405, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *Request) GetDocumentUrl() string {
	if m != nil {
		return m.DocumentUrl
	}
	return ""
}

func (m *Request) GetRtv() string {
	if m != nil {
		return m.Rtv
	}
	return ""
}

func (m *Request) GetCss() string {
	if m != nil {
		return m.Css
	}
	return ""
}

func (m *Request) GetConfig() Request_TransformersConfig {
	if m != nil {
		return m.Config
	}
	return Request_DEFAULT
}

func (m *Request) GetTransformers() []string {
	if m != nil {
		return m.Transformers
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "amp.transform.Request")
	proto.RegisterEnum("amp.transform.Request_TransformersConfig", Request_TransformersConfig_name, Request_TransformersConfig_value)
}

func init() { proto.RegisterFile("transformer/request/request.proto", fileDescriptor_762cce2ac5f73405) }

var fileDescriptor_762cce2ac5f73405 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0xff, 0xa5, 0xfc, 0x8b, 0x0c, 0x48, 0x9a, 0x39, 0xed, 0x11, 0x38, 0xe1, 0x65, 0x49,
	0x34, 0xc6, 0x73, 0x05, 0x34, 0x24, 0xd8, 0x26, 0xb5, 0xf5, 0xe0, 0xc5, 0x94, 0x75, 0x29, 0x68,
	0xb7, 0x5b, 0x77, 0xb7, 0x7e, 0x12, 0x3f, 0xb0, 0x61, 0x01, 0x95, 0xe8, 0x69, 0x5f, 0x7e, 0x33,
	0x6f, 0xf3, 0xe6, 0xc1, 0xc0, 0xa8, 0xac, 0xd4, 0x2b, 0xa9, 0x04, 0x57, 0x63, 0xc5, 0xdf, 0x6a,
	0xae, 0xcd, 0xe1, 0xa5, 0x95, 0x92, 0x46, 0xe2, 0x69, 0x26, 0x2a, 0xfa, 0xb5, 0x36, 0xfc, 0x68,
	0x40, 0x2b, 0xde, 0x2d, 0x20, 0x42, 0x73, 0x6d, 0x44, 0x41, 0x9c, 0xbe, 0x33, 0x6a, 0xc7, 0x56,
	0xe3, 0x00, 0xba, 0xcf, 0x92, 0xd5, 0x82, 0x97, 0xe6, 0xa9, 0x56, 0x05, 0x69, 0xd8, 0x59, 0xe7,
	0xc0, 0x52, 0x55, 0xa0, 0x0f, 0xae, 0x32, 0xef, 0xa4, 0x69, 0x27, 0x5b, 0xb9, 0x25, 0x4c, 0x6b,
	0xf2, 0x7f, 0x47, 0x98, 0xd6, 0x18, 0x80, 0xc7, 0x64, 0xb9, 0xda, 0xe4, 0xc4, 0xeb, 0x3b, 0xa3,
	0xde, 0xf9, 0x19, 0x3d, 0x8a, 0x41, 0xf7, 0x11, 0x68, 0xf2, 0x9d, 0x5f, 0x4f, 0xac, 0x21, 0xde,
	0x1b, 0x71, 0x08, 0xdd, 0x1f, 0xd7, 0x69, 0xe2, 0xf6, 0xdd, 0x51, 0x3b, 0x3e, 0x62, 0xc3, 0x5b,
	0xc0, 0xdf, 0x3f, 0x60, 0x07, 0x5a, 0xd3, 0xd9, 0x4d, 0x90, 0x2e, 0x12, 0xff, 0x1f, 0x9e, 0x40,
	0x33, 0x8c, 0xc2, 0x99, 0xef, 0x60, 0x0f, 0xe0, 0x21, 0x58, 0xcc, 0xa7, 0x41, 0x32, 0x8f, 0x42,
	0xbf, 0x81, 0x00, 0xde, 0x24, 0xbd, 0x4f, 0xa2, 0x3b, 0xdf, 0xbd, 0xbe, 0x7a, 0xbc, 0xcc, 0x37,
	0x66, 0x5d, 0x2f, 0x29, 0x93, 0x62, 0x9c, 0x89, 0xaa, 0x52, 0xf2, 0x85, 0x33, 0x63, 0x65, 0xc6,
	0x5e, 0xb3, 0x9c, 0xab, 0xf1, 0x1f, 0x65, 0x2f, 0x3d, 0xdb, 0xf2, 0xc5, 0x67, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x18, 0xd2, 0x44, 0xed, 0x8a, 0x01, 0x00, 0x00,
}
