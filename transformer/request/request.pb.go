// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: transformer/request/request.proto

package request

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This should be kept in sync with HtmlFormat.Code in
// github.com/ampproject/amphtml/validator/validator.proto.
// Deprecated fields, do not reuse:
// reserved 5;
type Request_HtmlFormat int32

const (
	Request_UNKNOWN_CODE Request_HtmlFormat = 0 // Never used
	Request_AMP          Request_HtmlFormat = 1
	Request_AMP4ADS      Request_HtmlFormat = 2
	Request_AMP4EMAIL    Request_HtmlFormat = 3
	Request_EXPERIMENTAL Request_HtmlFormat = 4 // Currently unused
)

// Enum value maps for Request_HtmlFormat.
var (
	Request_HtmlFormat_name = map[int32]string{
		0: "UNKNOWN_CODE",
		1: "AMP",
		2: "AMP4ADS",
		3: "AMP4EMAIL",
		4: "EXPERIMENTAL",
	}
	Request_HtmlFormat_value = map[string]int32{
		"UNKNOWN_CODE": 0,
		"AMP":          1,
		"AMP4ADS":      2,
		"AMP4EMAIL":    3,
		"EXPERIMENTAL": 4,
	}
)

func (x Request_HtmlFormat) Enum() *Request_HtmlFormat {
	p := new(Request_HtmlFormat)
	*p = x
	return p
}

func (x Request_HtmlFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request_HtmlFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_transformer_request_request_proto_enumTypes[0].Descriptor()
}

func (Request_HtmlFormat) Type() protoreflect.EnumType {
	return &file_transformer_request_request_proto_enumTypes[0]
}

func (x Request_HtmlFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request_HtmlFormat.Descriptor instead.
func (Request_HtmlFormat) EnumDescriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{0, 0}
}

type Request_TransformersConfig int32

const (
	// Execute the default list of transformers. For packager production
	// environments, this should be the config used.
	Request_DEFAULT Request_TransformersConfig = 0
	// Execute none, and simply parse and re-emit. Some normalization will be
	// performed regardless, including, but not limited to:
	// - HTML normalization (e.g. closing all non-void tags).
	// - removal of all comments
	// - lowercase-ing of attribute keys
	// - lexical sort of attribute keys
	// - text is escaped
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_NONE Request_TransformersConfig = 1
	// Execute the minimum needed for verification/validation.
	//
	// WARNING. FOR AMP CACHE USE ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_VALIDATION Request_TransformersConfig = 2
	// Execute a custom set of transformers.
	//
	// WARNING. THIS IS FOR TESTING PURPOSES ONLY.
	// Use of this setting in a packager production environment could produce
	// invalid transformed AMP when ingested by AMP caches.
	Request_CUSTOM Request_TransformersConfig = 3
)

// Enum value maps for Request_TransformersConfig.
var (
	Request_TransformersConfig_name = map[int32]string{
		0: "DEFAULT",
		1: "NONE",
		2: "VALIDATION",
		3: "CUSTOM",
	}
	Request_TransformersConfig_value = map[string]int32{
		"DEFAULT":    0,
		"NONE":       1,
		"VALIDATION": 2,
		"CUSTOM":     3,
	}
)

func (x Request_TransformersConfig) Enum() *Request_TransformersConfig {
	p := new(Request_TransformersConfig)
	*p = x
	return p
}

func (x Request_TransformersConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request_TransformersConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_transformer_request_request_proto_enumTypes[1].Descriptor()
}

func (Request_TransformersConfig) Type() protoreflect.EnumType {
	return &file_transformer_request_request_proto_enumTypes[1]
}

func (x Request_TransformersConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request_TransformersConfig.Descriptor instead.
func (Request_TransformersConfig) EnumDescriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{0, 1}
}

// A Request encapsulates input and contextual parameters for use by the
// transformers.
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The AMP HTML document to transform.
	Html string `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	// The public URL of the document, i.e. the location that should appear in
	// the browser URL bar.
	DocumentUrl string `protobuf:"bytes,2,opt,name=document_url,json=documentUrl,proto3" json:"document_url,omitempty"`
	// The AMP runtime version.
	Rtv string `protobuf:"bytes,4,opt,name=rtv,proto3" json:"rtv,omitempty"`
	// The CSS contents to inline into the transformed HTML
	Css string `protobuf:"bytes,5,opt,name=css,proto3" json:"css,omitempty"`
	// Transformations are only run if the HTML tag contains the attribute
	// specifying one of the provided formats. If allowed_formats is empty, then
	// all non-experimental AMP formats are allowed.
	AllowedFormats []Request_HtmlFormat       `protobuf:"varint,7,rep,packed,name=allowed_formats,json=allowedFormats,proto3,enum=amp.transform.Request_HtmlFormat" json:"allowed_formats,omitempty"`
	Config         Request_TransformersConfig `protobuf:"varint,6,opt,name=config,proto3,enum=amp.transform.Request_TransformersConfig" json:"config,omitempty"`
	// If config == CUSTOM, this is the list of custom transformers to execute,
	// in the order provided here. Otherwise, this is ignored.
	Transformers []string `protobuf:"bytes,3,rep,name=transformers,proto3" json:"transformers,omitempty"`
	// The version of the transforms to perform (optional). If specified, it must
	// be a supported version.
	Version int64 `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transformer_request_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_transformer_request_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *Request) GetDocumentUrl() string {
	if x != nil {
		return x.DocumentUrl
	}
	return ""
}

func (x *Request) GetRtv() string {
	if x != nil {
		return x.Rtv
	}
	return ""
}

func (x *Request) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

func (x *Request) GetAllowedFormats() []Request_HtmlFormat {
	if x != nil {
		return x.AllowedFormats
	}
	return nil
}

func (x *Request) GetConfig() Request_TransformersConfig {
	if x != nil {
		return x.Config
	}
	return Request_DEFAULT
}

func (x *Request) GetTransformers() []string {
	if x != nil {
		return x.Transformers
	}
	return nil
}

func (x *Request) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// An inclusive range of version numbers.
type VersionRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max int64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *VersionRange) Reset() {
	*x = VersionRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transformer_request_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRange) ProtoMessage() {}

func (x *VersionRange) ProtoReflect() protoreflect.Message {
	mi := &file_transformer_request_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRange.ProtoReflect.Descriptor instead.
func (*VersionRange) Descriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{1}
}

func (x *VersionRange) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *VersionRange) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

// A Metadata is part of the transformers' response, and includes additional
// information either not present in or not easily accessible from the HTML. It
// should remain relatively small, as it undergoes a
// serialization/deserialization round-trip when the Go library is called from
// C.
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Absolute URLs of resources that should be preloaded when the AMP is
	// prefetched. In a signed exchange (SXG) context, these would be included as
	// `Link: rel=preload` headers, as these are used by the browser during SXG
	// prefetch:
	// https://github.com/WICG/webpackage/blob/master/explainer.md#prefetching-stops-here
	Preloads []*Metadata_Preload `protobuf:"bytes,1,rep,name=preloads,proto3" json:"preloads,omitempty"`
	// Recommended validity duration (`expires - date`), in seconds, of the SXG,
	// based on the content being signed. In particular, JS is given a shorter
	// lifetime to reduce risk of issues due to downgrades:
	// https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#seccons-downgrades.
	MaxAgeSecs int32 `protobuf:"varint,2,opt,name=max_age_secs,json=maxAgeSecs,proto3" json:"max_age_secs,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transformer_request_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_transformer_request_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetPreloads() []*Metadata_Preload {
	if x != nil {
		return x.Preloads
	}
	return nil
}

func (x *Metadata) GetMaxAgeSecs() int32 {
	if x != nil {
		return x.MaxAgeSecs
	}
	return 0
}

type Metadata_Preload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The URL of the resource to preload. Will be an absolute URL on the domain
	// of the target AMP cache.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// The `as` attribute of the preload, as specified in
	// https://w3c.github.io/preload/#as-attribute and
	// https://html.spec.whatwg.org/multipage/semantics.html#attr-link-as. The
	// full list of potential values is specified in
	// https://fetch.spec.whatwg.org/#concept-request-destination, though for
	// the time being only "script", "style", and "image" are allowed.
	As string `protobuf:"bytes,2,opt,name=as,proto3" json:"as,omitempty"`
	// The media attribute for image preload link. This attribute is useful
	// only for image links. Deprecated, instead use the `attributes` field.
	//
	// Deprecated: Do not use.
	Media string `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
	// Optional remaining attributes. This does not include the `href` or `as`
	// attributes.
	Attributes []*Metadata_Preload_Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Metadata_Preload) Reset() {
	*x = Metadata_Preload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transformer_request_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Preload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Preload) ProtoMessage() {}

func (x *Metadata_Preload) ProtoReflect() protoreflect.Message {
	mi := &file_transformer_request_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Preload.ProtoReflect.Descriptor instead.
func (*Metadata_Preload) Descriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Metadata_Preload) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Metadata_Preload) GetAs() string {
	if x != nil {
		return x.As
	}
	return ""
}

// Deprecated: Do not use.
func (x *Metadata_Preload) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

func (x *Metadata_Preload) GetAttributes() []*Metadata_Preload_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Metadata_Preload_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Metadata_Preload_Attribute) Reset() {
	*x = Metadata_Preload_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transformer_request_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Preload_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Preload_Attribute) ProtoMessage() {}

func (x *Metadata_Preload_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_transformer_request_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Preload_Attribute.ProtoReflect.Descriptor instead.
func (*Metadata_Preload_Attribute) Descriptor() ([]byte, []int) {
	return file_transformer_request_request_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *Metadata_Preload_Attribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Metadata_Preload_Attribute) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

var File_transformer_request_request_proto protoreflect.FileDescriptor

var file_transformer_request_request_proto_rawDesc = []byte{
	0x0a, 0x21, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x6d, 0x70, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0xd1, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74,
	0x6d, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x74, 0x76, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x72, 0x74, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x6d, 0x70, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6d, 0x70, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x0a, 0x48, 0x74, 0x6d, 0x6c, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d, 0x50, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x4d, 0x50, 0x34, 0x41, 0x44, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x4d, 0x50, 0x34, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x45,
	0x58, 0x50, 0x45, 0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x10, 0x04, 0x22, 0x47, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55,
	0x53, 0x54, 0x4f, 0x4d, 0x10, 0x03, 0x22, 0x32, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0xad, 0x02, 0x0a, 0x08, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6d, 0x70, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x70, 0x72, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x41,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x73, 0x1a, 0xc1, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x49,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6d, 0x70, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x2f, 0x0a, 0x09, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x70, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x61, 0x6d, 0x70, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transformer_request_request_proto_rawDescOnce sync.Once
	file_transformer_request_request_proto_rawDescData = file_transformer_request_request_proto_rawDesc
)

func file_transformer_request_request_proto_rawDescGZIP() []byte {
	file_transformer_request_request_proto_rawDescOnce.Do(func() {
		file_transformer_request_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_transformer_request_request_proto_rawDescData)
	})
	return file_transformer_request_request_proto_rawDescData
}

var file_transformer_request_request_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_transformer_request_request_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_transformer_request_request_proto_goTypes = []interface{}{
	(Request_HtmlFormat)(0),            // 0: amp.transform.Request.HtmlFormat
	(Request_TransformersConfig)(0),    // 1: amp.transform.Request.TransformersConfig
	(*Request)(nil),                    // 2: amp.transform.Request
	(*VersionRange)(nil),               // 3: amp.transform.VersionRange
	(*Metadata)(nil),                   // 4: amp.transform.Metadata
	(*Metadata_Preload)(nil),           // 5: amp.transform.Metadata.Preload
	(*Metadata_Preload_Attribute)(nil), // 6: amp.transform.Metadata.Preload.Attribute
}
var file_transformer_request_request_proto_depIdxs = []int32{
	0, // 0: amp.transform.Request.allowed_formats:type_name -> amp.transform.Request.HtmlFormat
	1, // 1: amp.transform.Request.config:type_name -> amp.transform.Request.TransformersConfig
	5, // 2: amp.transform.Metadata.preloads:type_name -> amp.transform.Metadata.Preload
	6, // 3: amp.transform.Metadata.Preload.attributes:type_name -> amp.transform.Metadata.Preload.Attribute
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_transformer_request_request_proto_init() }
func file_transformer_request_request_proto_init() {
	if File_transformer_request_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transformer_request_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transformer_request_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transformer_request_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transformer_request_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Preload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transformer_request_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Preload_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transformer_request_request_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transformer_request_request_proto_goTypes,
		DependencyIndexes: file_transformer_request_request_proto_depIdxs,
		EnumInfos:         file_transformer_request_request_proto_enumTypes,
		MessageInfos:      file_transformer_request_request_proto_msgTypes,
	}.Build()
	File_transformer_request_request_proto = out.File
	file_transformer_request_request_proto_rawDesc = nil
	file_transformer_request_request_proto_goTypes = nil
	file_transformer_request_request_proto_depIdxs = nil
}
